###############################################################################
#
# IAR ANSI C/C++ Compiler V8.32.1.169/W32 for ARM         08/Jul/2019  00:40:55
# Copyright 1999-2018 IAR Systems AB.
#
#    Cpu mode     =  
#    Endian       =  little
#    Source file  =  G:\AIcar\@@\xiugai\lib\Jay\function.c
#    Command line =  
#        -f C:\Users\admin\AppData\Local\Temp\EW5FB6.tmp
#        (G:\AIcar\@@\xiugai\lib\Jay\function.c -D LPLD_K60 -lCN
#        "G:\AIcar\@@\xiugai\project\28-(SDHC)LPLD_SdCard\iar\FLASH\List"
#        -lB
#        "G:\AIcar\@@\xiugai\project\28-(SDHC)LPLD_SdCard\iar\FLASH\List"
#        -o "G:\AIcar\@@\xiugai\project\28-(SDHC)LPLD_SdCard\iar\FLASH\Obj"
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M4 -e --fpu=None --dlib_config
#        G:\AIcar\arm\inc\c\DLib_Config_Normal.h -I
#        "G:\AIcar\@@\xiugai\project\28-(SDHC)LPLD_SdCard\iar\..\app\" -I
#        "G:\AIcar\@@\xiugai\project\28-(SDHC)LPLD_SdCard\iar\..\..\..\lib\CPU\"
#        -I
#        "G:\AIcar\@@\xiugai\project\28-(SDHC)LPLD_SdCard\iar\..\..\..\lib\common\"
#        -I
#        "G:\AIcar\@@\xiugai\project\28-(SDHC)LPLD_SdCard\iar\..\..\..\lib\LPLD\"
#        -I
#        "G:\AIcar\@@\xiugai\project\28-(SDHC)LPLD_SdCard\iar\..\..\..\lib\LPLD\HW\"
#        -I
#        "G:\AIcar\@@\xiugai\project\28-(SDHC)LPLD_SdCard\iar\..\..\..\lib\LPLD\DEV\"
#        -I
#        "G:\AIcar\@@\xiugai\project\28-(SDHC)LPLD_SdCard\iar\..\..\..\lib\uCOS-II\Ports\"
#        -I
#        "G:\AIcar\@@\xiugai\project\28-(SDHC)LPLD_SdCard\iar\..\..\..\lib\uCOS-II\Source\"
#        -I
#        "G:\AIcar\@@\xiugai\project\28-(SDHC)LPLD_SdCard\iar\..\..\..\lib\FatFs\"
#        -I
#        "G:\AIcar\@@\xiugai\project\28-(SDHC)LPLD_SdCard\iar\..\..\..\lib\FatFs\option\"
#        -I
#        "G:\AIcar\@@\xiugai\project\28-(SDHC)LPLD_SdCard\iar\..\..\..\lib\USB\common\"
#        -I
#        "G:\AIcar\@@\xiugai\project\28-(SDHC)LPLD_SdCard\iar\..\..\..\lib\USB\driver\"
#        -I
#        "G:\AIcar\@@\xiugai\project\28-(SDHC)LPLD_SdCard\iar\..\..\..\lib\USB\descriptor\"
#        -I
#        "G:\AIcar\@@\xiugai\project\28-(SDHC)LPLD_SdCard\iar\..\..\..\lib\USB\class\"
#        -I
#        "G:\AIcar\@@\xiugai\project\28-(SDHC)LPLD_SdCard\iar\..\..\..\lib\Jay\"
#        -On -I G:\AIcar\arm\CMSIS\Core\Include\ -I
#        G:\AIcar\arm\CMSIS\DSP\Include\ -D ARM_MATH_CM4)
#    Locale       =  C
#    List file    =  
#        G:\AIcar\@@\xiugai\project\28-(SDHC)LPLD_SdCard\iar\FLASH\List\function.lst
#    Object file  =  
#        G:\AIcar\@@\xiugai\project\28-(SDHC)LPLD_SdCard\iar\FLASH\Obj\function.o
#
###############################################################################

G:\AIcar\@@\xiugai\lib\Jay\function.c
      1          /*
      2           *  
      3           *  
      4           *  @JayLin林杰 @厦门大学嘉庚学院 @博学队
      5           */
      6          #include "common.h"
      7          #include "include.h"
      8          
      9          

   \                                 In section .bss, align 4
     10          NVIC_InitTypeDef nvic_init_struct;
   \                     nvic_init_struct:
   \        0x0                      DS8 20
     11          
     12          //取得两个数 最大值

   \                                 In section .text, align 2, keep-with-next
     13          int16 Max(int16 a, int16 b)
     14          {
     15          	return a > b ? a : b;
   \                     Max: (+1)
   \        0x0   0x000A             MOVS     R2,R1
   \        0x2   0x0003             MOVS     R3,R0
   \        0x4   0xB212             SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
   \        0x6   0xB21B             SXTH     R3,R3            ;; SignExt  R3,R3,#+16,#+16
   \        0x8   0x429A             CMP      R2,R3
   \        0xA   0xDB00             BLT.N    ??Max_0
   \                     ??Max_1: (+1)
   \        0xC   0x0008             MOVS     R0,R1
   \                     ??Max_0: (+1)
   \        0xE   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \       0x10   0x4770             BX       LR               ;; return
     16          }
     17          //取得两个数 最小值

   \                                 In section .text, align 2, keep-with-next
     18          int16 Min(int16 a, int16 b)
     19          {
     20          	return a < b ? a : b;
   \                     Min: (+1)
   \        0x0   0x0002             MOVS     R2,R0
   \        0x2   0x000B             MOVS     R3,R1
   \        0x4   0xB212             SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
   \        0x6   0xB21B             SXTH     R3,R3            ;; SignExt  R3,R3,#+16,#+16
   \        0x8   0x429A             CMP      R2,R3
   \        0xA   0xDB00             BLT.N    ??Min_0
   \                     ??Min_1: (+1)
   \        0xC   0x0008             MOVS     R0,R1
   \                     ??Min_0: (+1)
   \        0xE   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \       0x10   0x4770             BX       LR               ;; return
     21          }
     22          //绝对值 整型变量

   \                                 In section .text, align 2, keep-with-next
     23          int16 my_abs(int16 index)
     24          {
     25          	return index > 0 ? index : -index;
   \                     my_abs: (+1)
   \        0x0   0x0001             MOVS     R1,R0
   \        0x2   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \        0x4   0x2901             CMP      R1,#+1
   \        0x6   0xDA01             BGE.N    ??my_abs_0
   \                     ??my_abs_1: (+1)
   \        0x8   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \        0xA   0x4240             RSBS     R0,R0,#+0
   \                     ??my_abs_0: (+1)
   \        0xC   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \        0xE   0x4770             BX       LR               ;; return
     26          }
     27          //绝对值 浮点型变量

   \                                 In section .text, align 2, keep-with-next
     28          float my_fabs(float index)
     29          {
   \                     my_fabs: (+1)
   \        0x0   0xB580             PUSH     {R7,LR}
     30          	return index > 0 ? index : -index;
   \        0x2   0x2100             MOVS     R1,#+0
   \        0x4   0x....'....        BL       __aeabi_cfrcmple
   \        0x8   0xD301             BCC.N    ??my_fabs_0
   \                     ??my_fabs_1: (+1)
   \        0xA   0xF090 0x4000      EORS     R0,R0,#0x80000000
   \                     ??my_fabs_0: (+1)
   \        0xE   0xBD02             POP      {R1,PC}          ;; return
     31          }
     32          //直接修改数组值，用于赋予同一个值

   \                                 In section .text, align 2, keep-with-next
     33          void AlterParam_Clear(int16 begin,int16 end,int16 *pArray,int16 val)
     34          {
   \                     AlterParam_Clear: (+1)
   \        0x0   0xB430             PUSH     {R4,R5}
     35          	for( ;begin >= end; begin--)
   \                     ??AlterParam_Clear_0: (+1)
   \        0x2   0x0004             MOVS     R4,R0
   \        0x4   0x000D             MOVS     R5,R1
   \        0x6   0xB224             SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
   \        0x8   0xB22D             SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
   \        0xA   0x42AC             CMP      R4,R5
   \        0xC   0xDB05             BLT.N    ??AlterParam_Clear_1
     36          	{
     37          		*(pArray + begin) = val;
   \        0xE   0x0004             MOVS     R4,R0
   \       0x10   0xB224             SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
   \       0x12   0xF822 0x3014      STRH     R3,[R2, R4, LSL #+1]
     38          	}
   \       0x16   0x1E40             SUBS     R0,R0,#+1
   \       0x18   0xE7F3             B.N      ??AlterParam_Clear_0
     39          }
   \                     ??AlterParam_Clear_1: (+1)
   \       0x1A   0xBC30             POP      {R4,R5}
   \       0x1C   0x4770             BX       LR               ;; return
     40          //判断参数是否在一个区间内

   \                                 In section .text, align 2, keep-with-next
     41          uint8 JudgeNumInterval(int16 Num,int16 Max,int16 Min)
     42          {
   \                     JudgeNumInterval: (+1)
   \        0x0   0xB410             PUSH     {R4}
   \        0x2   0x0003             MOVS     R3,R0
     43          	if (Num <= Max && Num >= Min)
   \        0x4   0x0008             MOVS     R0,R1
   \        0x6   0x001C             MOVS     R4,R3
   \        0x8   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \        0xA   0xB224             SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
   \        0xC   0x42A0             CMP      R0,R4
   \        0xE   0xDB07             BLT.N    ??JudgeNumInterval_0
   \       0x10   0x0018             MOVS     R0,R3
   \       0x12   0x0014             MOVS     R4,R2
   \       0x14   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \       0x16   0xB224             SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
   \       0x18   0x42A0             CMP      R0,R4
   \       0x1A   0xDB01             BLT.N    ??JudgeNumInterval_0
     44          	{
     45          		return 1;
   \       0x1C   0x2001             MOVS     R0,#+1
   \       0x1E   0xE000             B.N      ??JudgeNumInterval_1
     46          	}
     47          	return 0;
   \                     ??JudgeNumInterval_0: (+1)
   \       0x20   0x2000             MOVS     R0,#+0
   \                     ??JudgeNumInterval_1: (+1)
   \       0x22   0xBC10             POP      {R4}
   \       0x24   0x4770             BX       LR               ;; return
     48          }
     49          //蜂鸣器

   \                                 In section .text, align 2, keep-with-next
     50          void Buzzer(void)
     51          {
     52            
     53          }
   \                     Buzzer: (+1)
   \        0x0   0x4770             BX       LR               ;; return

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   AlterParam_Clear
       0   Buzzer
       4   JudgeNumInterval
       0   Max
       0   Min
       0   my_abs
       8   my_fabs
         8 __aeabi_cfrcmple


   Section sizes:

   Bytes  Function/Label
   -----  --------------
      30  AlterParam_Clear
       2  Buzzer
      38  JudgeNumInterval
      18  Max
      18  Min
      16  my_abs
      16  my_fabs
      20  nvic_init_struct

 
  20 bytes in section .bss
 138 bytes in section .text
 
 138 bytes of CODE memory
  20 bytes of DATA memory

Errors: none
Warnings: 1
