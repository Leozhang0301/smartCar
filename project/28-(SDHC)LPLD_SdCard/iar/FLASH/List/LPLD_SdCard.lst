###############################################################################
#
# IAR ANSI C/C++ Compiler V8.32.1.169/W32 for ARM         08/Jul/2019  22:58:50
# Copyright 1999-2018 IAR Systems AB.
#
#    Cpu mode     =  
#    Endian       =  little
#    Source file  =  
#        G:\AIcar\@@\xiugai\project\28-(SDHC)LPLD_SdCard\app\LPLD_SdCard.c
#    Command line =  
#        -f C:\Users\admin\AppData\Local\Temp\EW4656.tmp
#        ("G:\AIcar\@@\xiugai\project\28-(SDHC)LPLD_SdCard\app\LPLD_SdCard.c"
#        -D LPLD_K60 -lCN
#        "G:\AIcar\@@\xiugai\project\28-(SDHC)LPLD_SdCard\iar\FLASH\List"
#        -lB
#        "G:\AIcar\@@\xiugai\project\28-(SDHC)LPLD_SdCard\iar\FLASH\List"
#        -o "G:\AIcar\@@\xiugai\project\28-(SDHC)LPLD_SdCard\iar\FLASH\Obj"
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M4 -e --fpu=None --dlib_config
#        G:\AIcar\arm\inc\c\DLib_Config_Normal.h -I
#        "G:\AIcar\@@\xiugai\project\28-(SDHC)LPLD_SdCard\iar\..\app\" -I
#        "G:\AIcar\@@\xiugai\project\28-(SDHC)LPLD_SdCard\iar\..\..\..\lib\CPU\"
#        -I
#        "G:\AIcar\@@\xiugai\project\28-(SDHC)LPLD_SdCard\iar\..\..\..\lib\common\"
#        -I
#        "G:\AIcar\@@\xiugai\project\28-(SDHC)LPLD_SdCard\iar\..\..\..\lib\LPLD\"
#        -I
#        "G:\AIcar\@@\xiugai\project\28-(SDHC)LPLD_SdCard\iar\..\..\..\lib\LPLD\HW\"
#        -I
#        "G:\AIcar\@@\xiugai\project\28-(SDHC)LPLD_SdCard\iar\..\..\..\lib\LPLD\DEV\"
#        -I
#        "G:\AIcar\@@\xiugai\project\28-(SDHC)LPLD_SdCard\iar\..\..\..\lib\uCOS-II\Ports\"
#        -I
#        "G:\AIcar\@@\xiugai\project\28-(SDHC)LPLD_SdCard\iar\..\..\..\lib\uCOS-II\Source\"
#        -I
#        "G:\AIcar\@@\xiugai\project\28-(SDHC)LPLD_SdCard\iar\..\..\..\lib\FatFs\"
#        -I
#        "G:\AIcar\@@\xiugai\project\28-(SDHC)LPLD_SdCard\iar\..\..\..\lib\FatFs\option\"
#        -I
#        "G:\AIcar\@@\xiugai\project\28-(SDHC)LPLD_SdCard\iar\..\..\..\lib\USB\common\"
#        -I
#        "G:\AIcar\@@\xiugai\project\28-(SDHC)LPLD_SdCard\iar\..\..\..\lib\USB\driver\"
#        -I
#        "G:\AIcar\@@\xiugai\project\28-(SDHC)LPLD_SdCard\iar\..\..\..\lib\USB\descriptor\"
#        -I
#        "G:\AIcar\@@\xiugai\project\28-(SDHC)LPLD_SdCard\iar\..\..\..\lib\USB\class\"
#        -I
#        "G:\AIcar\@@\xiugai\project\28-(SDHC)LPLD_SdCard\iar\..\..\..\lib\Jay\"
#        -On -I G:\AIcar\arm\CMSIS\Core\Include\ -I
#        G:\AIcar\arm\CMSIS\DSP\Include\ -D ARM_MATH_CM4)
#    Locale       =  C
#    List file    =  
#        G:\AIcar\@@\xiugai\project\28-(SDHC)LPLD_SdCard\iar\FLASH\List\LPLD_SdCard.lst
#    Object file  =  
#        G:\AIcar\@@\xiugai\project\28-(SDHC)LPLD_SdCard\iar\FLASH\Obj\LPLD_SdCard.o
#
###############################################################################

G:\AIcar\@@\xiugai\project\28-(SDHC)LPLD_SdCard\app\LPLD_SdCard.c
      1          
      2          #include "common.h"
      3          #include "include.h"
      4          
      5          

   \                                 In section .text, align 2, keep-with-next
      6          void System_Init(void)
      7          {
   \                     System_Init: (+1)
   \        0x0   0xB580             PUSH     {R7,LR}
      8              LCD_Init(); 
   \        0x2   0x....'....        BL       LCD_Init
      9              LCD_CLS();
   \        0x6   0x....'....        BL       LCD_CLS
     10              KeyBoard_Init();
   \        0xA   0x....'....        BL       KeyBoard_Init
     11              //Encoder_Init();
     12              //SteeringGear_Init();
     13              //flash_init();
     14               Bluetooth_Init();
   \        0xE   0x....'....        BL       Bluetooth_Init
     15              // ADC_Init();
     16              Camera_Init();
   \       0x12   0x....'....        BL       Camera_Init
     17              //Param_Init();
     18              //User_Flash_Read();
     19              //pit0_init();
     20              init_Motor();
   \       0x16   0x....'....        BL       init_Motor
     21              //init_PID();
     22              encorder_init();
   \       0x1A   0x....'....        BL       encorder_init
     23              hongwai_init();
   \       0x1E   0x....'....        BL       hongwai_init
     24              pit_init();
   \       0x22   0x....'....        BL       pit_init
     25              //ShowMainMune();
     26          
     27          }
   \       0x26   0xBD01             POP      {R0,PC}          ;; return
     28          

   \                                 In section .text, align 2, keep-with-next
     29          void DMA_buffer(uint8 flag)
     30          {
   \                     DMA_buffer: (+1)
   \        0x0   0xB510             PUSH     {R4,LR}
   \        0x2   0x0004             MOVS     R4,R0
     31            if(flag)
   \        0x4   0x0020             MOVS     R0,R4
   \        0x6   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \        0x8   0x2800             CMP      R0,#+0
   \        0xA   0xD00C             BEQ.N    ??DMA_buffer_0
     32            {
     33              Unzip(fieldCnt,pixels);
   \        0xC   0xF44F 0x7116      MOV      R1,#+600
   \       0x10   0x....             LDR.N    R0,??DataTable2
   \       0x12   0x7800             LDRB     R0,[R0, #+0]
   \       0x14   0x....'....        BL       Unzip
     34              //img_num++;
     35              IMG_Handle();
   \       0x18   0x....'....        BL       IMG_Handle
     36              
     37             // send_img_data();
     38             // Scan_Point();
     39          
     40             Menu();
   \       0x1C   0x....'....        BL       Menu
     41             // img_display();
     42              DMA_flag=0;
   \       0x20   0x2000             MOVS     R0,#+0
   \       0x22   0x....             LDR.N    R1,??DataTable2_1
   \       0x24   0x7008             STRB     R0,[R1, #+0]
     43            }
     44          }
   \                     ??DMA_buffer_0: (+1)
   \       0x26   0xBD10             POP      {R4,PC}          ;; return
     45          
     46          //extern int tuxiang ;;

   \                                 In section .text, align 2, keep-with-next
     47          void main(void)
     48          {
   \                     main: (+1)
   \        0x0   0xB580             PUSH     {R7,LR}
     49            /*---------------------关中断---------------------*/
     50            //DisableInterrupts;
     51            /*------------------单片机初始化------------------*/
     52            System_Init();
   \        0x2   0x....'....        BL       System_Init
     53            /*---------------------开中断---------------------*/
     54            //EnableInterrupts; 
     55          
     56            while(1)
     57            {
     58              //Key_detect();
     59                    get_img();
   \                     ??main_0: (+1)
   \        0x6   0x....'....        BL       get_img
     60              DMA_buffer(DMA_flag);
   \        0xA   0x....             LDR.N    R0,??DataTable2_1
   \        0xC   0x7800             LDRB     R0,[R0, #+0]
   \        0xE   0x....'....        BL       DMA_buffer
     61          
     62          //    get_img(); //变动
     63          //    DMA_buffer(DMA_flag);
     64               Car_Control();
   \       0x12   0x....'....        BL       Car_Control
     65          //     LCD_Write_Int(80, 1, r1_reSpeed);
     66          //     LCD_Write_Int(80, 2, l1_reSpeed);
     67          //     LCD_Write_Int(80, 3, r2_reSpeed);
     68          //     LCD_Write_Int(80, 4, l2_reSpeed);
     69          
     70          //     LCD_Write_Int(80, 1, l1_reSpeed);        
     71               LCD_Write_Int(100, 2, light_x);
   \       0x16   0x....             LDR.N    R0,??DataTable2_2
   \       0x18   0x6802             LDR      R2,[R0, #+0]
   \       0x1A   0xB212             SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
   \       0x1C   0x2102             MOVS     R1,#+2
   \       0x1E   0x2064             MOVS     R0,#+100
   \       0x20   0x....'....        BL       LCD_Write_Int
     72               LCD_Write_Int(100, 3, light_y);
   \       0x24   0x....             LDR.N    R0,??DataTable2_3
   \       0x26   0x6802             LDR      R2,[R0, #+0]
   \       0x28   0xB212             SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
   \       0x2A   0x2103             MOVS     R1,#+3
   \       0x2C   0x2064             MOVS     R0,#+100
   \       0x2E   0x....'....        BL       LCD_Write_Int
     73               LCD_Write_Int(100, 4, 1);
   \       0x32   0x2201             MOVS     R2,#+1
   \       0x34   0x2104             MOVS     R1,#+4
   \       0x36   0x2064             MOVS     R0,#+100
   \       0x38   0x....'....        BL       LCD_Write_Int
   \       0x3C   0xE7E3             B.N      ??main_0
     74                    //LCD_Write_Int(100, 5, baidian);
     75               //LCD_Write_Int(100, 5, KeyValue);
     76               //fusion_visualscope(l1_reSpeed,r1_reSpeed,r2_reSpeed,l2_reSpeed);
     77            } 
     78          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2:
   \        0x0   0x....'....        DC32     fieldCnt

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_1:
   \        0x0   0x....'....        DC32     DMA_flag

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_2:
   \        0x0   0x....'....        DC32     light_x

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_3:
   \        0x0   0x....'....        DC32     light_y
     79          
     80          
     81          
     82          
     83          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   DMA_buffer
         8   -> IMG_Handle
         8   -> Menu
         8   -> Unzip
       8   System_Init
         8   -> Bluetooth_Init
         8   -> Camera_Init
         8   -> KeyBoard_Init
         8   -> LCD_CLS
         8   -> LCD_Init
         8   -> encorder_init
         8   -> hongwai_init
         8   -> init_Motor
         8   -> pit_init
       8   main
         8   -> Car_Control
         8   -> DMA_buffer
         8   -> LCD_Write_Int
         8   -> System_Init
         8   -> get_img


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable2
       4  ??DataTable2_1
       4  ??DataTable2_2
       4  ??DataTable2_3
      40  DMA_buffer
      40  System_Init
      62  main

 
 158 bytes in section .text
 
 158 bytes of CODE memory

Errors: none
Warnings: 1
