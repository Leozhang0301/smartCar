###############################################################################
#
# IAR ANSI C/C++ Compiler V8.32.1.169/W32 for ARM         08/Jul/2019  00:40:53
# Copyright 1999-2018 IAR Systems AB.
#
#    Cpu mode     =  
#    Endian       =  little
#    Source file  =  G:\AIcar\@@\xiugai\lib\Jay\Bluetooth.c
#    Command line =  
#        -f C:\Users\admin\AppData\Local\Temp\EW586D.tmp
#        (G:\AIcar\@@\xiugai\lib\Jay\Bluetooth.c -D LPLD_K60 -lCN
#        "G:\AIcar\@@\xiugai\project\28-(SDHC)LPLD_SdCard\iar\FLASH\List"
#        -lB
#        "G:\AIcar\@@\xiugai\project\28-(SDHC)LPLD_SdCard\iar\FLASH\List"
#        -o "G:\AIcar\@@\xiugai\project\28-(SDHC)LPLD_SdCard\iar\FLASH\Obj"
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M4 -e --fpu=None --dlib_config
#        G:\AIcar\arm\inc\c\DLib_Config_Normal.h -I
#        "G:\AIcar\@@\xiugai\project\28-(SDHC)LPLD_SdCard\iar\..\app\" -I
#        "G:\AIcar\@@\xiugai\project\28-(SDHC)LPLD_SdCard\iar\..\..\..\lib\CPU\"
#        -I
#        "G:\AIcar\@@\xiugai\project\28-(SDHC)LPLD_SdCard\iar\..\..\..\lib\common\"
#        -I
#        "G:\AIcar\@@\xiugai\project\28-(SDHC)LPLD_SdCard\iar\..\..\..\lib\LPLD\"
#        -I
#        "G:\AIcar\@@\xiugai\project\28-(SDHC)LPLD_SdCard\iar\..\..\..\lib\LPLD\HW\"
#        -I
#        "G:\AIcar\@@\xiugai\project\28-(SDHC)LPLD_SdCard\iar\..\..\..\lib\LPLD\DEV\"
#        -I
#        "G:\AIcar\@@\xiugai\project\28-(SDHC)LPLD_SdCard\iar\..\..\..\lib\uCOS-II\Ports\"
#        -I
#        "G:\AIcar\@@\xiugai\project\28-(SDHC)LPLD_SdCard\iar\..\..\..\lib\uCOS-II\Source\"
#        -I
#        "G:\AIcar\@@\xiugai\project\28-(SDHC)LPLD_SdCard\iar\..\..\..\lib\FatFs\"
#        -I
#        "G:\AIcar\@@\xiugai\project\28-(SDHC)LPLD_SdCard\iar\..\..\..\lib\FatFs\option\"
#        -I
#        "G:\AIcar\@@\xiugai\project\28-(SDHC)LPLD_SdCard\iar\..\..\..\lib\USB\common\"
#        -I
#        "G:\AIcar\@@\xiugai\project\28-(SDHC)LPLD_SdCard\iar\..\..\..\lib\USB\driver\"
#        -I
#        "G:\AIcar\@@\xiugai\project\28-(SDHC)LPLD_SdCard\iar\..\..\..\lib\USB\descriptor\"
#        -I
#        "G:\AIcar\@@\xiugai\project\28-(SDHC)LPLD_SdCard\iar\..\..\..\lib\USB\class\"
#        -I
#        "G:\AIcar\@@\xiugai\project\28-(SDHC)LPLD_SdCard\iar\..\..\..\lib\Jay\"
#        -On -I G:\AIcar\arm\CMSIS\Core\Include\ -I
#        G:\AIcar\arm\CMSIS\DSP\Include\ -D ARM_MATH_CM4)
#    Locale       =  C
#    List file    =  
#        G:\AIcar\@@\xiugai\project\28-(SDHC)LPLD_SdCard\iar\FLASH\List\Bluetooth.lst
#    Object file  =  
#        G:\AIcar\@@\xiugai\project\28-(SDHC)LPLD_SdCard\iar\FLASH\Obj\Bluetooth.o
#
###############################################################################

G:\AIcar\@@\xiugai\lib\Jay\Bluetooth.c
      1          /*
      2           *  
      3           *  
      4           *  @JayLin林杰 @厦门大学嘉庚学院 @博学队
      5           */
      6          #include  "common.h"
      7          #include "include.h"
      8          #include "stdbool.h"
      9          
     10          

   \                                 In section .bss, align 4
     11          float OutData[4];           //数组中四个元素为全局变量，供OutPut_Data调用
   \                     OutData:
   \        0x0                      DS8 16
     12                                      //只需向数组中写入数据即可
     13                                      //0-CH1  1-CH2  2-CH3  3-CH4

   \                                 In section .bss, align 4
     14          static UART_InitTypeDef bluetooth_init_structure; 
   \                     bluetooth_init_structure:
   \        0x0                      DS8 20
     15           

   \                                 In section .bss, align 4
     16          btInfo btSndInfo,btRcvInfo;
   \                     btSndInfo:
   \        0x0                      DS8 8

   \                                 In section .bss, align 4
   \                     btRcvInfo:
   \        0x0                      DS8 8

   \                                 In section .text, align 2, keep-with-next
     17          void Bluetooth_Init(void)
     18          {
   \                     Bluetooth_Init: (+1)
   \        0x0   0xB51C             PUSH     {R2-R4,LR}
     19            nvic_init_struct.NVIC_IRQChannel = UART4_RX_TX_IRQn;
   \        0x2   0x....             LDR.N    R1,??DataTable7
   \        0x4   0x2035             MOVS     R0,#+53
   \        0x6   0x7008             STRB     R0,[R1, #+0]
     20            nvic_init_struct.NVIC_IRQChannelGroupPriority = NVIC_PriorityGroup_2;
   \        0x8   0x2005             MOVS     R0,#+5
   \        0xA   0x6048             STR      R0,[R1, #+4]
     21            nvic_init_struct.NVIC_IRQChannelPreemptionPriority = 2;
   \        0xC   0x2002             MOVS     R0,#+2
   \        0xE   0x6088             STR      R0,[R1, #+8]
     22            nvic_init_struct.NVIC_IRQChannelSubPriority        = 2;
   \       0x10   0x2002             MOVS     R0,#+2
   \       0x12   0x60C8             STR      R0,[R1, #+12]
     23            LPLD_NVIC_Init(nvic_init_struct);
   \       0x14   0xB084             SUB      SP,SP,#+16
   \       0x16   0x4668             MOV      R0,SP
   \       0x18   0x2214             MOVS     R2,#+20
   \       0x1A   0x....'....        BL       __aeabi_memcpy4
   \       0x1E   0xBC0F             POP      {R0-R3}
   \       0x20   0x....'....        BL       LPLD_NVIC_Init
     24            
     25            bluetooth_init_structure.UART_Uartx=UART4;
   \       0x24   0x....             LDR.N    R4,??DataTable7_1
   \       0x26   0x....             LDR.N    R0,??DataTable7_2  ;; 0x400ea000
   \       0x28   0x6020             STR      R0,[R4, #+0]
     26            bluetooth_init_structure.UART_BaudRate = 115200;
   \       0x2A   0xF45F 0x30E1      MOVS     R0,#+115200
   \       0x2E   0x6060             STR      R0,[R4, #+4]
     27            bluetooth_init_structure.UART_TxPin=PTE24;
   \       0x30   0x2094             MOVS     R0,#+148
   \       0x32   0x7220             STRB     R0,[R4, #+8]
     28            bluetooth_init_structure.UART_RxPin=PTE25;
   \       0x34   0x2095             MOVS     R0,#+149
   \       0x36   0x7260             STRB     R0,[R4, #+9]
     29            
     30            bluetooth_init_structure.UART_RxIntEnable = TRUE;    //使能接收中断
   \       0x38   0x2001             MOVS     R0,#+1
   \       0x3A   0x72A0             STRB     R0,[R4, #+10]
     31            bluetooth_init_structure.UART_RxIsr = bt_Isr;   //设置接收中断函数
   \       0x3C   0x....'....        ADR.W    R0,bt_Isr
   \       0x40   0x60E0             STR      R0,[R4, #+12]
     32            LPLD_UART_Init(bluetooth_init_structure);           //初始化UART
   \       0x42   0x0021             MOVS     R1,R4
   \       0x44   0xB084             SUB      SP,SP,#+16
   \       0x46   0x4668             MOV      R0,SP
   \       0x48   0x2214             MOVS     R2,#+20
   \       0x4A   0x....'....        BL       __aeabi_memcpy4
   \       0x4E   0xBC0F             POP      {R0-R3}
   \       0x50   0x....'....        BL       LPLD_UART_Init
     33            LPLD_UART_EnableIrq(bluetooth_init_structure);      //使能UART中断
   \       0x54   0x0021             MOVS     R1,R4
   \       0x56   0xB084             SUB      SP,SP,#+16
   \       0x58   0x4668             MOV      R0,SP
   \       0x5A   0x2214             MOVS     R2,#+20
   \       0x5C   0x....'....        BL       __aeabi_memcpy4
   \       0x60   0xBC0F             POP      {R0-R3}
   \       0x62   0x....'....        BL       LPLD_UART_EnableIrq
     34          }
   \       0x66   0xBD13             POP      {R0,R1,R4,PC}    ;; return
     35          
     36          

   \                                 In section .bss, align 1
     37          int8 BtSndMsg = 0;
   \                     BtSndMsg:
   \        0x0                      DS8 1

   \                                 In section .bss, align 1
     38          int8 BtRcvMsg = 0;
   \                     BtRcvMsg:
   \        0x0                      DS8 1

   \                                 In section .bss, align 1
     39          bool isConnect = 0;
   \                     isConnect:
   \        0x0                      DS8 1

   \                                 In section .bss, align 4
     40          uint8 BinaryNumberBuffer[8];//蓝牙二进制八位缓存buf
   \                     BinaryNumberBuffer:
   \        0x0                      DS8 8
     41          
     42          
     43          

   \                                 In section .text, align 2, keep-with-next
     44          void CharToBinaryNumber(int8 index,uint8 *buffer)
     45          {
   \                     CharToBinaryNumber: (+1)
   \        0x0   0xB410             PUSH     {R4}
     46          	for(int16 i = 0;i < 8;i++)
   \        0x2   0x2200             MOVS     R2,#+0
   \                     ??CharToBinaryNumber_0: (+1)
   \        0x4   0x0013             MOVS     R3,R2
   \        0x6   0xB21B             SXTH     R3,R3            ;; SignExt  R3,R3,#+16,#+16
   \        0x8   0x2B08             CMP      R3,#+8
   \        0xA   0xDA09             BGE.N    ??CharToBinaryNumber_1
     47          	{ *(buffer + i) = index >> i & 0x01; }
   \        0xC   0x0003             MOVS     R3,R0
   \        0xE   0xB25B             SXTB     R3,R3            ;; SignExt  R3,R3,#+24,#+24
   \       0x10   0x4113             ASRS     R3,R3,R2
   \       0x12   0xF013 0x0301      ANDS     R3,R3,#0x1
   \       0x16   0x0014             MOVS     R4,R2
   \       0x18   0xB224             SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
   \       0x1A   0x550B             STRB     R3,[R1, R4]
   \       0x1C   0x1C52             ADDS     R2,R2,#+1
   \       0x1E   0xE7F1             B.N      ??CharToBinaryNumber_0
     48          }
   \                     ??CharToBinaryNumber_1: (+1)
   \       0x20   0xBC10             POP      {R4}
   \       0x22   0x4770             BX       LR               ;; return
     49          

   \                                 In section .text, align 2, keep-with-next
     50          void BinaryNumberToChar(int8 *index,uint8 *buffer)
     51          {
   \                     BinaryNumberToChar: (+1)
   \        0x0   0xB410             PUSH     {R4}
     52          	for(int16 i = 0;i < 8;i++)
   \        0x2   0x2200             MOVS     R2,#+0
   \                     ??BinaryNumberToChar_0: (+1)
   \        0x4   0x0013             MOVS     R3,R2
   \        0x6   0xB21B             SXTH     R3,R3            ;; SignExt  R3,R3,#+16,#+16
   \        0x8   0x2B08             CMP      R3,#+8
   \        0xA   0xDA08             BGE.N    ??BinaryNumberToChar_1
     53          	{ (*index) |= *(buffer + i) << i; }
   \        0xC   0x7803             LDRB     R3,[R0, #+0]
   \        0xE   0x0014             MOVS     R4,R2
   \       0x10   0xB224             SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
   \       0x12   0x5D0C             LDRB     R4,[R1, R4]
   \       0x14   0x4094             LSLS     R4,R4,R2
   \       0x16   0x4323             ORRS     R3,R4,R3
   \       0x18   0x7003             STRB     R3,[R0, #+0]
   \       0x1A   0x1C52             ADDS     R2,R2,#+1
   \       0x1C   0xE7F2             B.N      ??BinaryNumberToChar_0
     54          }
   \                     ??BinaryNumberToChar_1: (+1)
   \       0x1E   0xBC10             POP      {R4}
   \       0x20   0x4770             BX       LR               ;; return
     55          

   \                                 In section .text, align 2, keep-with-next
     56          void btInfoInit(void)
     57          {
     58            btSndInfo.Connect        = 0;
   \                     btInfoInit: (+1)
   \        0x0   0x....             LDR.N    R0,??DataTable7_3
   \        0x2   0x2100             MOVS     R1,#+0
   \        0x4   0x7001             STRB     R1,[R0, #+0]
     59            btSndInfo.isStop         = 0;
   \        0x6   0x2100             MOVS     R1,#+0
   \        0x8   0x7041             STRB     R1,[R0, #+1]
     60            btSndInfo.CarJoinArea    = 0;
   \        0xA   0x2100             MOVS     R1,#+0
   \        0xC   0x7081             STRB     R1,[R0, #+2]
     61            btSndInfo.CarJoinEnd     = 0;
   \        0xE   0x2100             MOVS     R1,#+0
   \       0x10   0x70C1             STRB     R1,[R0, #+3]
     62            btSndInfo.RingStop       = 0;
   \       0x12   0x2100             MOVS     R1,#+0
   \       0x14   0x7101             STRB     R1,[R0, #+4]
     63            btSndInfo.Rings          = 0;
   \       0x16   0x2100             MOVS     R1,#+0
   \       0x18   0x7141             STRB     R1,[R0, #+5]
     64            btSndInfo.buf6           = 0;
   \       0x1A   0x2100             MOVS     R1,#+0
   \       0x1C   0x7181             STRB     R1,[R0, #+6]
     65            btSndInfo.buf7           = 0;
   \       0x1E   0x2100             MOVS     R1,#+0
   \       0x20   0x71C1             STRB     R1,[R0, #+7]
     66            
     67            btRcvInfo.Connect        = 0;
   \       0x22   0x....             LDR.N    R0,??DataTable7_4
   \       0x24   0x2100             MOVS     R1,#+0
   \       0x26   0x7001             STRB     R1,[R0, #+0]
     68            btRcvInfo.isStop         = 0;
   \       0x28   0x2100             MOVS     R1,#+0
   \       0x2A   0x7041             STRB     R1,[R0, #+1]
     69            btRcvInfo.CarJoinArea    = 0;
   \       0x2C   0x2100             MOVS     R1,#+0
   \       0x2E   0x7081             STRB     R1,[R0, #+2]
     70            btRcvInfo.CarJoinEnd     = 0;
   \       0x30   0x2100             MOVS     R1,#+0
   \       0x32   0x70C1             STRB     R1,[R0, #+3]
     71            btRcvInfo.RingStop       = 0;
   \       0x34   0x2100             MOVS     R1,#+0
   \       0x36   0x7101             STRB     R1,[R0, #+4]
     72            btRcvInfo.Rings          = 0;
   \       0x38   0x2100             MOVS     R1,#+0
   \       0x3A   0x7141             STRB     R1,[R0, #+5]
     73            btRcvInfo.buf6           = 0;
   \       0x3C   0x2100             MOVS     R1,#+0
   \       0x3E   0x7181             STRB     R1,[R0, #+6]
     74            btRcvInfo.buf7           = 0;
   \       0x40   0x2100             MOVS     R1,#+0
   \       0x42   0x71C1             STRB     R1,[R0, #+7]
     75            
     76            
     77            for(int16 i = 0;i < 8;i++)
   \       0x44   0x2000             MOVS     R0,#+0
   \                     ??btInfoInit_0: (+1)
   \       0x46   0x0001             MOVS     R1,R0
   \       0x48   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \       0x4A   0x2908             CMP      R1,#+8
   \       0x4C   0xDA06             BGE.N    ??btInfoInit_1
     78            {
     79              BinaryNumberBuffer[i] = 0;
   \       0x4E   0x2100             MOVS     R1,#+0
   \       0x50   0x....             LDR.N    R2,??DataTable7_5
   \       0x52   0x0003             MOVS     R3,R0
   \       0x54   0xB21B             SXTH     R3,R3            ;; SignExt  R3,R3,#+16,#+16
   \       0x56   0x54D1             STRB     R1,[R2, R3]
     80            }
   \       0x58   0x1C40             ADDS     R0,R0,#+1
   \       0x5A   0xE7F4             B.N      ??btInfoInit_0
     81          }
   \                     ??btInfoInit_1: (+1)
   \       0x5C   0x4770             BX       LR               ;; return
     82          //蓝牙发送数据编码

   \                                 In section .text, align 2, keep-with-next
     83          void Bluetooth_Encoder(void)
     84          { 
   \                     Bluetooth_Encoder: (+1)
   \        0x0   0xB538             PUSH     {R3-R5,LR}
     85            BtSndMsg = 0;
   \        0x2   0x....             LDR.N    R4,??DataTable7_6
   \        0x4   0x2000             MOVS     R0,#+0
   \        0x6   0x7020             STRB     R0,[R4, #+0]
     86            
     87            BinaryNumberBuffer[0] = btSndInfo.Connect;
   \        0x8   0x....             LDR.N    R5,??DataTable7_5
   \        0xA   0x....             LDR.N    R0,??DataTable7_3
   \        0xC   0x7801             LDRB     R1,[R0, #+0]
   \        0xE   0x7029             STRB     R1,[R5, #+0]
     88            BinaryNumberBuffer[1] = btSndInfo.isStop;
   \       0x10   0x7841             LDRB     R1,[R0, #+1]
   \       0x12   0x7069             STRB     R1,[R5, #+1]
     89            BinaryNumberBuffer[2] = btSndInfo.CarJoinArea;
   \       0x14   0x7881             LDRB     R1,[R0, #+2]
   \       0x16   0x70A9             STRB     R1,[R5, #+2]
     90            BinaryNumberBuffer[3] = btSndInfo.CarJoinEnd;
   \       0x18   0x78C1             LDRB     R1,[R0, #+3]
   \       0x1A   0x70E9             STRB     R1,[R5, #+3]
     91            BinaryNumberBuffer[4] = btSndInfo.RingStop;
   \       0x1C   0x7901             LDRB     R1,[R0, #+4]
   \       0x1E   0x7129             STRB     R1,[R5, #+4]
     92            BinaryNumberBuffer[5] = btSndInfo.Rings;
   \       0x20   0x7941             LDRB     R1,[R0, #+5]
   \       0x22   0x7169             STRB     R1,[R5, #+5]
     93            BinaryNumberBuffer[6] = btSndInfo.buf6;
   \       0x24   0x7981             LDRB     R1,[R0, #+6]
   \       0x26   0x71A9             STRB     R1,[R5, #+6]
     94            BinaryNumberBuffer[7] = btSndInfo.buf7;
   \       0x28   0x79C0             LDRB     R0,[R0, #+7]
   \       0x2A   0x71E8             STRB     R0,[R5, #+7]
     95            
     96            BinaryNumberToChar(&BtSndMsg,BinaryNumberBuffer);
   \       0x2C   0x0029             MOVS     R1,R5
   \       0x2E   0x0020             MOVS     R0,R4
   \       0x30   0x....'....        BL       BinaryNumberToChar
     97            LPLD_UART_PutChar(UART4,BtSndMsg);
   \       0x34   0xF994 0x1000      LDRSB    R1,[R4, #+0]
   \       0x38   0x....             LDR.N    R0,??DataTable7_2  ;; 0x400ea000
   \       0x3A   0x....'....        BL       LPLD_UART_PutChar
     98            
     99            for(int16 i = 0;i < 8;i++)
   \       0x3E   0x2000             MOVS     R0,#+0
   \                     ??Bluetooth_Encoder_0: (+1)
   \       0x40   0x0001             MOVS     R1,R0
   \       0x42   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \       0x44   0x2908             CMP      R1,#+8
   \       0x46   0xDA05             BGE.N    ??Bluetooth_Encoder_1
    100            {
    101              BinaryNumberBuffer[i] = 0;
   \       0x48   0x2100             MOVS     R1,#+0
   \       0x4A   0x0002             MOVS     R2,R0
   \       0x4C   0xB212             SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
   \       0x4E   0x54A9             STRB     R1,[R5, R2]
    102            }
   \       0x50   0x1C40             ADDS     R0,R0,#+1
   \       0x52   0xE7F5             B.N      ??Bluetooth_Encoder_0
    103          }
   \                     ??Bluetooth_Encoder_1: (+1)
   \       0x54   0xBD31             POP      {R0,R4,R5,PC}    ;; return
    104          
    105          
    106          //蓝牙接收数据译码

   \                                 In section .text, align 2, keep-with-next
    107          void Bluetooth_Decoder(void)
    108          {
   \                     Bluetooth_Decoder: (+1)
   \        0x0   0xB538             PUSH     {R3-R5,LR}
    109          
    110            for(int16 i = 0;i < 8;i++)
   \        0x2   0x2000             MOVS     R0,#+0
   \                     ??Bluetooth_Decoder_0: (+1)
   \        0x4   0x0001             MOVS     R1,R0
   \        0x6   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \        0x8   0x2908             CMP      R1,#+8
   \        0xA   0xDA06             BGE.N    ??Bluetooth_Decoder_1
    111            {
    112              BinaryNumberBuffer[i] = 0;
   \        0xC   0x2100             MOVS     R1,#+0
   \        0xE   0x....             LDR.N    R2,??DataTable7_5
   \       0x10   0x0003             MOVS     R3,R0
   \       0x12   0xB21B             SXTH     R3,R3            ;; SignExt  R3,R3,#+16,#+16
   \       0x14   0x54D1             STRB     R1,[R2, R3]
    113            }
   \       0x16   0x1C40             ADDS     R0,R0,#+1
   \       0x18   0xE7F4             B.N      ??Bluetooth_Decoder_0
    114            
    115            
    116            CharToBinaryNumber(BtRcvMsg,BinaryNumberBuffer);
   \                     ??Bluetooth_Decoder_1: (+1)
   \       0x1A   0x....             LDR.N    R4,??DataTable7_7
   \       0x1C   0x....             LDR.N    R5,??DataTable7_5
   \       0x1E   0x0029             MOVS     R1,R5
   \       0x20   0xF994 0x0000      LDRSB    R0,[R4, #+0]
   \       0x24   0x....'....        BL       CharToBinaryNumber
    117            
    118            btRcvInfo.Connect         = BinaryNumberBuffer[0];
   \       0x28   0x....             LDR.N    R0,??DataTable7_4
   \       0x2A   0xF995 0x1000      LDRSB    R1,[R5, #+0]
   \       0x2E   0x7001             STRB     R1,[R0, #+0]
    119            btRcvInfo.isStop          = BinaryNumberBuffer[1];
   \       0x30   0x7869             LDRB     R1,[R5, #+1]
   \       0x32   0x7041             STRB     R1,[R0, #+1]
    120            btRcvInfo.CarJoinArea     = BinaryNumberBuffer[2];
   \       0x34   0x78A9             LDRB     R1,[R5, #+2]
   \       0x36   0x7081             STRB     R1,[R0, #+2]
    121            btRcvInfo.CarJoinEnd      = BinaryNumberBuffer[3];
   \       0x38   0x78E9             LDRB     R1,[R5, #+3]
   \       0x3A   0x70C1             STRB     R1,[R0, #+3]
    122            btRcvInfo.RingStop        = BinaryNumberBuffer[4];
   \       0x3C   0x7929             LDRB     R1,[R5, #+4]
   \       0x3E   0x7101             STRB     R1,[R0, #+4]
    123            btRcvInfo.Rings           = BinaryNumberBuffer[5];
   \       0x40   0x7969             LDRB     R1,[R5, #+5]
   \       0x42   0x7141             STRB     R1,[R0, #+5]
    124            btRcvInfo.buf6            = BinaryNumberBuffer[6];
   \       0x44   0x79A9             LDRB     R1,[R5, #+6]
   \       0x46   0x7181             STRB     R1,[R0, #+6]
    125            btRcvInfo.buf7            = BinaryNumberBuffer[7];
   \       0x48   0x79E9             LDRB     R1,[R5, #+7]
   \       0x4A   0x71C1             STRB     R1,[R0, #+7]
    126            
    127            //////////////////////////////////////////////轮询法检测蓝牙是否连接//////////////////////////////////////////////
    128            static uint8 cnt = 0;
    129            if(++cnt > 25)
   \       0x4C   0x....             LDR.N    R0,??DataTable7_8
   \       0x4E   0x7801             LDRB     R1,[R0, #+0]
   \       0x50   0x1C49             ADDS     R1,R1,#+1
   \       0x52   0x7001             STRB     R1,[R0, #+0]
   \       0x54   0x7801             LDRB     R1,[R0, #+0]
   \       0x56   0x291A             CMP      R1,#+26
   \       0x58   0xDB09             BLT.N    ??Bluetooth_Decoder_2
    130            {
    131              cnt = 0;
   \       0x5A   0x2100             MOVS     R1,#+0
   \       0x5C   0x7001             STRB     R1,[R0, #+0]
    132              if(isConnect == false)
   \       0x5E   0x....             LDR.N    R1,??DataTable7_9
   \       0x60   0x7808             LDRB     R0,[R1, #+0]
   \       0x62   0x2800             CMP      R0,#+0
   \       0x64   0xD101             BNE.N    ??Bluetooth_Decoder_3
    133              {
    134                BtRcvMsg = 0;
   \       0x66   0x2000             MOVS     R0,#+0
   \       0x68   0x7020             STRB     R0,[R4, #+0]
    135              }
    136              isConnect = false;
   \                     ??Bluetooth_Decoder_3: (+1)
   \       0x6A   0x2000             MOVS     R0,#+0
   \       0x6C   0x7008             STRB     R0,[R1, #+0]
    137            }
    138            //////////////////////////////////////////////轮询法检测蓝牙是否连接//////////////////////////////////////////////
    139          }
   \                     ??Bluetooth_Decoder_2: (+1)
   \       0x6E   0xBD31             POP      {R0,R4,R5,PC}    ;; return

   \                                 In section .bss, align 1
   \                     `Bluetooth_Decoder::cnt`:
   \        0x0                      DS8 1
    140          
    141          /*
    142           *  创口中断
    143           *  测试专用
    144           *  @JayLin林杰 @厦门大学嘉庚学院 @博学队
    145           */

   \                                 In section .text, align 4, keep-with-next
    146          void bt_Isr(void)
    147          { 
    148            isConnect = true;
   \                     bt_Isr: (+1)
   \        0x0   0x2001             MOVS     R0,#+1
   \        0x2   0x....             LDR.N    R1,??DataTable7_9
   \        0x4   0x7008             STRB     R0,[R1, #+0]
    149            BtRcvMsg = UART4->D;
   \        0x6   0x....             LDR.N    R0,??DataTable7_10  ;; 0x400ea007
   \        0x8   0xF990 0x0000      LDRSB    R0,[R0, #+0]
   \        0xC   0x....             LDR.N    R1,??DataTable7_7
   \        0xE   0x7008             STRB     R0,[R1, #+0]
    150          }
   \       0x10   0x4770             BX       LR               ;; return
    151          
    152          

   \                                 In section .text, align 2, keep-with-next
    153          void send_img_data(void)
    154          {
   \                     send_img_data: (+1)
   \        0x0   0xB510             PUSH     {R4,LR}
    155                  LPLD_UART_PutChar(UART4,0x00);
   \        0x2   0x....             LDR.N    R4,??DataTable7_2  ;; 0x400ea000
   \        0x4   0x2100             MOVS     R1,#+0
   \        0x6   0x0020             MOVS     R0,R4
   \        0x8   0x....'....        BL       LPLD_UART_PutChar
    156                  LPLD_UART_PutChar(UART4,0xff);
   \        0xC   0xF05F 0x31FF      MOVS     R1,#-1
   \       0x10   0x0020             MOVS     R0,R4
   \       0x12   0x....'....        BL       LPLD_UART_PutChar
    157                  LPLD_UART_PutChar(UART4,0x01);
   \       0x16   0x2101             MOVS     R1,#+1
   \       0x18   0x0020             MOVS     R0,R4
   \       0x1A   0x....'....        BL       LPLD_UART_PutChar
    158                  LPLD_UART_PutChar(UART4,0x01);
   \       0x1E   0x2101             MOVS     R1,#+1
   \       0x20   0x0020             MOVS     R0,R4
   \       0x22   0x....'....        BL       LPLD_UART_PutChar
    159                  LPLD_UART_PutCharArr(UART4,(int8 *)imgbuff,IMG_ROWS*IMG_COLS);
   \       0x26   0xF44F 0x5296      MOV      R2,#+4800
   \       0x2A   0x....             LDR.N    R1,??DataTable7_11
   \       0x2C   0x0020             MOVS     R0,R4
   \       0x2E   0x....'....        BL       LPLD_UART_PutCharArr
    160          }
   \       0x32   0xBD10             POP      {R4,PC}          ;; return
    161          ////////////////////////////////////////////////////以下为蓝牙示波器专用函数///////////////////////////////////////////////////////////
    162          /********************************************************************************
    163          *函数名称:CRC_CHECK
    164          ----------------------------------------
    165          此函数为数据校验函数，被OutPut_Data调用。
    166          不需改动
    167          *******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    168          uint16 CRC_CHECK(uint8 *Buf, uint8 CRC_CNT)
    169          {
   \                     CRC_CHECK: (+1)
   \        0x0   0xB470             PUSH     {R4-R6}
   \        0x2   0x0003             MOVS     R3,R0
    170              uint16 CRC_Temp;
    171              uint8 i,j;
    172              CRC_Temp = 0xffff;
   \        0x4   0xF64F 0x70FF      MOVW     R0,#+65535
    173          
    174              for (i=0;i<CRC_CNT; i++){      
   \        0x8   0x2400             MOVS     R4,#+0
   \                     ??CRC_CHECK_0: (+1)
   \        0xA   0x0022             MOVS     R2,R4
   \        0xC   0x000E             MOVS     R6,R1
   \        0xE   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \       0x10   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \       0x12   0x42B2             CMP      R2,R6
   \       0x14   0xD218             BCS.N    ??CRC_CHECK_1
    175                  CRC_Temp ^= Buf[i];
   \       0x16   0x0022             MOVS     R2,R4
   \       0x18   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \       0x1A   0x5C9A             LDRB     R2,[R3, R2]
   \       0x1C   0x4050             EORS     R0,R2,R0
    176                  for (j=0;j<8;j++) {
   \       0x1E   0x2200             MOVS     R2,#+0
   \       0x20   0x0015             MOVS     R5,R2
   \                     ??CRC_CHECK_2: (+1)
   \       0x22   0x002A             MOVS     R2,R5
   \       0x24   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \       0x26   0x2A08             CMP      R2,#+8
   \       0x28   0xDA0C             BGE.N    ??CRC_CHECK_3
    177                      if (CRC_Temp & 0x01)
   \       0x2A   0x07C2             LSLS     R2,R0,#+31
   \       0x2C   0xD506             BPL.N    ??CRC_CHECK_4
    178                          CRC_Temp = (CRC_Temp >>1 ) ^ 0xa001;
   \       0x2E   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \       0x30   0x0002             MOVS     R2,R0
   \       0x32   0xF24A 0x0001      MOVW     R0,#+40961
   \       0x36   0xEA90 0x0052      EORS     R0,R0,R2, LSR #+1
   \       0x3A   0xE001             B.N      ??CRC_CHECK_5
    179                      else
    180                          CRC_Temp = CRC_Temp >> 1;
   \                     ??CRC_CHECK_4: (+1)
   \       0x3C   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \       0x3E   0x0840             LSRS     R0,R0,#+1
    181                  }
   \                     ??CRC_CHECK_5: (+1)
   \       0x40   0x1C6D             ADDS     R5,R5,#+1
   \       0x42   0xE7EE             B.N      ??CRC_CHECK_2
    182              }
   \                     ??CRC_CHECK_3: (+1)
   \       0x44   0x1C64             ADDS     R4,R4,#+1
   \       0x46   0xE7E0             B.N      ??CRC_CHECK_0
    183              return(CRC_Temp);
   \                     ??CRC_CHECK_1: (+1)
   \       0x48   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \       0x4A   0xBC70             POP      {R4-R6}
   \       0x4C   0x4770             BX       LR               ;; return
    184          }
    185          
    186          /******************************************************************************
    187          *函数名称：OutPut_Data
    188          *输入参数：无
    189          *输出参数：无
    190          *函数功能：将数据发送到Serial Scope显示
    191          ------------------------------------------------
    192          根据硬件mcu编写串口发送一个字节的函数供本函数调用
    193          调用本函数即可将OutData数组中的四个元素显示到Serial Scope中
    194          *******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    195          void OutPut_Data(void)
    196          {
   \                     OutPut_Data: (+1)
   \        0x0   0xE92D 0x41F8      PUSH     {R3-R8,LR}
   \        0x4   0xB08B             SUB      SP,SP,#+44
    197            int32 temp[4] = {0};
   \        0x6   0xA807             ADD      R0,SP,#+28
   \        0x8   0x2110             MOVS     R1,#+16
   \        0xA   0x....'....        BL       __aeabi_memclr4
    198            uint32 temp1[4] = {0};
   \        0xE   0xA803             ADD      R0,SP,#+12
   \       0x10   0x2110             MOVS     R1,#+16
   \       0x12   0x....'....        BL       __aeabi_memclr4
    199            uint8 databuf[10] = {0};
   \       0x16   0x4668             MOV      R0,SP
   \       0x18   0x2100             MOVS     R1,#+0
   \       0x1A   0x2200             MOVS     R2,#+0
   \       0x1C   0x2300             MOVS     R3,#+0
   \       0x1E   0xE880 0x000E      STM      R0,{R1-R3}
    200            uint8 i;
    201            uint16 CRC16 = 0;
   \       0x22   0x2400             MOVS     R4,#+0
    202            for(i=0;i<4;i++)
   \       0x24   0x2600             MOVS     R6,#+0
   \                     ??OutPut_Data_0: (+1)
   \       0x26   0x0030             MOVS     R0,R6
   \       0x28   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \       0x2A   0x2804             CMP      R0,#+4
   \       0x2C   0xDA16             BGE.N    ??OutPut_Data_1
    203            {
    204              temp[i]  = (int32)OutData[i];
   \       0x2E   0xAD07             ADD      R5,SP,#+28
   \       0x30   0x....             LDR.N    R0,??DataTable7_12
   \       0x32   0x0031             MOVS     R1,R6
   \       0x34   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \       0x36   0xF850 0x0021      LDR      R0,[R0, R1, LSL #+2]
   \       0x3A   0x....'....        BL       __aeabi_f2iz
   \       0x3E   0x0031             MOVS     R1,R6
   \       0x40   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \       0x42   0xF845 0x0021      STR      R0,[R5, R1, LSL #+2]
    205              temp1[i] = (uint32)temp[i];
   \       0x46   0x0030             MOVS     R0,R6
   \       0x48   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \       0x4A   0xF855 0x0020      LDR      R0,[R5, R0, LSL #+2]
   \       0x4E   0xA903             ADD      R1,SP,#+12
   \       0x50   0x0032             MOVS     R2,R6
   \       0x52   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \       0x54   0xF841 0x0022      STR      R0,[R1, R2, LSL #+2]
    206            }
   \       0x58   0x1C76             ADDS     R6,R6,#+1
   \       0x5A   0xE7E4             B.N      ??OutPut_Data_0
    207            
    208            for(i=0;i<4;i++) 
   \                     ??OutPut_Data_1: (+1)
   \       0x5C   0x2500             MOVS     R5,#+0
   \                     ??OutPut_Data_2: (+1)
   \       0x5E   0x0028             MOVS     R0,R5
   \       0x60   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \       0x62   0x2804             CMP      R0,#+4
   \       0x64   0xDA16             BGE.N    ??OutPut_Data_3
    209            {
    210              databuf[i*2]   = (uint8)(temp1[i]%256);
   \       0x66   0xA803             ADD      R0,SP,#+12
   \       0x68   0x0029             MOVS     R1,R5
   \       0x6A   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \       0x6C   0xF850 0x1021      LDR      R1,[R0, R1, LSL #+2]
   \       0x70   0x466A             MOV      R2,SP
   \       0x72   0x002B             MOVS     R3,R5
   \       0x74   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \       0x76   0xF802 0x1013      STRB     R1,[R2, R3, LSL #+1]
    211              databuf[i*2+1] = (uint8)(temp1[i]/256);
   \       0x7A   0x0029             MOVS     R1,R5
   \       0x7C   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \       0x7E   0xF850 0x0021      LDR      R0,[R0, R1, LSL #+2]
   \       0x82   0x0A00             LSRS     R0,R0,#+8
   \       0x84   0x4669             MOV      R1,SP
   \       0x86   0x002A             MOVS     R2,R5
   \       0x88   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \       0x8A   0xEB01 0x0142      ADD      R1,R1,R2, LSL #+1
   \       0x8E   0x7048             STRB     R0,[R1, #+1]
    212            }
   \       0x90   0x1C6D             ADDS     R5,R5,#+1
   \       0x92   0xE7E4             B.N      ??OutPut_Data_2
    213            
    214            CRC16 = CRC_CHECK(databuf,8);
   \                     ??OutPut_Data_3: (+1)
   \       0x94   0x2108             MOVS     R1,#+8
   \       0x96   0x4668             MOV      R0,SP
   \       0x98   0x....'....        BL       CRC_CHECK
   \       0x9C   0x0006             MOVS     R6,R0
    215            databuf[8] = CRC16%256;
   \       0x9E   0x0030             MOVS     R0,R6
   \       0xA0   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \       0xA2   0xF44F 0x7180      MOV      R1,#+256
   \       0xA6   0x466F             MOV      R7,SP
   \       0xA8   0xFB90 0xF2F1      SDIV     R2,R0,R1
   \       0xAC   0xFB01 0x0012      MLS      R0,R1,R2,R0
   \       0xB0   0x7238             STRB     R0,[R7, #+8]
    216            databuf[9] = CRC16/256;
   \       0xB2   0x0030             MOVS     R0,R6
   \       0xB4   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \       0xB6   0xF44F 0x7180      MOV      R1,#+256
   \       0xBA   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \       0xBE   0xF88D 0x0009      STRB     R0,[SP, #+9]
    217            
    218            for(i=0;i<10;i++)
   \       0xC2   0xF05F 0x0800      MOVS     R8,#+0
   \                     ??OutPut_Data_4: (+1)
   \       0xC6   0x4640             MOV      R0,R8
   \       0xC8   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \       0xCA   0x280A             CMP      R0,#+10
   \       0xCC   0xDA0A             BGE.N    ??OutPut_Data_5
    219              LPLD_UART_PutChar(UART4,databuf[i]);                                    //此处根据硬件修改 
   \       0xCE   0x4640             MOV      R0,R8
   \       0xD0   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \       0xD2   0x5638             LDRSB    R0,[R7, R0]
   \       0xD4   0x0001             MOVS     R1,R0
   \       0xD6   0xB249             SXTB     R1,R1            ;; SignExt  R1,R1,#+24,#+24
   \       0xD8   0x....             LDR.N    R0,??DataTable7_2  ;; 0x400ea000
   \       0xDA   0x....'....        BL       LPLD_UART_PutChar
   \       0xDE   0xF118 0x0801      ADDS     R8,R8,#+1
   \       0xE2   0xE7F0             B.N      ??OutPut_Data_4
    220            //串口发送一个字节
    221          }
   \                     ??OutPut_Data_5: (+1)
   \       0xE4   0xB00C             ADD      SP,SP,#+48
   \       0xE6   0xE8BD 0x81F0      POP      {R4-R8,PC}       ;; return
    222          

   \                                 In section .text, align 2, keep-with-next
    223          void fusion_visualscope(float index1,float index2,float index3,float index4)
    224          {
   \                     fusion_visualscope: (+1)
   \        0x0   0xB5F8             PUSH     {R3-R7,LR}
   \        0x2   0x0004             MOVS     R4,R0
   \        0x4   0x000D             MOVS     R5,R1
   \        0x6   0x0016             MOVS     R6,R2
   \        0x8   0x001F             MOVS     R7,R3
    225            OutData[0] = index1;
   \        0xA   0x....             LDR.N    R0,??DataTable7_12
   \        0xC   0x6004             STR      R4,[R0, #+0]
    226            OutData[1] = index2;
   \        0xE   0x6045             STR      R5,[R0, #+4]
    227            OutData[2] = index3;
   \       0x10   0x6086             STR      R6,[R0, #+8]
    228            OutData[3] = index4;
   \       0x12   0x60C7             STR      R7,[R0, #+12]
    229            OutPut_Data();
   \       0x14   0x....'....        BL       OutPut_Data
    230          }
   \       0x18   0xBDF1             POP      {R0,R4-R7,PC}    ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7:
   \        0x0   0x....'....        DC32     nvic_init_struct

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_1:
   \        0x0   0x....'....        DC32     bluetooth_init_structure

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_2:
   \        0x0   0x400E'A000        DC32     0x400ea000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_3:
   \        0x0   0x....'....        DC32     btSndInfo

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_4:
   \        0x0   0x....'....        DC32     btRcvInfo

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_5:
   \        0x0   0x....'....        DC32     BinaryNumberBuffer

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_6:
   \        0x0   0x....'....        DC32     BtSndMsg

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_7:
   \        0x0   0x....'....        DC32     BtRcvMsg

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_8:
   \        0x0   0x....'....        DC32     `Bluetooth_Decoder::cnt`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_9:
   \        0x0   0x....'....        DC32     isConnect

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_10:
   \        0x0   0x400E'A007        DC32     0x400ea007

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_11:
   \        0x0   0x....'....        DC32     imgbuff

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_12:
   \        0x0   0x....'....        DC32     OutData

   \                                 In section .rodata, align 4
   \        0x0   0x0000'0000        DC32 0, 0, 0, 0
   \              0x0000'0000  
   \              0x0000'0000  
   \              0x0000'0000  

   \                                 In section .rodata, align 4
   \        0x0   0x0000'0000        DC32 0, 0, 0, 0
   \              0x0000'0000  
   \              0x0000'0000  
   \              0x0000'0000  

   \                                 In section .rodata, align 4
   \        0x0   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
    231          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       4   BinaryNumberToChar
      16   Bluetooth_Decoder
        16   -> CharToBinaryNumber
      16   Bluetooth_Encoder
        16   -> BinaryNumberToChar
        16   -> LPLD_UART_PutChar
      32   Bluetooth_Init
        16   -> LPLD_NVIC_Init
        16   -> LPLD_UART_EnableIrq
        16   -> LPLD_UART_Init
        32   -> __aeabi_memcpy4
      12   CRC_CHECK
       4   CharToBinaryNumber
      72   OutPut_Data
        72   -> CRC_CHECK
        72   -> LPLD_UART_PutChar
        72   -> __aeabi_f2iz
        72   -> __aeabi_memclr4
       0   btInfoInit
       0   bt_Isr
      24   fusion_visualscope
        24   -> OutPut_Data
       8   send_img_data
         8   -> LPLD_UART_PutChar
         8   -> LPLD_UART_PutCharArr


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable7
       4  ??DataTable7_1
       4  ??DataTable7_10
       4  ??DataTable7_11
       4  ??DataTable7_12
       4  ??DataTable7_2
       4  ??DataTable7_3
       4  ??DataTable7_4
       4  ??DataTable7_5
       4  ??DataTable7_6
       4  ??DataTable7_7
       4  ??DataTable7_8
       4  ??DataTable7_9
      16  ?_0
      16  ?_1
      12  ?_2
       8  BinaryNumberBuffer
      34  BinaryNumberToChar
     112  Bluetooth_Decoder
      86  Bluetooth_Encoder
     104  Bluetooth_Init
       1  BtRcvMsg
       1  BtSndMsg
      78  CRC_CHECK
      36  CharToBinaryNumber
      16  OutData
     234  OutPut_Data
      20  bluetooth_init_structure
      94  btInfoInit
       8  btRcvInfo
       8  btSndInfo
      18  bt_Isr
       1  cnt
      26  fusion_visualscope
       1  isConnect
      52  send_img_data

 
  64 bytes in section .bss
  44 bytes in section .rodata
 926 bytes in section .text
 
 926 bytes of CODE  memory
  44 bytes of CONST memory
  64 bytes of DATA  memory

Errors: none
Warnings: 1
