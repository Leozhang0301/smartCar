###############################################################################
#
# IAR ANSI C/C++ Compiler V8.32.1.169/W32 for ARM         08/Jul/2019  00:40:59
# Copyright 1999-2018 IAR Systems AB.
#
#    Cpu mode     =  
#    Endian       =  little
#    Source file  =  G:\AIcar\@@\xiugai\lib\common\Motor.c
#    Command line =  
#        -f C:\Users\admin\AppData\Local\Temp\EW7182.tmp
#        (G:\AIcar\@@\xiugai\lib\common\Motor.c -D LPLD_K60 -lCN
#        "G:\AIcar\@@\xiugai\project\28-(SDHC)LPLD_SdCard\iar\FLASH\List"
#        -lB
#        "G:\AIcar\@@\xiugai\project\28-(SDHC)LPLD_SdCard\iar\FLASH\List"
#        -o "G:\AIcar\@@\xiugai\project\28-(SDHC)LPLD_SdCard\iar\FLASH\Obj"
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M4 -e --fpu=None --dlib_config
#        G:\AIcar\arm\inc\c\DLib_Config_Normal.h -I
#        "G:\AIcar\@@\xiugai\project\28-(SDHC)LPLD_SdCard\iar\..\app\" -I
#        "G:\AIcar\@@\xiugai\project\28-(SDHC)LPLD_SdCard\iar\..\..\..\lib\CPU\"
#        -I
#        "G:\AIcar\@@\xiugai\project\28-(SDHC)LPLD_SdCard\iar\..\..\..\lib\common\"
#        -I
#        "G:\AIcar\@@\xiugai\project\28-(SDHC)LPLD_SdCard\iar\..\..\..\lib\LPLD\"
#        -I
#        "G:\AIcar\@@\xiugai\project\28-(SDHC)LPLD_SdCard\iar\..\..\..\lib\LPLD\HW\"
#        -I
#        "G:\AIcar\@@\xiugai\project\28-(SDHC)LPLD_SdCard\iar\..\..\..\lib\LPLD\DEV\"
#        -I
#        "G:\AIcar\@@\xiugai\project\28-(SDHC)LPLD_SdCard\iar\..\..\..\lib\uCOS-II\Ports\"
#        -I
#        "G:\AIcar\@@\xiugai\project\28-(SDHC)LPLD_SdCard\iar\..\..\..\lib\uCOS-II\Source\"
#        -I
#        "G:\AIcar\@@\xiugai\project\28-(SDHC)LPLD_SdCard\iar\..\..\..\lib\FatFs\"
#        -I
#        "G:\AIcar\@@\xiugai\project\28-(SDHC)LPLD_SdCard\iar\..\..\..\lib\FatFs\option\"
#        -I
#        "G:\AIcar\@@\xiugai\project\28-(SDHC)LPLD_SdCard\iar\..\..\..\lib\USB\common\"
#        -I
#        "G:\AIcar\@@\xiugai\project\28-(SDHC)LPLD_SdCard\iar\..\..\..\lib\USB\driver\"
#        -I
#        "G:\AIcar\@@\xiugai\project\28-(SDHC)LPLD_SdCard\iar\..\..\..\lib\USB\descriptor\"
#        -I
#        "G:\AIcar\@@\xiugai\project\28-(SDHC)LPLD_SdCard\iar\..\..\..\lib\USB\class\"
#        -I
#        "G:\AIcar\@@\xiugai\project\28-(SDHC)LPLD_SdCard\iar\..\..\..\lib\Jay\"
#        -On -I G:\AIcar\arm\CMSIS\Core\Include\ -I
#        G:\AIcar\arm\CMSIS\DSP\Include\ -D ARM_MATH_CM4)
#    Locale       =  C
#    List file    =  
#        G:\AIcar\@@\xiugai\project\28-(SDHC)LPLD_SdCard\iar\FLASH\List\Motor.lst
#    Object file  =  
#        G:\AIcar\@@\xiugai\project\28-(SDHC)LPLD_SdCard\iar\FLASH\Obj\Motor.o
#
###############################################################################

G:\AIcar\@@\xiugai\lib\common\Motor.c
      1          #include "include.h"
      2          
      3          #define MAX_SPEED 5000
      4          #define MAX_SPEED_L -5000
      5          
      6          //Motor PID;

   \                                 In section .bss, align 4
      7          FTM_InitTypeDef ftm_init_struct3;
   \                     ftm_init_struct3:
   \        0x0                      DS8 28
      8          
      9          
     10          
     11          

   \                                 In section .data, align 4
     12          int SpeedHigh = 60;
   \                     SpeedHigh:
   \        0x0   0x0000'003C        DC32 60

   \                                 In section .data, align 4
     13          int SpeedLow = 35;
   \                     SpeedLow:
   \        0x0   0x0000'0023        DC32 35

   \                                 In section .data, align 2
     14          int16 EDS_MAX = 10;
   \                     EDS_MAX:
   \        0x0   0x000A             DC16 10
     15          

   \                                 In section .text, align 2, keep-with-next
     16          void init_Motor()
     17          {
   \                     init_Motor: (+1)
   \        0x0   0xB51F             PUSH     {R0-R4,LR}
     18            ftm_init_struct3.FTM_Ftmx = FTM0;	//使能FTM0通道
   \        0x2   0x....             LDR.N    R1,??DataTable1
   \        0x4   0x....             LDR.N    R4,??DataTable1_1  ;; 0x40038000
   \        0x6   0x600C             STR      R4,[R1, #+0]
     19            ftm_init_struct3.FTM_Mode = FTM_MODE_PWM;	//使能PWM模式
   \        0x8   0x2001             MOVS     R0,#+1
   \        0xA   0x7108             STRB     R0,[R1, #+4]
     20            ftm_init_struct3.FTM_PwmFreq = 15000;	//PWM频率10000Hz
   \        0xC   0xF643 0x2098      MOVW     R0,#+15000
   \       0x10   0x6088             STR      R0,[R1, #+8]
     21            LPLD_FTM_Init(ftm_init_struct3);
   \       0x12   0xB084             SUB      SP,SP,#+16
   \       0x14   0x4668             MOV      R0,SP
   \       0x16   0x221C             MOVS     R2,#+28
   \       0x18   0x....'....        BL       __aeabi_memcpy4
   \       0x1C   0xBC0F             POP      {R0-R3}
   \       0x1E   0x....'....        BL       LPLD_FTM_Init
     22            
     23            
     24          //右上正
     25            LPLD_FTM_PWM_Enable(FTM0,//使用FTM0
     26                                FTM_Ch0,   //使能Ch2通道 
     27                                0,
     28                                PTC1, //使用Ch1通道的PTC3引脚
     29                                ALIGN_LEFT);        //脉宽左对齐
   \       0x22   0x2028             MOVS     R0,#+40
   \       0x24   0x9000             STR      R0,[SP, #+0]
   \       0x26   0x233D             MOVS     R3,#+61
   \       0x28   0x2200             MOVS     R2,#+0
   \       0x2A   0x2100             MOVS     R1,#+0
   \       0x2C   0x0020             MOVS     R0,R4
   \       0x2E   0x....'....        BL       LPLD_FTM_PWM_Enable
     30          //右上负
     31            LPLD_FTM_PWM_Enable(FTM0,//使用FTM0
     32                                FTM_Ch1,   //使能Ch3通道 
     33                                0,
     34                                PTC2, //使用Ch1通道的PTC4引脚
     35                                ALIGN_LEFT);        //脉宽左对齐
   \       0x32   0x2028             MOVS     R0,#+40
   \       0x34   0x9000             STR      R0,[SP, #+0]
   \       0x36   0x233E             MOVS     R3,#+62
   \       0x38   0x2200             MOVS     R2,#+0
   \       0x3A   0x2101             MOVS     R1,#+1
   \       0x3C   0x0020             MOVS     R0,R4
   \       0x3E   0x....'....        BL       LPLD_FTM_PWM_Enable
     36          //左上负
     37            LPLD_FTM_PWM_Enable(FTM0,//使用FTM0
     38                                FTM_Ch2,   //使能Ch3通道 
     39                                0,
     40                                PTC3, //使用Ch1通道的PTC4引脚
     41                                ALIGN_LEFT);        //脉宽左对齐
   \       0x42   0x2028             MOVS     R0,#+40
   \       0x44   0x9000             STR      R0,[SP, #+0]
   \       0x46   0x233F             MOVS     R3,#+63
   \       0x48   0x2200             MOVS     R2,#+0
   \       0x4A   0x2102             MOVS     R1,#+2
   \       0x4C   0x0020             MOVS     R0,R4
   \       0x4E   0x....'....        BL       LPLD_FTM_PWM_Enable
     42          //左上正
     43            LPLD_FTM_PWM_Enable(FTM0,//使用FTM0
     44                                FTM_Ch3,   //使能Ch3通道 
     45                                0,
     46                                PTC4, //使用Ch1通道的PTC4引脚
     47                                ALIGN_LEFT);        //脉宽左对齐  
   \       0x52   0x2028             MOVS     R0,#+40
   \       0x54   0x9000             STR      R0,[SP, #+0]
   \       0x56   0x2340             MOVS     R3,#+64
   \       0x58   0x2200             MOVS     R2,#+0
   \       0x5A   0x2103             MOVS     R1,#+3
   \       0x5C   0x0020             MOVS     R0,R4
   \       0x5E   0x....'....        BL       LPLD_FTM_PWM_Enable
     48          //右下正
     49            LPLD_FTM_PWM_Enable(FTM0,//使用FTM0
     50                                FTM_Ch7,   //使能Ch2通道 
     51                                0,
     52                                PTD7, //使用Ch1通道的PTC3引脚
     53                                ALIGN_LEFT);        //脉宽左对齐
   \       0x62   0x2028             MOVS     R0,#+40
   \       0x64   0x9000             STR      R0,[SP, #+0]
   \       0x66   0x2363             MOVS     R3,#+99
   \       0x68   0x2200             MOVS     R2,#+0
   \       0x6A   0x2107             MOVS     R1,#+7
   \       0x6C   0x0020             MOVS     R0,R4
   \       0x6E   0x....'....        BL       LPLD_FTM_PWM_Enable
     54          //右下负
     55            LPLD_FTM_PWM_Enable(FTM0,//使用FTM0
     56                                FTM_Ch6,   //使能Ch3通道 
     57                                0,
     58                                PTD6, //使用Ch1通道的PTC4引脚
     59                                ALIGN_LEFT);        //脉宽左对齐
   \       0x72   0x2028             MOVS     R0,#+40
   \       0x74   0x9000             STR      R0,[SP, #+0]
   \       0x76   0x2362             MOVS     R3,#+98
   \       0x78   0x2200             MOVS     R2,#+0
   \       0x7A   0x2106             MOVS     R1,#+6
   \       0x7C   0x0020             MOVS     R0,R4
   \       0x7E   0x....'....        BL       LPLD_FTM_PWM_Enable
     60          //左下正
     61            LPLD_FTM_PWM_Enable(FTM0,//使用FTM0
     62                                FTM_Ch5,   //使能Ch3通道 
     63                                0,
     64                                PTD5, //使用Ch1通道的PTC4引脚
     65                                ALIGN_LEFT);        //脉宽左对齐
   \       0x82   0x2028             MOVS     R0,#+40
   \       0x84   0x9000             STR      R0,[SP, #+0]
   \       0x86   0x2361             MOVS     R3,#+97
   \       0x88   0x2200             MOVS     R2,#+0
   \       0x8A   0x2105             MOVS     R1,#+5
   \       0x8C   0x0020             MOVS     R0,R4
   \       0x8E   0x....'....        BL       LPLD_FTM_PWM_Enable
     66          //左下反
     67            LPLD_FTM_PWM_Enable(FTM0,//使用FTM0
     68                                FTM_Ch4,   //使能Ch3通道 
     69                                0,
     70                                PTD4, //使用Ch1通道的PTC4引脚
     71                                ALIGN_LEFT);        //脉宽左对齐
   \       0x92   0x2028             MOVS     R0,#+40
   \       0x94   0x9000             STR      R0,[SP, #+0]
   \       0x96   0x2360             MOVS     R3,#+96
   \       0x98   0x2200             MOVS     R2,#+0
   \       0x9A   0x2104             MOVS     R1,#+4
   \       0x9C   0x0020             MOVS     R0,R4
   \       0x9E   0x....'....        BL       LPLD_FTM_PWM_Enable
     72          }
   \       0xA2   0xBD1F             POP      {R0-R4,PC}       ;; return
     73          
     74          
     75          

   \                                 In section .text, align 2, keep-with-next
     76          void Motor_control(void)
     77          {   
   \                     Motor_control: (+1)
   \        0x0   0xB538             PUSH     {R3-R5,LR}
     78          //  if(P1 >= 0) //左上正
     79          //  { 
     80          //    if(P1 >= MAX_SPEED) 
     81          //    {      
     82          //      P1 = MAX_SPEED;
     83          //    }   
     84          //    LPLD_FTM_PWM_ChangeDuty(FTM0, FTM_Ch3, 0);
     85          //    LPLD_FTM_PWM_ChangeDuty(FTM0, FTM_Ch2,P1 );
     86          //  }
     87          //  else //左上负
     88          //  { 
     89          //    if(P1 <= MAX_SPEED_L) 
     90          //    {      
     91          //      P1 = MAX_SPEED_L;
     92          //    }   
     93          //    LPLD_FTM_PWM_ChangeDuty(FTM0, FTM_Ch3, -P1);
     94          //    LPLD_FTM_PWM_ChangeDuty(FTM0, FTM_Ch2, 0); 
     95          //  }
     96          //  
     97          //  
     98          //  if(P2 >= 0) //右上正
     99          //  { 
    100          //    if(P2 >= MAX_SPEED) 
    101          //    {
    102          //      P2 = MAX_SPEED;
    103          //    }
    104          //    LPLD_FTM_PWM_ChangeDuty(FTM0, FTM_Ch1, 0);   
    105          //    LPLD_FTM_PWM_ChangeDuty(FTM0, FTM_Ch0,  P2);
    106          // 
    107          //  }
    108          //  else //右上fan
    109          //  { 
    110          //    if(P2 <= MAX_SPEED_L) 
    111          //    {
    112          //      P2 = MAX_SPEED_L;
    113          //    }
    114          //    LPLD_FTM_PWM_ChangeDuty(FTM0, FTM_Ch1, -P2 );   
    115          //    LPLD_FTM_PWM_ChangeDuty(FTM0, FTM_Ch0, 0);
    116          // 
    117          //  }
    118          //
    119          //  
    120          //  if(P4 >= 0) //右下正
    121          //  { 
    122          //    if(P4 >= MAX_SPEED) 
    123          //    {
    124          //      P4 = MAX_SPEED;
    125          //    }
    126          //    LPLD_FTM_PWM_ChangeDuty(FTM0, FTM_Ch6, P4);  
    127          //    LPLD_FTM_PWM_ChangeDuty(FTM0, FTM_Ch7, 0);
    128          // 
    129          //  }
    130          //  else
    131          //  { 
    132          //    if(P4 <= MAX_SPEED_L) 
    133          //    {
    134          //      P4 = MAX_SPEED_L;
    135          //    }
    136          //    LPLD_FTM_PWM_ChangeDuty(FTM0, FTM_Ch6,  0);  
    137          //    LPLD_FTM_PWM_ChangeDuty(FTM0, FTM_Ch7, -P4 );
    138          // 
    139          //  }
    140          //
    141          //  
    142          //    if(P3 >= 0) //左下正
    143          //  { 
    144          //    if(P3 >= MAX_SPEED) 
    145          //    {
    146          //     P3 = MAX_SPEED;
    147          //    }
    148          //    LPLD_FTM_PWM_ChangeDuty(FTM0, FTM_Ch4,P3 );
    149          //    LPLD_FTM_PWM_ChangeDuty(FTM0, FTM_Ch5, 0);
    150          // 
    151          //  }
    152          //  else
    153          //  { 
    154          //    if(P3 <= MAX_SPEED_L) 
    155          //    {
    156          //      P3 = MAX_SPEED_L;
    157          //    }
    158          //    LPLD_FTM_PWM_ChangeDuty(FTM0, FTM_Ch4,0);
    159          //    LPLD_FTM_PWM_ChangeDuty(FTM0, FTM_Ch5,  -P3);
    160          // 
    161          //  }
    162            if(back==1)
   \        0x2   0x....             LDR.N    R0,??DataTable1_2
   \        0x4   0x7800             LDRB     R0,[R0, #+0]
   \        0x6   0x2801             CMP      R0,#+1
   \        0x8   0xD12B             BNE.N    ??Motor_control_0
    163            {
    164              LPLD_FTM_PWM_ChangeDuty(FTM0, FTM_Ch5,3000 );//zuo
   \        0xA   0x....             LDR.N    R4,??DataTable1_1  ;; 0x40038000
   \        0xC   0xF640 0x35B8      MOVW     R5,#+3000
   \       0x10   0x002A             MOVS     R2,R5
   \       0x12   0x2105             MOVS     R1,#+5
   \       0x14   0x0020             MOVS     R0,R4
   \       0x16   0x....'....        BL       LPLD_FTM_PWM_ChangeDuty
    165              LPLD_FTM_PWM_ChangeDuty(FTM0, FTM_Ch4, 0);
   \       0x1A   0x2200             MOVS     R2,#+0
   \       0x1C   0x2104             MOVS     R1,#+4
   \       0x1E   0x0020             MOVS     R0,R4
   \       0x20   0x....'....        BL       LPLD_FTM_PWM_ChangeDuty
    166              
    167              LPLD_FTM_PWM_ChangeDuty(FTM0, FTM_Ch6, 0);  
   \       0x24   0x2200             MOVS     R2,#+0
   \       0x26   0x2106             MOVS     R1,#+6
   \       0x28   0x0020             MOVS     R0,R4
   \       0x2A   0x....'....        BL       LPLD_FTM_PWM_ChangeDuty
    168              LPLD_FTM_PWM_ChangeDuty(FTM0, FTM_Ch7, 3000);
   \       0x2E   0x002A             MOVS     R2,R5
   \       0x30   0x2107             MOVS     R1,#+7
   \       0x32   0x0020             MOVS     R0,R4
   \       0x34   0x....'....        BL       LPLD_FTM_PWM_ChangeDuty
    169             
    170              LPLD_FTM_PWM_ChangeDuty(FTM0, FTM_Ch1, 3000); 
   \       0x38   0x002A             MOVS     R2,R5
   \       0x3A   0x2101             MOVS     R1,#+1
   \       0x3C   0x0020             MOVS     R0,R4
   \       0x3E   0x....'....        BL       LPLD_FTM_PWM_ChangeDuty
    171              LPLD_FTM_PWM_ChangeDuty(FTM0, FTM_Ch0,  0);
   \       0x42   0x2200             MOVS     R2,#+0
   \       0x44   0x2100             MOVS     R1,#+0
   \       0x46   0x0020             MOVS     R0,R4
   \       0x48   0x....'....        BL       LPLD_FTM_PWM_ChangeDuty
    172              
    173              LPLD_FTM_PWM_ChangeDuty(FTM0, FTM_Ch2, 0);
   \       0x4C   0x2200             MOVS     R2,#+0
   \       0x4E   0x2102             MOVS     R1,#+2
   \       0x50   0x0020             MOVS     R0,R4
   \       0x52   0x....'....        BL       LPLD_FTM_PWM_ChangeDuty
    174              LPLD_FTM_PWM_ChangeDuty(FTM0, FTM_Ch3,3000); 
   \       0x56   0x002A             MOVS     R2,R5
   \       0x58   0x2103             MOVS     R1,#+3
   \       0x5A   0x0020             MOVS     R0,R4
   \       0x5C   0x....'....        BL       LPLD_FTM_PWM_ChangeDuty
   \       0x60   0xE02C             B.N      ??Motor_control_1
    175            }
    176            else
    177            {
    178              LPLD_FTM_PWM_ChangeDuty(FTM0, FTM_Ch5,0 );//zuo
   \                     ??Motor_control_0: (+1)
   \       0x62   0x....             LDR.N    R4,??DataTable1_1  ;; 0x40038000
   \       0x64   0x2200             MOVS     R2,#+0
   \       0x66   0x2105             MOVS     R1,#+5
   \       0x68   0x0020             MOVS     R0,R4
   \       0x6A   0x....'....        BL       LPLD_FTM_PWM_ChangeDuty
    179              LPLD_FTM_PWM_ChangeDuty(FTM0, FTM_Ch4, P1);
   \       0x6E   0x....             LDR.N    R0,??DataTable1_3
   \       0x70   0x6802             LDR      R2,[R0, #+0]
   \       0x72   0x2104             MOVS     R1,#+4
   \       0x74   0x0020             MOVS     R0,R4
   \       0x76   0x....'....        BL       LPLD_FTM_PWM_ChangeDuty
    180              
    181              LPLD_FTM_PWM_ChangeDuty(FTM0, FTM_Ch6, P2);  
   \       0x7A   0x....             LDR.N    R0,??DataTable1_4
   \       0x7C   0x6802             LDR      R2,[R0, #+0]
   \       0x7E   0x2106             MOVS     R1,#+6
   \       0x80   0x0020             MOVS     R0,R4
   \       0x82   0x....'....        BL       LPLD_FTM_PWM_ChangeDuty
    182              LPLD_FTM_PWM_ChangeDuty(FTM0, FTM_Ch7, 0);
   \       0x86   0x2200             MOVS     R2,#+0
   \       0x88   0x2107             MOVS     R1,#+7
   \       0x8A   0x0020             MOVS     R0,R4
   \       0x8C   0x....'....        BL       LPLD_FTM_PWM_ChangeDuty
    183             
    184              LPLD_FTM_PWM_ChangeDuty(FTM0, FTM_Ch1, 0); 
   \       0x90   0x2200             MOVS     R2,#+0
   \       0x92   0x2101             MOVS     R1,#+1
   \       0x94   0x0020             MOVS     R0,R4
   \       0x96   0x....'....        BL       LPLD_FTM_PWM_ChangeDuty
    185              LPLD_FTM_PWM_ChangeDuty(FTM0, FTM_Ch0,  P3);
   \       0x9A   0x....             LDR.N    R0,??DataTable1_5
   \       0x9C   0x6802             LDR      R2,[R0, #+0]
   \       0x9E   0x2100             MOVS     R1,#+0
   \       0xA0   0x0020             MOVS     R0,R4
   \       0xA2   0x....'....        BL       LPLD_FTM_PWM_ChangeDuty
    186              
    187              LPLD_FTM_PWM_ChangeDuty(FTM0, FTM_Ch2,P4 );
   \       0xA6   0x....             LDR.N    R0,??DataTable1_6
   \       0xA8   0x6802             LDR      R2,[R0, #+0]
   \       0xAA   0x2102             MOVS     R1,#+2
   \       0xAC   0x0020             MOVS     R0,R4
   \       0xAE   0x....'....        BL       LPLD_FTM_PWM_ChangeDuty
    188              LPLD_FTM_PWM_ChangeDuty(FTM0, FTM_Ch3,0 ); 
   \       0xB2   0x2200             MOVS     R2,#+0
   \       0xB4   0x2103             MOVS     R1,#+3
   \       0xB6   0x0020             MOVS     R0,R4
   \       0xB8   0x....'....        BL       LPLD_FTM_PWM_ChangeDuty
    189            }
    190          }
   \                     ??Motor_control_1: (+1)
   \       0xBC   0xBD31             POP      {R0,R4,R5,PC}    ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1:
   \        0x0   0x....'....        DC32     ftm_init_struct3

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_1:
   \        0x0   0x4003'8000        DC32     0x40038000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_2:
   \        0x0   0x....'....        DC32     back

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_3:
   \        0x0   0x....'....        DC32     `P1`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_4:
   \        0x0   0x....'....        DC32     `P2`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_5:
   \        0x0   0x....'....        DC32     `P3`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_6:
   \        0x0   0x....'....        DC32     `P4`
    191          
    192          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      16   Motor_control
        16   -> LPLD_FTM_PWM_ChangeDuty
      40   init_Motor
        24   -> LPLD_FTM_Init
        24   -> LPLD_FTM_PWM_Enable
        40   -> __aeabi_memcpy4


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable1
       4  ??DataTable1_1
       4  ??DataTable1_2
       4  ??DataTable1_3
       4  ??DataTable1_4
       4  ??DataTable1_5
       4  ??DataTable1_6
       2  EDS_MAX
     190  Motor_control
       4  SpeedHigh
       4  SpeedLow
      28  ftm_init_struct3
     164  init_Motor

 
  28 bytes in section .bss
  10 bytes in section .data
 382 bytes in section .text
 
 382 bytes of CODE memory
  38 bytes of DATA memory

Errors: none
Warnings: 1
