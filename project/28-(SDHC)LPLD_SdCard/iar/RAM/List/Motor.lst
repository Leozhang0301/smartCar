###############################################################################
#
# IAR ANSI C/C++ Compiler V8.32.1.169/W32 for ARM         21/May/2019  22:07:19
# Copyright 1999-2018 IAR Systems AB.
#
#    Cpu mode     =  
#    Endian       =  little
#    Source file  =  C:\Users\que\Desktop\AAA_xinbiao\xiugai\lib\common\Motor.c
#    Command line =  
#        -f C:\Users\TEMPLA~1.000\AppData\Local\Temp\EW4220.tmp
#        (C:\Users\que\Desktop\AAA_xinbiao\xiugai\lib\common\Motor.c -D
#        LPLD_K60 -lCN
#        "C:\Users\que\Desktop\AAA_xinbiao\xiugai\project\28-(SDHC)LPLD_SdCard\iar\RAM\List"
#        -lB
#        "C:\Users\que\Desktop\AAA_xinbiao\xiugai\project\28-(SDHC)LPLD_SdCard\iar\RAM\List"
#        -o
#        "C:\Users\que\Desktop\AAA_xinbiao\xiugai\project\28-(SDHC)LPLD_SdCard\iar\RAM\Obj"
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M4 -e --fpu=None --dlib_config "D:\@@\605110 IAR for
#        ARM 8.30\arm\inc\c\DLib_Config_Normal.h" -I
#        "C:\Users\que\Desktop\AAA_xinbiao\xiugai\project\28-(SDHC)LPLD_SdCard\iar\..\app\"
#        -I
#        "C:\Users\que\Desktop\AAA_xinbiao\xiugai\project\28-(SDHC)LPLD_SdCard\iar\..\..\..\lib\CPU\"
#        -I
#        "C:\Users\que\Desktop\AAA_xinbiao\xiugai\project\28-(SDHC)LPLD_SdCard\iar\..\..\..\lib\common\"
#        -I
#        "C:\Users\que\Desktop\AAA_xinbiao\xiugai\project\28-(SDHC)LPLD_SdCard\iar\..\..\..\lib\LPLD\"
#        -I
#        "C:\Users\que\Desktop\AAA_xinbiao\xiugai\project\28-(SDHC)LPLD_SdCard\iar\..\..\..\lib\LPLD\HW\"
#        -I
#        "C:\Users\que\Desktop\AAA_xinbiao\xiugai\project\28-(SDHC)LPLD_SdCard\iar\..\..\..\lib\LPLD\DEV\"
#        -I
#        "C:\Users\que\Desktop\AAA_xinbiao\xiugai\project\28-(SDHC)LPLD_SdCard\iar\..\..\..\lib\uCOS-II\Ports\"
#        -I
#        "C:\Users\que\Desktop\AAA_xinbiao\xiugai\project\28-(SDHC)LPLD_SdCard\iar\..\..\..\lib\uCOS-II\Source\"
#        -I
#        "C:\Users\que\Desktop\AAA_xinbiao\xiugai\project\28-(SDHC)LPLD_SdCard\iar\..\..\..\lib\FatFs\"
#        -I
#        "C:\Users\que\Desktop\AAA_xinbiao\xiugai\project\28-(SDHC)LPLD_SdCard\iar\..\..\..\lib\FatFs\option\"
#        -I
#        "C:\Users\que\Desktop\AAA_xinbiao\xiugai\project\28-(SDHC)LPLD_SdCard\iar\..\..\..\lib\USB\common\"
#        -I
#        "C:\Users\que\Desktop\AAA_xinbiao\xiugai\project\28-(SDHC)LPLD_SdCard\iar\..\..\..\lib\USB\driver\"
#        -I
#        "C:\Users\que\Desktop\AAA_xinbiao\xiugai\project\28-(SDHC)LPLD_SdCard\iar\..\..\..\lib\USB\descriptor\"
#        -I
#        "C:\Users\que\Desktop\AAA_xinbiao\xiugai\project\28-(SDHC)LPLD_SdCard\iar\..\..\..\lib\USB\class\"
#        -I
#        "C:\Users\que\Desktop\AAA_xinbiao\xiugai\project\28-(SDHC)LPLD_SdCard\iar\..\..\..\lib\Me\"
#        -I
#        "C:\Users\que\Desktop\AAA_xinbiao\xiugai\project\28-(SDHC)LPLD_SdCard\iar\..\app\"
#        -I
#        "C:\Users\que\Desktop\AAA_xinbiao\xiugai\project\28-(SDHC)LPLD_SdCard\iar\..\app\"
#        -I
#        "C:\Users\que\Desktop\AAA_xinbiao\xiugai\project\28-(SDHC)LPLD_SdCard\iar\..\..\..\lib\"
#        -I
#        "C:\Users\que\Desktop\AAA_xinbiao\xiugai\project\28-(SDHC)LPLD_SdCard\iar\..\..\..\lib\common\"
#        -I
#        "C:\Users\que\Desktop\AAA_xinbiao\xiugai\project\28-(SDHC)LPLD_SdCard\iar\..\..\..\lib\CPU\"
#        -I
#        "C:\Users\que\Desktop\AAA_xinbiao\xiugai\project\28-(SDHC)LPLD_SdCard\iar\..\..\..\lib\Jay\"
#        -Ol -I "D:\@@\605110 IAR for ARM 8.30\arm\CMSIS\Core\Include\" -I
#        "D:\@@\605110 IAR for ARM 8.30\arm\CMSIS\DSP\Include\" -D
#        ARM_MATH_CM4)
#    Locale       =  C
#    List file    =  
#        C:\Users\que\Desktop\AAA_xinbiao\xiugai\project\28-(SDHC)LPLD_SdCard\iar\RAM\List\Motor.lst
#    Object file  =  
#        C:\Users\que\Desktop\AAA_xinbiao\xiugai\project\28-(SDHC)LPLD_SdCard\iar\RAM\Obj\Motor.o
#
###############################################################################

C:\Users\que\Desktop\AAA_xinbiao\xiugai\lib\common\Motor.c
      1          #include "include.h"
      2          
      3          #define MAX_SPEED 3000
      4          #define MAX_SPEED_L -3000
      5          

   \                                 In section .bss, align 8
      6          Motor PID;
   \                     PID:
   \        0x0                      DS8 144

   \                                 In section .bss, align 4
      7          FTM_InitTypeDef ftm_init_struct3;
   \                     ftm_init_struct3:
   \        0x0                      DS8 28
      8          
      9          extern _pid_t pid_left_front;     /*结构体 左前轮PID参数*/
     10          extern _pid_t pid_right_front;		/*结构体 右前轮PID参数*/
     11          extern _pid_t pid_left_rear;			/*结构体 左后轮PID参数*/
     12          extern _pid_t pid_right_rear;			/*结构体 右后轮PID参数*/
     13          
     14          extern s16 Move_Z ; 

   \                                 In section .bss, align 2
     15          s16 Move_y;
   \                     Move_y:
   \        0x0                      DS8 2
     16          extern s16 KP ;  //方向环的PD
     17          extern s16 KD ;

   \                                 In section .data, align 4
     18          float P = 3.0f;//90;  
   \                     P:
   \        0x0   0x4040'0000        DC32 40400000H

   \                                 In section .bss, align 4
     19          float I = 0.0f;//22;
   \                     I:
   \        0x0                      DS8 4

   \                                 In section .bss, align 4
     20          float D = 0.0f;//30;
   \                     D:
   \        0x0                      DS8 4
     21          

   \                                 In section .data, align 4
     22          int SpeedHigh = 60;
   \                     SpeedHigh:
   \        0x0   0x0000'003C        DC32 60

   \                                 In section .data, align 4
     23          int SpeedLow = 35;
   \                     SpeedLow:
   \        0x0   0x0000'0023        DC32 35

   \                                 In section .data, align 2
     24          int16 EDS_MAX = 10;
   \                     EDS_MAX:
   \        0x0   0x000A             DC16 10
     25          

   \                                 In section .text, align 2, keep-with-next
     26          void init_Motor()
     27          {
   \                     init_Motor: (+1)
   \        0x0   0xB51F             PUSH     {R0-R4,LR}
     28            ftm_init_struct3.FTM_Ftmx = FTM0;	//使能FTM0通道
   \        0x2   0x....             LDR.N    R1,??DataTable4
   \        0x4   0x....             LDR.N    R4,??DataTable4_1  ;; 0x40038000
   \        0x6   0x600C             STR      R4,[R1, #+0]
     29            ftm_init_struct3.FTM_Mode = FTM_MODE_PWM;	//使能PWM模式
   \        0x8   0x2001             MOVS     R0,#+1
   \        0xA   0x7108             STRB     R0,[R1, #+4]
     30            ftm_init_struct3.FTM_PwmFreq = 15000;	//PWM频率10000Hz
   \        0xC   0xF643 0x2098      MOVW     R0,#+15000
   \       0x10   0x6088             STR      R0,[R1, #+8]
     31            LPLD_FTM_Init(ftm_init_struct3);
   \       0x12   0xB084             SUB      SP,SP,#+16
   \       0x14   0x4668             MOV      R0,SP
   \       0x16   0x221C             MOVS     R2,#+28
   \       0x18   0x....'....        BL       __aeabi_memcpy4
   \       0x1C   0xBC0F             POP      {R0-R3}
   \       0x1E   0x....'....        BL       LPLD_FTM_Init
     32            
     33            
     34          //右上正
     35            LPLD_FTM_PWM_Enable(FTM0,//使用FTM0
     36                                FTM_Ch0,   //使能Ch2通道 
     37                                0,
     38                                PTC1, //使用Ch1通道的PTC3引脚
     39                                ALIGN_LEFT);        //脉宽左对齐
   \       0x22   0x2028             MOVS     R0,#+40
   \       0x24   0x9000             STR      R0,[SP, #+0]
   \       0x26   0x233D             MOVS     R3,#+61
   \       0x28   0x2200             MOVS     R2,#+0
   \       0x2A   0x2100             MOVS     R1,#+0
   \       0x2C   0x0020             MOVS     R0,R4
   \       0x2E   0x....'....        BL       LPLD_FTM_PWM_Enable
     40          //右上负
     41            LPLD_FTM_PWM_Enable(FTM0,//使用FTM0
     42                                FTM_Ch1,   //使能Ch3通道 
     43                                0,
     44                                PTC2, //使用Ch1通道的PTC4引脚
     45                                ALIGN_LEFT);        //脉宽左对齐
   \       0x32   0x2028             MOVS     R0,#+40
   \       0x34   0x9000             STR      R0,[SP, #+0]
   \       0x36   0x233E             MOVS     R3,#+62
   \       0x38   0x2200             MOVS     R2,#+0
   \       0x3A   0x2101             MOVS     R1,#+1
   \       0x3C   0x0020             MOVS     R0,R4
   \       0x3E   0x....'....        BL       LPLD_FTM_PWM_Enable
     46          //左上负
     47            LPLD_FTM_PWM_Enable(FTM0,//使用FTM0
     48                                FTM_Ch2,   //使能Ch3通道 
     49                                0,
     50                                PTC3, //使用Ch1通道的PTC4引脚
     51                                ALIGN_LEFT);        //脉宽左对齐
   \       0x42   0x2028             MOVS     R0,#+40
   \       0x44   0x9000             STR      R0,[SP, #+0]
   \       0x46   0x233F             MOVS     R3,#+63
   \       0x48   0x2200             MOVS     R2,#+0
   \       0x4A   0x2102             MOVS     R1,#+2
   \       0x4C   0x0020             MOVS     R0,R4
   \       0x4E   0x....'....        BL       LPLD_FTM_PWM_Enable
     52          //左上正
     53            LPLD_FTM_PWM_Enable(FTM0,//使用FTM0
     54                                FTM_Ch3,   //使能Ch3通道 
     55                                0,
     56                                PTC4, //使用Ch1通道的PTC4引脚
     57                                ALIGN_LEFT);        //脉宽左对齐  
   \       0x52   0x2028             MOVS     R0,#+40
   \       0x54   0x9000             STR      R0,[SP, #+0]
   \       0x56   0x2340             MOVS     R3,#+64
   \       0x58   0x2200             MOVS     R2,#+0
   \       0x5A   0x2103             MOVS     R1,#+3
   \       0x5C   0x0020             MOVS     R0,R4
   \       0x5E   0x....'....        BL       LPLD_FTM_PWM_Enable
     58          //右下正
     59            LPLD_FTM_PWM_Enable(FTM0,//使用FTM0
     60                                FTM_Ch7,   //使能Ch2通道 
     61                                0,
     62                                PTD7, //使用Ch1通道的PTC3引脚
     63                                ALIGN_LEFT);        //脉宽左对齐
   \       0x62   0x2028             MOVS     R0,#+40
   \       0x64   0x9000             STR      R0,[SP, #+0]
   \       0x66   0x2363             MOVS     R3,#+99
   \       0x68   0x2200             MOVS     R2,#+0
   \       0x6A   0x2107             MOVS     R1,#+7
   \       0x6C   0x0020             MOVS     R0,R4
   \       0x6E   0x....'....        BL       LPLD_FTM_PWM_Enable
     64          //右下负
     65            LPLD_FTM_PWM_Enable(FTM0,//使用FTM0
     66                                FTM_Ch6,   //使能Ch3通道 
     67                                0,
     68                                PTD6, //使用Ch1通道的PTC4引脚
     69                                ALIGN_LEFT);        //脉宽左对齐
   \       0x72   0x2028             MOVS     R0,#+40
   \       0x74   0x9000             STR      R0,[SP, #+0]
   \       0x76   0x2362             MOVS     R3,#+98
   \       0x78   0x2200             MOVS     R2,#+0
   \       0x7A   0x2106             MOVS     R1,#+6
   \       0x7C   0x0020             MOVS     R0,R4
   \       0x7E   0x....'....        BL       LPLD_FTM_PWM_Enable
     70          //左下正
     71            LPLD_FTM_PWM_Enable(FTM0,//使用FTM0
     72                                FTM_Ch5,   //使能Ch3通道 
     73                                0,
     74                                PTD5, //使用Ch1通道的PTC4引脚
     75                                ALIGN_LEFT);        //脉宽左对齐
   \       0x82   0x2028             MOVS     R0,#+40
   \       0x84   0x9000             STR      R0,[SP, #+0]
   \       0x86   0x2361             MOVS     R3,#+97
   \       0x88   0x2200             MOVS     R2,#+0
   \       0x8A   0x2105             MOVS     R1,#+5
   \       0x8C   0x0020             MOVS     R0,R4
   \       0x8E   0x....'....        BL       LPLD_FTM_PWM_Enable
     76          //左下反
     77            LPLD_FTM_PWM_Enable(FTM0,//使用FTM0
     78                                FTM_Ch4,   //使能Ch3通道 
     79                                0,
     80                                PTD4, //使用Ch1通道的PTC4引脚
     81                                ALIGN_LEFT);        //脉宽左对齐
   \       0x92   0x2028             MOVS     R0,#+40
   \       0x94   0x9000             STR      R0,[SP, #+0]
   \       0x96   0x2360             MOVS     R3,#+96
   \       0x98   0x2200             MOVS     R2,#+0
   \       0x9A   0x2104             MOVS     R1,#+4
   \       0x9C   0x0020             MOVS     R0,R4
   \       0x9E   0x....'....        BL       LPLD_FTM_PWM_Enable
     82          }
   \       0xA2   0xBD1F             POP      {R0-R4,PC}       ;; return
     83          
     84          //void init_PID()
     85          //{	
     86          //	pid_left_front.kp=P;
     87          //	pid_left_front.ki=I;
     88          //	pid_left_front.kd=D;
     89          //	
     90          //	pid_right_front.kp=P;
     91          //	pid_right_front.ki=I;
     92          //	pid_right_front.kd=D;
     93          //	
     94          //	pid_left_rear.kp=P;
     95          //	pid_left_rear.ki=I;
     96          //	pid_left_rear.kd=D;
     97          //	
     98          //	pid_right_rear.kp=P;
     99          //	pid_right_rear.ki=I;
    100          //	pid_right_rear.kd=D;
    101          	
    102          //	pid_left_front.err=0;
    103          //	pid_left_front.last_err=0;
    104          //	pid_left_front.last_last_err=0;
    105          //	pid_left_front.result=0;
    106          //	
    107          //	pid_right_front.err=0;
    108          //	pid_right_front.last_err=0;
    109          //	pid_right_front.last_last_err=0;
    110          //	pid_right_front.result=0;
    111          //	
    112          //	
    113          //	pid_left_rear.err=0;
    114          //	pid_left_rear.last_err=0;
    115          //	pid_left_rear.last_last_err=0;
    116          //	pid_left_rear.result=0;
    117          //	
    118          //	pid_right_rear.err=0;
    119          //	pid_right_rear.last_err=0;
    120          //	pid_right_rear.last_last_err=0;
    121          //	pid_right_rear.result=0;
    122          	
    123          //}
    124          

   \                                 In section .text, align 2, keep-with-next
    125          void Motor_control(void)
    126          {   
   \                     Motor_control: (+1)
   \        0x0   0xB538             PUSH     {R3-R5,LR}
    127            if(P1 >= 0) //左上正
   \        0x2   0x....             LDR.N    R4,??DataTable4_2
   \        0x4   0x6820             LDR      R0,[R4, #+0]
   \        0x6   0x2800             CMP      R0,#+0
   \        0x8   0xD411             BMI.N    ??Motor_control_0
    128            { 
    129              if(P1 >= MAX_SPEED) 
   \        0xA   0xF640 0x30B8      MOVW     R0,#+3000
   \        0xE   0x6821             LDR      R1,[R4, #+0]
   \       0x10   0x4281             CMP      R1,R0
   \       0x12   0xDB00             BLT.N    ??Motor_control_1
    130              {      
    131                P1 = MAX_SPEED;
   \       0x14   0x6020             STR      R0,[R4, #+0]
    132              }   
    133              LPLD_FTM_PWM_ChangeDuty(FTM0, FTM_Ch2, 0);
   \                     ??Motor_control_1: (+1)
   \       0x16   0x....             LDR.N    R5,??DataTable4_1  ;; 0x40038000
   \       0x18   0x2200             MOVS     R2,#+0
   \       0x1A   0x2102             MOVS     R1,#+2
   \       0x1C   0x0028             MOVS     R0,R5
   \       0x1E   0x....'....        BL       LPLD_FTM_PWM_ChangeDuty
    134              LPLD_FTM_PWM_ChangeDuty(FTM0, FTM_Ch3,P1 ); 
   \       0x22   0x6822             LDR      R2,[R4, #+0]
   \       0x24   0x2103             MOVS     R1,#+3
   \       0x26   0x0028             MOVS     R0,R5
   \       0x28   0x....'....        BL       LPLD_FTM_PWM_ChangeDuty
   \       0x2C   0xE011             B.N      ??Motor_control_2
    135            }
    136            else //左上负
    137            { 
    138              if(P1 <= MAX_SPEED_L) 
   \                     ??Motor_control_0: (+1)
   \       0x2E   0x6820             LDR      R0,[R4, #+0]
   \       0x30   0x....             LDR.N    R1,??DataTable4_3  ;; 0xfffff449
   \       0x32   0x4288             CMP      R0,R1
   \       0x34   0xDA01             BGE.N    ??Motor_control_3
    139              {      
    140                P1 = MAX_SPEED_L;
   \       0x36   0x....             LDR.N    R0,??DataTable4_4  ;; 0xfffff448
   \       0x38   0x6020             STR      R0,[R4, #+0]
    141              }   
    142              LPLD_FTM_PWM_ChangeDuty(FTM0, FTM_Ch2, -P1);
   \                     ??Motor_control_3: (+1)
   \       0x3A   0x....             LDR.N    R5,??DataTable4_1  ;; 0x40038000
   \       0x3C   0x6822             LDR      R2,[R4, #+0]
   \       0x3E   0x4252             RSBS     R2,R2,#+0
   \       0x40   0x2102             MOVS     R1,#+2
   \       0x42   0x0028             MOVS     R0,R5
   \       0x44   0x....'....        BL       LPLD_FTM_PWM_ChangeDuty
    143              LPLD_FTM_PWM_ChangeDuty(FTM0, FTM_Ch3, 0); 
   \       0x48   0x2200             MOVS     R2,#+0
   \       0x4A   0x2103             MOVS     R1,#+3
   \       0x4C   0x0028             MOVS     R0,R5
   \       0x4E   0x....'....        BL       LPLD_FTM_PWM_ChangeDuty
    144            }
    145            
    146            
    147            if(P2 >= 0) //右上正
   \                     ??Motor_control_2: (+1)
   \       0x52   0x....             LDR.N    R4,??DataTable4_5
   \       0x54   0x6820             LDR      R0,[R4, #+0]
   \       0x56   0x2800             CMP      R0,#+0
   \       0x58   0xD411             BMI.N    ??Motor_control_4
    148            { 
    149              if(P2 >= MAX_SPEED) 
   \       0x5A   0xF640 0x30B8      MOVW     R0,#+3000
   \       0x5E   0x6821             LDR      R1,[R4, #+0]
   \       0x60   0x4281             CMP      R1,R0
   \       0x62   0xDB00             BLT.N    ??Motor_control_5
    150              {
    151                P2 = MAX_SPEED;
   \       0x64   0x6020             STR      R0,[R4, #+0]
    152              }
    153              LPLD_FTM_PWM_ChangeDuty(FTM0, FTM_Ch1, 0);   
   \                     ??Motor_control_5: (+1)
   \       0x66   0x....             LDR.N    R5,??DataTable4_1  ;; 0x40038000
   \       0x68   0x2200             MOVS     R2,#+0
   \       0x6A   0x2101             MOVS     R1,#+1
   \       0x6C   0x0028             MOVS     R0,R5
   \       0x6E   0x....'....        BL       LPLD_FTM_PWM_ChangeDuty
    154              LPLD_FTM_PWM_ChangeDuty(FTM0, FTM_Ch0,  P2);
   \       0x72   0x6822             LDR      R2,[R4, #+0]
   \       0x74   0x2100             MOVS     R1,#+0
   \       0x76   0x0028             MOVS     R0,R5
   \       0x78   0x....'....        BL       LPLD_FTM_PWM_ChangeDuty
   \       0x7C   0xE011             B.N      ??Motor_control_6
    155           
    156            }
    157            else //右上fan
    158            { 
    159              if(P2 <= MAX_SPEED_L) 
   \                     ??Motor_control_4: (+1)
   \       0x7E   0x6820             LDR      R0,[R4, #+0]
   \       0x80   0x....             LDR.N    R1,??DataTable4_3  ;; 0xfffff449
   \       0x82   0x4288             CMP      R0,R1
   \       0x84   0xDA01             BGE.N    ??Motor_control_7
    160              {
    161                P2 = MAX_SPEED_L;
   \       0x86   0x....             LDR.N    R0,??DataTable4_4  ;; 0xfffff448
   \       0x88   0x6020             STR      R0,[R4, #+0]
    162              }
    163              LPLD_FTM_PWM_ChangeDuty(FTM0, FTM_Ch1, -P2 );   
   \                     ??Motor_control_7: (+1)
   \       0x8A   0x....             LDR.N    R5,??DataTable4_1  ;; 0x40038000
   \       0x8C   0x6822             LDR      R2,[R4, #+0]
   \       0x8E   0x4252             RSBS     R2,R2,#+0
   \       0x90   0x2101             MOVS     R1,#+1
   \       0x92   0x0028             MOVS     R0,R5
   \       0x94   0x....'....        BL       LPLD_FTM_PWM_ChangeDuty
    164              LPLD_FTM_PWM_ChangeDuty(FTM0, FTM_Ch0, 0);
   \       0x98   0x2200             MOVS     R2,#+0
   \       0x9A   0x2100             MOVS     R1,#+0
   \       0x9C   0x0028             MOVS     R0,R5
   \       0x9E   0x....'....        BL       LPLD_FTM_PWM_ChangeDuty
    165           
    166            }
    167          
    168            
    169            if(P4 >= 0) //右下正
   \                     ??Motor_control_6: (+1)
   \       0xA2   0x....             LDR.N    R4,??DataTable4_6
   \       0xA4   0x6820             LDR      R0,[R4, #+0]
   \       0xA6   0x2800             CMP      R0,#+0
   \       0xA8   0xD411             BMI.N    ??Motor_control_8
    170            { 
    171              if(P4 >= MAX_SPEED) 
   \       0xAA   0xF640 0x30B8      MOVW     R0,#+3000
   \       0xAE   0x6821             LDR      R1,[R4, #+0]
   \       0xB0   0x4281             CMP      R1,R0
   \       0xB2   0xDB00             BLT.N    ??Motor_control_9
    172              {
    173                P4 = MAX_SPEED;
   \       0xB4   0x6020             STR      R0,[R4, #+0]
    174              }
    175              LPLD_FTM_PWM_ChangeDuty(FTM0, FTM_Ch6, P4);  
   \                     ??Motor_control_9: (+1)
   \       0xB6   0x....             LDR.N    R5,??DataTable4_1  ;; 0x40038000
   \       0xB8   0x6822             LDR      R2,[R4, #+0]
   \       0xBA   0x2106             MOVS     R1,#+6
   \       0xBC   0x0028             MOVS     R0,R5
   \       0xBE   0x....'....        BL       LPLD_FTM_PWM_ChangeDuty
    176              LPLD_FTM_PWM_ChangeDuty(FTM0, FTM_Ch7, 0);
   \       0xC2   0x2200             MOVS     R2,#+0
   \       0xC4   0x2107             MOVS     R1,#+7
   \       0xC6   0x0028             MOVS     R0,R5
   \       0xC8   0x....'....        BL       LPLD_FTM_PWM_ChangeDuty
   \       0xCC   0xE011             B.N      ??Motor_control_10
    177           
    178            }
    179            else
    180            { 
    181              if(P4 <= MAX_SPEED_L) 
   \                     ??Motor_control_8: (+1)
   \       0xCE   0x6820             LDR      R0,[R4, #+0]
   \       0xD0   0x....             LDR.N    R1,??DataTable4_3  ;; 0xfffff449
   \       0xD2   0x4288             CMP      R0,R1
   \       0xD4   0xDA01             BGE.N    ??Motor_control_11
    182              {
    183                P4 = MAX_SPEED_L;
   \       0xD6   0x....             LDR.N    R0,??DataTable4_4  ;; 0xfffff448
   \       0xD8   0x6020             STR      R0,[R4, #+0]
    184              }
    185              LPLD_FTM_PWM_ChangeDuty(FTM0, FTM_Ch6,  0);  
   \                     ??Motor_control_11: (+1)
   \       0xDA   0x....             LDR.N    R5,??DataTable4_1  ;; 0x40038000
   \       0xDC   0x2200             MOVS     R2,#+0
   \       0xDE   0x2106             MOVS     R1,#+6
   \       0xE0   0x0028             MOVS     R0,R5
   \       0xE2   0x....'....        BL       LPLD_FTM_PWM_ChangeDuty
    186              LPLD_FTM_PWM_ChangeDuty(FTM0, FTM_Ch7, -P4 );
   \       0xE6   0x6822             LDR      R2,[R4, #+0]
   \       0xE8   0x4252             RSBS     R2,R2,#+0
   \       0xEA   0x2107             MOVS     R1,#+7
   \       0xEC   0x0028             MOVS     R0,R5
   \       0xEE   0x....'....        BL       LPLD_FTM_PWM_ChangeDuty
    187           
    188            }
    189          
    190            
    191              if(P3 >= 0) //左下正
   \                     ??Motor_control_10: (+1)
   \       0xF2   0x....             LDR.N    R4,??DataTable4_7
   \       0xF4   0x6820             LDR      R0,[R4, #+0]
   \       0xF6   0x2800             CMP      R0,#+0
   \       0xF8   0xD411             BMI.N    ??Motor_control_12
    192            { 
    193              if(P3 >= MAX_SPEED) 
   \       0xFA   0xF640 0x30B8      MOVW     R0,#+3000
   \       0xFE   0x6821             LDR      R1,[R4, #+0]
   \      0x100   0x4281             CMP      R1,R0
   \      0x102   0xDB00             BLT.N    ??Motor_control_13
    194              {
    195               P3 = MAX_SPEED;
   \      0x104   0x6020             STR      R0,[R4, #+0]
    196              }
    197              LPLD_FTM_PWM_ChangeDuty(FTM0, FTM_Ch5,P3 );
   \                     ??Motor_control_13: (+1)
   \      0x106   0x....             LDR.N    R5,??DataTable4_1  ;; 0x40038000
   \      0x108   0x6822             LDR      R2,[R4, #+0]
   \      0x10A   0x2105             MOVS     R1,#+5
   \      0x10C   0x0028             MOVS     R0,R5
   \      0x10E   0x....'....        BL       LPLD_FTM_PWM_ChangeDuty
    198              LPLD_FTM_PWM_ChangeDuty(FTM0, FTM_Ch4, 0);
   \      0x112   0x2200             MOVS     R2,#+0
   \      0x114   0x2104             MOVS     R1,#+4
   \      0x116   0x0028             MOVS     R0,R5
   \      0x118   0x....'....        BL       LPLD_FTM_PWM_ChangeDuty
   \      0x11C   0xE011             B.N      ??Motor_control_14
    199           
    200            }
    201            else
    202            { 
    203              if(P3 <= MAX_SPEED_L) 
   \                     ??Motor_control_12: (+1)
   \      0x11E   0x6820             LDR      R0,[R4, #+0]
   \      0x120   0x....             LDR.N    R1,??DataTable4_3  ;; 0xfffff449
   \      0x122   0x4288             CMP      R0,R1
   \      0x124   0xDA01             BGE.N    ??Motor_control_15
    204              {
    205                P3 = MAX_SPEED_L;
   \      0x126   0x....             LDR.N    R0,??DataTable4_4  ;; 0xfffff448
   \      0x128   0x6020             STR      R0,[R4, #+0]
    206              }
    207              LPLD_FTM_PWM_ChangeDuty(FTM0, FTM_Ch5,0);
   \                     ??Motor_control_15: (+1)
   \      0x12A   0x....             LDR.N    R5,??DataTable4_1  ;; 0x40038000
   \      0x12C   0x2200             MOVS     R2,#+0
   \      0x12E   0x2105             MOVS     R1,#+5
   \      0x130   0x0028             MOVS     R0,R5
   \      0x132   0x....'....        BL       LPLD_FTM_PWM_ChangeDuty
    208              LPLD_FTM_PWM_ChangeDuty(FTM0, FTM_Ch4,  -P3);
   \      0x136   0x6822             LDR      R2,[R4, #+0]
   \      0x138   0x4252             RSBS     R2,R2,#+0
   \      0x13A   0x2104             MOVS     R1,#+4
   \      0x13C   0x0028             MOVS     R0,R5
   \      0x13E   0x....'....        BL       LPLD_FTM_PWM_ChangeDuty
    209           
    210            }
    211          }
   \                     ??Motor_control_14: (+1)
   \      0x142   0xBD31             POP      {R0,R4,R5,PC}    ;; return
    212          

   \                                 In section .bss, align 4
    213          float pid_err = 0;
   \                     pid_err:
   \        0x0                      DS8 4

   \                                 In section .bss, align 4
    214          float pid_last_err = 0;
   \                     pid_last_err:
   \        0x0                      DS8 4

   \                                 In section .bss, align 4
    215          float pid_result = 0;
   \                     pid_result:
   \        0x0                      DS8 4

   \                                 In section .bss, align 4
    216          float pid_last_last_err = 0;
   \                     pid_last_last_err:
   \        0x0                      DS8 4

   \                                 In section .bss, align 4
    217          float pid_out;
   \                     pid_out:
   \        0x0                      DS8 4
    218          

   \                                 In section .text, align 2, keep-with-next
    219          float PID_Control(s16 actual, float set)
    220          {
   \                     PID_Control: (+1)
   \        0x0   0xE92D 0x41F0      PUSH     {R4-R8,LR}
   \        0x4   0x000D             MOVS     R5,R1
    221          	float sp = 0, si = 0;// d = 0;
   \        0x6   0x2100             MOVS     R1,#+0
   \        0x8   0x2100             MOVS     R1,#+0
    222          	pid_err = (float)(set - actual); //-25
   \        0xA   0x....             LDR.N    R4,??DataTable4_8
   \        0xC   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \        0xE   0x....'....        BL       __aeabi_i2f
   \       0x12   0x0001             MOVS     R1,R0
   \       0x14   0x0028             MOVS     R0,R5
   \       0x16   0x....'....        BL       __aeabi_fsub
   \       0x1A   0x6020             STR      R0,[R4, #+0]
    223          	sp = pid_err - pid_last_err;//-25
   \       0x1C   0x....             LDR.N    R5,??DataTable4_9
   \       0x1E   0x6820             LDR      R0,[R4, #+0]
   \       0x20   0x6829             LDR      R1,[R5, #+0]
   \       0x22   0x....'....        BL       __aeabi_fsub
   \       0x26   0x0001             MOVS     R1,R0
    224          	si = pid_err;//-25
   \       0x28   0x6827             LDR      R7,[R4, #+0]
    225          	//d = pid_err - 2 * pid_last_err + pid_last_last_err;//-25
    226          	pid_result = pid_result+ P * sp +I * si ;//+ pid->kd * d;
   \       0x2A   0x....             LDR.N    R6,??DataTable4_10
   \       0x2C   0x....             LDR.N    R0,??DataTable4_11
   \       0x2E   0x6800             LDR      R0,[R0, #+0]
   \       0x30   0x....'....        BL       __aeabi_fmul
   \       0x34   0x6831             LDR      R1,[R6, #+0]
   \       0x36   0x....'....        BL       __aeabi_fadd
   \       0x3A   0x4680             MOV      R8,R0
   \       0x3C   0x....             LDR.N    R0,??DataTable4_12
   \       0x3E   0x6800             LDR      R0,[R0, #+0]
   \       0x40   0x0039             MOVS     R1,R7
   \       0x42   0x....'....        BL       __aeabi_fmul
   \       0x46   0x4641             MOV      R1,R8
   \       0x48   0x....'....        BL       __aeabi_fadd
   \       0x4C   0x6030             STR      R0,[R6, #+0]
    227          	pid_out = pid_result;
   \       0x4E   0x....             LDR.N    R2,??DataTable4_13
   \       0x50   0x6830             LDR      R0,[R6, #+0]
   \       0x52   0x6010             STR      R0,[R2, #+0]
    228                  if(pid_out>3000)
   \       0x54   0x6810             LDR      R0,[R2, #+0]
   \       0x56   0x....             LDR.N    R1,??DataTable4_14  ;; 0x453b8001
   \       0x58   0x....'....        BL       __aeabi_cfrcmple
   \       0x5C   0xD802             BHI.N    ??PID_Control_0
    229          		pid_out= 3000;
   \       0x5E   0x....             LDR.N    R0,??DataTable4_15  ;; 0x453b8000
   \       0x60   0x6010             STR      R0,[R2, #+0]
   \       0x62   0xE005             B.N      ??PID_Control_1
    230          	else if(pid_out<-3000)
   \                     ??PID_Control_0: (+1)
   \       0x64   0x....             LDR.N    R1,??DataTable4_16  ;; 0xc53b8000
   \       0x66   0x6810             LDR      R0,[R2, #+0]
   \       0x68   0x....'....        BL       __aeabi_cfcmple
   \       0x6C   0xD200             BCS.N    ??PID_Control_1
    231          		pid_out = -3000;
   \       0x6E   0x6011             STR      R1,[R2, #+0]
    232          	pid_last_last_err = pid_last_err;
   \                     ??PID_Control_1: (+1)
   \       0x70   0x6828             LDR      R0,[R5, #+0]
   \       0x72   0x....             LDR.N    R1,??DataTable4_17
   \       0x74   0x6008             STR      R0,[R1, #+0]
    233          	pid_last_err = pid_err;
   \       0x76   0x6820             LDR      R0,[R4, #+0]
   \       0x78   0x6028             STR      R0,[R5, #+0]
    234                  return(pid_out);
   \       0x7A   0x6810             LDR      R0,[R2, #+0]
   \       0x7C   0xE8BD 0x81F0      POP      {R4-R8,PC}       ;; return
    235          }
    236          
    237          //方向环
    238          //P=24   D=35

   \                                 In section .text, align 2, keep-with-next
    239          s16 Dir_Pid(s16 midpoint,s16 error_act)
    240          {
   \                     Dir_Pid: (+1)
   \        0x0   0xB430             PUSH     {R4,R5}
    241          	s16 midpoint_err =0;  //距离中线的误差
   \        0x2   0x2200             MOVS     R2,#+0
    242          	s16 lastpoint_err =0; //上次误差
   \        0x4   0x2200             MOVS     R2,#+0
    243          	midpoint_err = midpoint - error_act;
   \        0x6   0x1A40             SUBS     R0,R0,R1
    244          	Move_Z = KP*midpoint_err + KD*(midpoint_err - lastpoint_err);
   \        0x8   0x....             LDR.N    R1,??DataTable4_18
   \        0xA   0x....             LDR.N    R3,??DataTable4_19
   \        0xC   0xF9B3 0x3000      LDRSH    R3,[R3, #+0]
   \       0x10   0xFB13 0xF300      SMULBB   R3,R3,R0
   \       0x14   0x....             LDR.N    R4,??DataTable4_20
   \       0x16   0xF9B4 0x4000      LDRSH    R4,[R4, #+0]
   \       0x1A   0x0005             MOVS     R5,R0
   \       0x1C   0xB22D             SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
   \       0x1E   0xB212             SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
   \       0x20   0x1AAA             SUBS     R2,R5,R2
   \       0x22   0xFB02 0x3204      MLA      R2,R2,R4,R3
   \       0x26   0x800A             STRH     R2,[R1, #+0]
    245          	lastpoint_err = midpoint_err ;
    246          	if(Move_Z >= 1500)
   \       0x28   0xF240 0x50DC      MOVW     R0,#+1500
   \       0x2C   0xF9B1 0x2000      LDRSH    R2,[R1, #+0]
   \       0x30   0x4282             CMP      R2,R0
   \       0x32   0xDB01             BLT.N    ??Dir_Pid_0
    247          		Move_Z = 1500;
   \       0x34   0x8008             STRH     R0,[R1, #+0]
   \       0x36   0xE006             B.N      ??Dir_Pid_1
    248          	else if(Move_Z <= -1500)
   \                     ??Dir_Pid_0: (+1)
   \       0x38   0xF9B1 0x0000      LDRSH    R0,[R1, #+0]
   \       0x3C   0x....             LDR.N    R2,??DataTable4_21  ;; 0xfffffa25
   \       0x3E   0x4290             CMP      R0,R2
   \       0x40   0xDA01             BGE.N    ??Dir_Pid_1
    249          		Move_Z = -1500;
   \       0x42   0x....             LDR.N    R0,??DataTable4_22  ;; 0xfffffa24
   \       0x44   0x8008             STRH     R0,[R1, #+0]
    250          	return Move_Z;
   \                     ??Dir_Pid_1: (+1)
   \       0x46   0xF9B1 0x0000      LDRSH    R0,[R1, #+0]
   \       0x4A   0xBC30             POP      {R4,R5}
   \       0x4C   0x4770             BX       LR               ;; return
    251          
    252          }
    253          

   \                                 In section .text, align 2, keep-with-next
    254          s16 lun_Pid(s16 midpoint_lun,s16 error_lun)
    255          {
   \                     lun_Pid: (+1)
   \        0x0   0xB430             PUSH     {R4,R5}
    256          	s16 midpoint_err1 =0;  //距离中线的误差
   \        0x2   0x2200             MOVS     R2,#+0
    257          	s16 lastpoint_err1 =0; //上次误差
   \        0x4   0x2200             MOVS     R2,#+0
    258          	midpoint_err1 = midpoint_lun - error_lun;
   \        0x6   0x1A40             SUBS     R0,R0,R1
    259          	Move_y = KP*midpoint_err1 + KD*(midpoint_err1 - lastpoint_err1);
   \        0x8   0x....             LDR.N    R1,??DataTable4_23
   \        0xA   0x....             LDR.N    R3,??DataTable4_19
   \        0xC   0xF9B3 0x3000      LDRSH    R3,[R3, #+0]
   \       0x10   0xFB13 0xF300      SMULBB   R3,R3,R0
   \       0x14   0x....             LDR.N    R4,??DataTable4_20
   \       0x16   0xF9B4 0x4000      LDRSH    R4,[R4, #+0]
   \       0x1A   0x0005             MOVS     R5,R0
   \       0x1C   0xB22D             SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
   \       0x1E   0xB212             SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
   \       0x20   0x1AAA             SUBS     R2,R5,R2
   \       0x22   0xFB02 0x3204      MLA      R2,R2,R4,R3
   \       0x26   0x800A             STRH     R2,[R1, #+0]
    260          	lastpoint_err1 = midpoint_err1 ;
    261          	if(Move_y >= 1500)
   \       0x28   0xF240 0x50DC      MOVW     R0,#+1500
   \       0x2C   0xF9B1 0x2000      LDRSH    R2,[R1, #+0]
   \       0x30   0x4282             CMP      R2,R0
   \       0x32   0xDB01             BLT.N    ??lun_Pid_0
    262          		Move_y = 1500;
   \       0x34   0x8008             STRH     R0,[R1, #+0]
   \       0x36   0xE006             B.N      ??lun_Pid_1
    263          	else if(Move_y <= -1500)
   \                     ??lun_Pid_0: (+1)
   \       0x38   0xF9B1 0x0000      LDRSH    R0,[R1, #+0]
   \       0x3C   0x....             LDR.N    R2,??DataTable4_21  ;; 0xfffffa25
   \       0x3E   0x4290             CMP      R0,R2
   \       0x40   0xDA01             BGE.N    ??lun_Pid_1
    264          		Move_y = -1500;
   \       0x42   0x....             LDR.N    R0,??DataTable4_22  ;; 0xfffffa24
   \       0x44   0x8008             STRH     R0,[R1, #+0]
    265          	return Move_y;
   \                     ??lun_Pid_1: (+1)
   \       0x46   0xF9B1 0x0000      LDRSH    R0,[R1, #+0]
   \       0x4A   0xBC30             POP      {R4,R5}
   \       0x4C   0x4770             BX       LR               ;; return
    266          
    267          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4:
   \        0x0   0x....'....        DC32     ftm_init_struct3

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_1:
   \        0x0   0x4003'8000        DC32     0x40038000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_2:
   \        0x0   0x....'....        DC32     `P1`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_3:
   \        0x0   0xFFFF'F449        DC32     0xfffff449

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_4:
   \        0x0   0xFFFF'F448        DC32     0xfffff448

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_5:
   \        0x0   0x....'....        DC32     `P2`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_6:
   \        0x0   0x....'....        DC32     `P4`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_7:
   \        0x0   0x....'....        DC32     `P3`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_8:
   \        0x0   0x....'....        DC32     pid_err

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_9:
   \        0x0   0x....'....        DC32     pid_last_err

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_10:
   \        0x0   0x....'....        DC32     pid_result

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_11:
   \        0x0   0x....'....        DC32     P

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_12:
   \        0x0   0x....'....        DC32     I

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_13:
   \        0x0   0x....'....        DC32     pid_out

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_14:
   \        0x0   0x453B'8001        DC32     0x453b8001

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_15:
   \        0x0   0x453B'8000        DC32     0x453b8000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_16:
   \        0x0   0xC53B'8000        DC32     0xc53b8000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_17:
   \        0x0   0x....'....        DC32     pid_last_last_err

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_18:
   \        0x0   0x....'....        DC32     Move_Z

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_19:
   \        0x0   0x....'....        DC32     KP

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_20:
   \        0x0   0x....'....        DC32     KD

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_21:
   \        0x0   0xFFFF'FA25        DC32     0xfffffa25

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_22:
   \        0x0   0xFFFF'FA24        DC32     0xfffffa24

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_23:
   \        0x0   0x....'....        DC32     Move_y

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   Dir_Pid
      16   Motor_control
        16   -> LPLD_FTM_PWM_ChangeDuty
      24   PID_Control
        24   -> __aeabi_fadd
        24   -> __aeabi_fmul
        24   -> __aeabi_fsub
        24   -> __aeabi_i2f
        24 __aeabi_cfcmple
        24 __aeabi_cfrcmple
      40   init_Motor
        24   -> LPLD_FTM_Init
        24   -> LPLD_FTM_PWM_Enable
        40   -> __aeabi_memcpy4
       8   lun_Pid


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable4
       4  ??DataTable4_1
       4  ??DataTable4_10
       4  ??DataTable4_11
       4  ??DataTable4_12
       4  ??DataTable4_13
       4  ??DataTable4_14
       4  ??DataTable4_15
       4  ??DataTable4_16
       4  ??DataTable4_17
       4  ??DataTable4_18
       4  ??DataTable4_19
       4  ??DataTable4_2
       4  ??DataTable4_20
       4  ??DataTable4_21
       4  ??DataTable4_22
       4  ??DataTable4_23
       4  ??DataTable4_3
       4  ??DataTable4_4
       4  ??DataTable4_5
       4  ??DataTable4_6
       4  ??DataTable4_7
       4  ??DataTable4_8
       4  ??DataTable4_9
       4  D
      78  Dir_Pid
       2  EDS_MAX
       4  I
     324  Motor_control
       2  Move_y
       4  P
     144  PID
     128  PID_Control
       4  SpeedHigh
       4  SpeedLow
      28  ftm_init_struct3
     164  init_Motor
      78  lun_Pid
       4  pid_err
       4  pid_last_err
       4  pid_last_last_err
       4  pid_out
       4  pid_result

 
 202 bytes in section .bss
  14 bytes in section .data
 868 bytes in section .text
 
 868 bytes of CODE memory
 216 bytes of DATA memory

Errors: none
Warnings: 1
