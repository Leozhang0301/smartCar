###############################################################################
#
# IAR ANSI C/C++ Compiler V8.32.1.169/W32 for ARM         21/May/2019  22:07:19
# Copyright 1999-2018 IAR Systems AB.
#
#    Cpu mode     =  
#    Endian       =  little
#    Source file  =  C:\Users\que\Desktop\AAA_xinbiao\xiugai\lib\Jay\OLED.c
#    Command line =  
#        -f C:\Users\TEMPLA~1.000\AppData\Local\Temp\EW430B.tmp
#        (C:\Users\que\Desktop\AAA_xinbiao\xiugai\lib\Jay\OLED.c -D LPLD_K60
#        -lCN
#        "C:\Users\que\Desktop\AAA_xinbiao\xiugai\project\28-(SDHC)LPLD_SdCard\iar\RAM\List"
#        -lB
#        "C:\Users\que\Desktop\AAA_xinbiao\xiugai\project\28-(SDHC)LPLD_SdCard\iar\RAM\List"
#        -o
#        "C:\Users\que\Desktop\AAA_xinbiao\xiugai\project\28-(SDHC)LPLD_SdCard\iar\RAM\Obj"
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M4 -e --fpu=None --dlib_config "D:\@@\605110 IAR for
#        ARM 8.30\arm\inc\c\DLib_Config_Normal.h" -I
#        "C:\Users\que\Desktop\AAA_xinbiao\xiugai\project\28-(SDHC)LPLD_SdCard\iar\..\app\"
#        -I
#        "C:\Users\que\Desktop\AAA_xinbiao\xiugai\project\28-(SDHC)LPLD_SdCard\iar\..\..\..\lib\CPU\"
#        -I
#        "C:\Users\que\Desktop\AAA_xinbiao\xiugai\project\28-(SDHC)LPLD_SdCard\iar\..\..\..\lib\common\"
#        -I
#        "C:\Users\que\Desktop\AAA_xinbiao\xiugai\project\28-(SDHC)LPLD_SdCard\iar\..\..\..\lib\LPLD\"
#        -I
#        "C:\Users\que\Desktop\AAA_xinbiao\xiugai\project\28-(SDHC)LPLD_SdCard\iar\..\..\..\lib\LPLD\HW\"
#        -I
#        "C:\Users\que\Desktop\AAA_xinbiao\xiugai\project\28-(SDHC)LPLD_SdCard\iar\..\..\..\lib\LPLD\DEV\"
#        -I
#        "C:\Users\que\Desktop\AAA_xinbiao\xiugai\project\28-(SDHC)LPLD_SdCard\iar\..\..\..\lib\uCOS-II\Ports\"
#        -I
#        "C:\Users\que\Desktop\AAA_xinbiao\xiugai\project\28-(SDHC)LPLD_SdCard\iar\..\..\..\lib\uCOS-II\Source\"
#        -I
#        "C:\Users\que\Desktop\AAA_xinbiao\xiugai\project\28-(SDHC)LPLD_SdCard\iar\..\..\..\lib\FatFs\"
#        -I
#        "C:\Users\que\Desktop\AAA_xinbiao\xiugai\project\28-(SDHC)LPLD_SdCard\iar\..\..\..\lib\FatFs\option\"
#        -I
#        "C:\Users\que\Desktop\AAA_xinbiao\xiugai\project\28-(SDHC)LPLD_SdCard\iar\..\..\..\lib\USB\common\"
#        -I
#        "C:\Users\que\Desktop\AAA_xinbiao\xiugai\project\28-(SDHC)LPLD_SdCard\iar\..\..\..\lib\USB\driver\"
#        -I
#        "C:\Users\que\Desktop\AAA_xinbiao\xiugai\project\28-(SDHC)LPLD_SdCard\iar\..\..\..\lib\USB\descriptor\"
#        -I
#        "C:\Users\que\Desktop\AAA_xinbiao\xiugai\project\28-(SDHC)LPLD_SdCard\iar\..\..\..\lib\USB\class\"
#        -I
#        "C:\Users\que\Desktop\AAA_xinbiao\xiugai\project\28-(SDHC)LPLD_SdCard\iar\..\..\..\lib\Me\"
#        -I
#        "C:\Users\que\Desktop\AAA_xinbiao\xiugai\project\28-(SDHC)LPLD_SdCard\iar\..\app\"
#        -I
#        "C:\Users\que\Desktop\AAA_xinbiao\xiugai\project\28-(SDHC)LPLD_SdCard\iar\..\app\"
#        -I
#        "C:\Users\que\Desktop\AAA_xinbiao\xiugai\project\28-(SDHC)LPLD_SdCard\iar\..\..\..\lib\"
#        -I
#        "C:\Users\que\Desktop\AAA_xinbiao\xiugai\project\28-(SDHC)LPLD_SdCard\iar\..\..\..\lib\common\"
#        -I
#        "C:\Users\que\Desktop\AAA_xinbiao\xiugai\project\28-(SDHC)LPLD_SdCard\iar\..\..\..\lib\CPU\"
#        -I
#        "C:\Users\que\Desktop\AAA_xinbiao\xiugai\project\28-(SDHC)LPLD_SdCard\iar\..\..\..\lib\Jay\"
#        -Ol -I "D:\@@\605110 IAR for ARM 8.30\arm\CMSIS\Core\Include\" -I
#        "D:\@@\605110 IAR for ARM 8.30\arm\CMSIS\DSP\Include\" -D
#        ARM_MATH_CM4)
#    Locale       =  C
#    List file    =  
#        C:\Users\que\Desktop\AAA_xinbiao\xiugai\project\28-(SDHC)LPLD_SdCard\iar\RAM\List\OLED.lst
#    Object file  =  
#        C:\Users\que\Desktop\AAA_xinbiao\xiugai\project\28-(SDHC)LPLD_SdCard\iar\RAM\Obj\OLED.o
#
###############################################################################

C:\Users\que\Desktop\AAA_xinbiao\xiugai\lib\Jay\OLED.c
      1          /*
      2           *  
      3           *  
      4           *  @JayLin林杰 @厦门大学嘉庚学院 @博学队
      5           */
      6          #include  "common.h"
      7          #include "include.h"
      8          
      9          #define HIGH  1u
     10          #define LOW   0u
     11          
     12          #define LED_IMAGE_WHITE       1
     13          #define LED_IMAGE_BLACK       0
     14          

   \                                 In section .bss, align 4
     15          GPIO_InitTypeDef gpio_init_struct_OLED;
   \                     gpio_init_struct_OLED:
   \        0x0                      DS8 20

   \                                 In section .text, align 2, keep-with-next
     16          void init_gpio_OLED()
     17          {
   \                     init_gpio_OLED: (+1)
   \        0x0   0xB538             PUSH     {R3-R5,LR}
     18           /*
     19            *配置 PTC16~PTC19 为GPIO功能,输出,高电平，禁用中断
     20            */
     21            gpio_init_struct_OLED.GPIO_PTx = PTC;
   \        0x2   0x....'....        LDR.W    R4,??DataTable12
   \        0x6   0x....'....        LDR.W    R5,??DataTable12_1  ;; 0x400ff080
   \        0xA   0x6025             STR      R5,[R4, #+0]
     22            gpio_init_struct_OLED.GPIO_Pins = GPIO_Pin7|GPIO_Pin8;
   \        0xC   0xF44F 0x70C0      MOV      R0,#+384
   \       0x10   0x6060             STR      R0,[R4, #+4]
     23            gpio_init_struct_OLED.GPIO_Dir = DIR_OUTPUT;
   \       0x12   0x2001             MOVS     R0,#+1
   \       0x14   0x7320             STRB     R0,[R4, #+12]
     24            gpio_init_struct_OLED.GPIO_Output = OUTPUT_H;
   \       0x16   0x2001             MOVS     R0,#+1
   \       0x18   0x7360             STRB     R0,[R4, #+13]
     25            gpio_init_struct_OLED.GPIO_PinControl = IRQC_DIS;
   \       0x1A   0x2000             MOVS     R0,#+0
   \       0x1C   0x60A0             STR      R0,[R4, #+8]
     26            LPLD_GPIO_Init(gpio_init_struct_OLED);
   \       0x1E   0x0021             MOVS     R1,R4
   \       0x20   0xB084             SUB      SP,SP,#+16
   \       0x22   0x4668             MOV      R0,SP
   \       0x24   0x2214             MOVS     R2,#+20
   \       0x26   0x....'....        BL       __aeabi_memcpy4
   \       0x2A   0xBC0F             POP      {R0-R3}
   \       0x2C   0x....'....        BL       LPLD_GPIO_Init
     27            
     28            gpio_init_struct_OLED.GPIO_PTx = PTC;
   \       0x30   0x6025             STR      R5,[R4, #+0]
     29            gpio_init_struct_OLED.GPIO_Pins = GPIO_Pin9|GPIO_Pin10;
   \       0x32   0xF44F 0x60C0      MOV      R0,#+1536
   \       0x36   0x6060             STR      R0,[R4, #+4]
     30            LPLD_GPIO_Init(gpio_init_struct_OLED);
   \       0x38   0x0021             MOVS     R1,R4
   \       0x3A   0xB084             SUB      SP,SP,#+16
   \       0x3C   0x4668             MOV      R0,SP
   \       0x3E   0x2214             MOVS     R2,#+20
   \       0x40   0x....'....        BL       __aeabi_memcpy4
   \       0x44   0xBC0F             POP      {R0-R3}
   \       0x46   0x....'....        BL       LPLD_GPIO_Init
     31          }
   \       0x4A   0xBD31             POP      {R0,R4,R5,PC}    ;; return
     32          
     33          //void init_gpio_OLED()
     34          //{
     35          // /*
     36          //  *配置 PTC16~PTC19 为GPIO功能,输出,高电平，禁用中断
     37          //  */
     38          //  gpio_init_struct_OLED.GPIO_PTx = PTC;
     39          //  gpio_init_struct_OLED.GPIO_Pins = GPIO_Pin10|GPIO_Pin9;
     40          //  gpio_init_struct_OLED.GPIO_Dir = DIR_OUTPUT;
     41          //  gpio_init_struct_OLED.GPIO_Output = OUTPUT_H;
     42          //  gpio_init_struct_OLED.GPIO_PinControl = IRQC_DIS;
     43          //  LPLD_GPIO_Init(gpio_init_struct_OLED);
     44          //  
     45          //  gpio_init_struct_OLED.GPIO_PTx = PTC;
     46          //  gpio_init_struct_OLED.GPIO_Pins = GPIO_Pin8|GPIO_Pin7;
     47          //  LPLD_GPIO_Init(gpio_init_struct_OLED);
     48          //}
     49          
     50          //======================================

   \                                 In section .rodata, align 4
     51          const uint8 F6x8[][6] =
   \                     F6x8:
   \        0x0   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 47, 0, 0, 0, 0, 7, 0, 7, 0, 0, 20, 127
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x2F    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x07 0x00    
   \              0x07 0x00    
   \              0x00 0x14    
   \              0x7F         
   \       0x15   0x14 0x7F          DC8 20, 127, 20, 0, 36, 42, 127, 42, 18, 0, 98, 100, 8, 19, 35, 0, 54
   \              0x14 0x00    
   \              0x24 0x2A    
   \              0x7F 0x2A    
   \              0x12 0x00    
   \              0x62 0x64    
   \              0x08 0x13    
   \              0x23 0x00    
   \              0x36         
   \       0x26   0x49 0x55          DC8 73, 85, 34, 80, 0, 0, 5, 3, 0, 0, 0, 0, 28, 34, 65, 0, 0, 0, 65, 34
   \              0x22 0x50    
   \              0x00 0x00    
   \              0x05 0x03    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x1C 0x22    
   \              0x41 0x00    
   \              0x00 0x00    
   \              0x41 0x22    
   \       0x3A   0x1C 0x00          DC8 28, 0, 0, 20, 8, 62, 8, 20, 0, 8, 8, 62, 8, 8, 0, 0, 0, 160, 96, 0
   \              0x00 0x14    
   \              0x08 0x3E    
   \              0x08 0x14    
   \              0x00 0x08    
   \              0x08 0x3E    
   \              0x08 0x08    
   \              0x00 0x00    
   \              0x00 0xA0    
   \              0x60 0x00    
   \       0x4E   0x00 0x08          DC8 0, 8, 8, 8, 8, 8, 0, 0, 96, 96, 0, 0, 0, 32, 16, 8, 4, 2, 0, 62, 81
   \              0x08 0x08    
   \              0x08 0x08    
   \              0x00 0x00    
   \              0x60 0x60    
   \              0x00 0x00    
   \              0x00 0x20    
   \              0x10 0x08    
   \              0x04 0x02    
   \              0x00 0x3E    
   \              0x51         
   \       0x63   0x49 0x45          DC8 73, 69, 62, 0, 0, 66, 127, 64, 0, 0, 66, 97, 81, 73, 70, 0, 33, 65
   \              0x3E 0x00    
   \              0x00 0x42    
   \              0x7F 0x40    
   \              0x00 0x00    
   \              0x42 0x61    
   \              0x51 0x49    
   \              0x46 0x00    
   \              0x21 0x41    
   \       0x75   0x45 0x4B          DC8 69, 75, 49, 0, 24, 20, 18, 127, 16, 0, 39, 69, 69, 69, 57, 0, 60
   \              0x31 0x00    
   \              0x18 0x14    
   \              0x12 0x7F    
   \              0x10 0x00    
   \              0x27 0x45    
   \              0x45 0x45    
   \              0x39 0x00    
   \              0x3C         
   \       0x86   0x4A 0x49          DC8 74, 73, 73, 48, 0, 1, 113, 9, 5, 3, 0, 54, 73, 73, 73, 54, 0, 6, 73
   \              0x49 0x30    
   \              0x00 0x01    
   \              0x71 0x09    
   \              0x05 0x03    
   \              0x00 0x36    
   \              0x49 0x49    
   \              0x49 0x36    
   \              0x00 0x06    
   \              0x49         
   \       0x99   0x49 0x29          DC8 73, 41, 30, 0, 0, 54, 54, 0, 0, 0, 0, 86, 54, 0, 0, 0, 8, 20, 34
   \              0x1E 0x00    
   \              0x00 0x36    
   \              0x36 0x00    
   \              0x00 0x00    
   \              0x00 0x56    
   \              0x36 0x00    
   \              0x00 0x00    
   \              0x08 0x14    
   \              0x22         
   \       0xAC   0x41 0x00          DC8 65, 0, 0, 20, 20, 20, 20, 20, 0, 0, 65, 34, 20, 8, 0, 2, 1, 81, 9
   \              0x00 0x14    
   \              0x14 0x14    
   \              0x14 0x14    
   \              0x00 0x00    
   \              0x41 0x22    
   \              0x14 0x08    
   \              0x00 0x02    
   \              0x01 0x51    
   \              0x09         
   \       0xBF   0x06 0x00          DC8 6, 0, 50, 73, 89, 81, 62, 0, 124, 18, 17, 18, 124, 0, 127, 73, 73
   \              0x32 0x49    
   \              0x59 0x51    
   \              0x3E 0x00    
   \              0x7C 0x12    
   \              0x11 0x12    
   \              0x7C 0x00    
   \              0x7F 0x49    
   \              0x49         
   \       0xD0   0x49 0x36          DC8 73, 54, 0, 62, 65, 65, 65, 34, 0, 127, 65, 65, 34, 28, 0, 127, 73
   \              0x00 0x3E    
   \              0x41 0x41    
   \              0x41 0x22    
   \              0x00 0x7F    
   \              0x41 0x41    
   \              0x22 0x1C    
   \              0x00 0x7F    
   \              0x49         
   \       0xE1   0x49 0x49          DC8 73, 73, 65, 0, 127, 9, 9, 9, 1, 0, 62, 65, 73, 73, 122, 0, 127, 8
   \              0x41 0x00    
   \              0x7F 0x09    
   \              0x09 0x09    
   \              0x01 0x00    
   \              0x3E 0x41    
   \              0x49 0x49    
   \              0x7A 0x00    
   \              0x7F 0x08    
   \       0xF3   0x08 0x08          DC8 8, 8, 127, 0, 0, 65, 127, 65, 0, 0, 32, 64, 65, 63, 1, 0, 127, 8
   \              0x7F 0x00    
   \              0x00 0x41    
   \              0x7F 0x41    
   \              0x00 0x00    
   \              0x20 0x40    
   \              0x41 0x3F    
   \              0x01 0x00    
   \              0x7F 0x08    
   \      0x105   0x14 0x22          DC8 20, 34, 65, 0, 127, 64, 64, 64, 64, 0, 127, 2, 12, 2, 127, 0, 127
   \              0x41 0x00    
   \              0x7F 0x40    
   \              0x40 0x40    
   \              0x40 0x00    
   \              0x7F 0x02    
   \              0x0C 0x02    
   \              0x7F 0x00    
   \              0x7F         
   \      0x116   0x04 0x08          DC8 4, 8, 16, 127, 0, 62, 65, 65, 65, 62, 0, 127, 9, 9, 9, 6, 0, 62, 65
   \              0x10 0x7F    
   \              0x00 0x3E    
   \              0x41 0x41    
   \              0x41 0x3E    
   \              0x00 0x7F    
   \              0x09 0x09    
   \              0x09 0x06    
   \              0x00 0x3E    
   \              0x41         
   \      0x129   0x51 0x21          DC8 81, 33, 94, 0, 127, 9, 25, 41, 70, 0, 70, 73, 73, 73, 49, 0, 1, 1
   \              0x5E 0x00    
   \              0x7F 0x09    
   \              0x19 0x29    
   \              0x46 0x00    
   \              0x46 0x49    
   \              0x49 0x49    
   \              0x31 0x00    
   \              0x01 0x01    
   \      0x13B   0x7F 0x01          DC8 127, 1, 1, 0, 63, 64, 64, 64, 63, 0, 31, 32, 64, 32, 31, 0, 63, 64
   \              0x01 0x00    
   \              0x3F 0x40    
   \              0x40 0x40    
   \              0x3F 0x00    
   \              0x1F 0x20    
   \              0x40 0x20    
   \              0x1F 0x00    
   \              0x3F 0x40    
   \      0x14D   0x38 0x40          DC8 56, 64, 63, 0, 99, 20, 8, 20, 99, 0, 7, 8, 112, 8, 7, 0, 97, 81, 73
   \              0x3F 0x00    
   \              0x63 0x14    
   \              0x08 0x14    
   \              0x63 0x00    
   \              0x07 0x08    
   \              0x70 0x08    
   \              0x07 0x00    
   \              0x61 0x51    
   \              0x49         
   \      0x160   0x45 0x43          DC8 69, 67, 0, 0, 127, 65, 65, 0, 0, 85, 42, 85, 42, 85, 0, 0, 65, 65
   \              0x00 0x00    
   \              0x7F 0x41    
   \              0x41 0x00    
   \              0x00 0x55    
   \              0x2A 0x55    
   \              0x2A 0x55    
   \              0x00 0x00    
   \              0x41 0x41    
   \      0x172   0x7F 0x00          DC8 127, 0, 0, 4, 2, 1, 2, 4, 0, 64, 64, 64, 64, 64, 0, 0, 1, 2, 4, 0
   \              0x00 0x04    
   \              0x02 0x01    
   \              0x02 0x04    
   \              0x00 0x40    
   \              0x40 0x40    
   \              0x40 0x40    
   \              0x00 0x00    
   \              0x01 0x02    
   \              0x04 0x00    
   \      0x186   0x00 0x20          DC8 0, 32, 84, 84, 84, 120, 0, 127, 72, 68, 68, 56, 0, 56, 68, 68, 68
   \              0x54 0x54    
   \              0x54 0x78    
   \              0x00 0x7F    
   \              0x48 0x44    
   \              0x44 0x38    
   \              0x00 0x38    
   \              0x44 0x44    
   \              0x44         
   \      0x197   0x20 0x00          DC8 32, 0, 56, 68, 68, 72, 127, 0, 56, 84, 84, 84, 24, 0, 8, 126, 9, 1
   \              0x38 0x44    
   \              0x44 0x48    
   \              0x7F 0x00    
   \              0x38 0x54    
   \              0x54 0x54    
   \              0x18 0x00    
   \              0x08 0x7E    
   \              0x09 0x01    
   \      0x1A9   0x02 0x00          DC8 2, 0, 24, 164, 164, 164, 124, 0, 127, 8, 4, 4, 120, 0, 0, 68, 125
   \              0x18 0xA4    
   \              0xA4 0xA4    
   \              0x7C 0x00    
   \              0x7F 0x08    
   \              0x04 0x04    
   \              0x78 0x00    
   \              0x00 0x44    
   \              0x7D         
   \      0x1BA   0x40 0x00          DC8 64, 0, 0, 64, 128, 132, 125, 0, 0, 127, 16, 40, 68, 0, 0, 0, 65
   \              0x00 0x40    
   \              0x80 0x84    
   \              0x7D 0x00    
   \              0x00 0x7F    
   \              0x10 0x28    
   \              0x44 0x00    
   \              0x00 0x00    
   \              0x41         
   \      0x1CB   0x7F 0x40          DC8 127, 64, 0, 0, 124, 4, 24, 4, 120, 0, 124, 8, 4, 4, 120, 0, 56, 68
   \              0x00 0x00    
   \              0x7C 0x04    
   \              0x18 0x04    
   \              0x78 0x00    
   \              0x7C 0x08    
   \              0x04 0x04    
   \              0x78 0x00    
   \              0x38 0x44    
   \      0x1DD   0x44 0x44          DC8 68, 68, 56, 0, 252, 36, 36, 36, 24, 0, 24, 36, 36, 24, 252, 0, 124
   \              0x38 0x00    
   \              0xFC 0x24    
   \              0x24 0x24    
   \              0x18 0x00    
   \              0x18 0x24    
   \              0x24 0x18    
   \              0xFC 0x00    
   \              0x7C         
   \      0x1EE   0x08 0x04          DC8 8, 4, 4, 8, 0, 72, 84, 84, 84, 32, 0, 4, 63, 68, 64, 32, 0, 60, 64
   \              0x04 0x08    
   \              0x00 0x48    
   \              0x54 0x54    
   \              0x54 0x20    
   \              0x00 0x04    
   \              0x3F 0x44    
   \              0x40 0x20    
   \              0x00 0x3C    
   \              0x40         
   \      0x201   0x40 0x20          DC8 64, 32, 124, 0, 28, 32, 64, 32, 28, 0, 60, 64, 48, 64, 60, 0, 68
   \              0x7C 0x00    
   \              0x1C 0x20    
   \              0x40 0x20    
   \              0x1C 0x00    
   \              0x3C 0x40    
   \              0x30 0x40    
   \              0x3C 0x00    
   \              0x44         
   \      0x212   0x28 0x10          DC8 40, 16, 40, 68, 0, 28, 160, 160, 160, 124, 0, 68, 100, 84, 76, 68
   \              0x28 0x44    
   \              0x00 0x1C    
   \              0xA0 0xA0    
   \              0xA0 0x7C    
   \              0x00 0x44    
   \              0x64 0x54    
   \              0x4C 0x44    
   \      0x222   0x14 0x14          DC8 20, 20, 20, 20, 20, 20
   \              0x14 0x14    
   \              0x14 0x14    
     52          {
     53              { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },   // sp
     54              { 0x00, 0x00, 0x00, 0x2f, 0x00, 0x00 },   // !
     55              { 0x00, 0x00, 0x07, 0x00, 0x07, 0x00 },   // "
     56              { 0x00, 0x14, 0x7f, 0x14, 0x7f, 0x14 },   // #
     57              { 0x00, 0x24, 0x2a, 0x7f, 0x2a, 0x12 },   // $
     58              { 0x00, 0x62, 0x64, 0x08, 0x13, 0x23 },   // %
     59              { 0x00, 0x36, 0x49, 0x55, 0x22, 0x50 },   // &
     60              { 0x00, 0x00, 0x05, 0x03, 0x00, 0x00 },   // '
     61              { 0x00, 0x00, 0x1c, 0x22, 0x41, 0x00 },   // (
     62              { 0x00, 0x00, 0x41, 0x22, 0x1c, 0x00 },   // )
     63              { 0x00, 0x14, 0x08, 0x3E, 0x08, 0x14 },   // *
     64              { 0x00, 0x08, 0x08, 0x3E, 0x08, 0x08 },   // +
     65              { 0x00, 0x00, 0x00, 0xA0, 0x60, 0x00 },   // ,
     66              { 0x00, 0x08, 0x08, 0x08, 0x08, 0x08 },   // -
     67              { 0x00, 0x00, 0x60, 0x60, 0x00, 0x00 },   // .
     68              { 0x00, 0x20, 0x10, 0x08, 0x04, 0x02 },   // /
     69              { 0x00, 0x3E, 0x51, 0x49, 0x45, 0x3E },   // 0
     70              { 0x00, 0x00, 0x42, 0x7F, 0x40, 0x00 },   // 1
     71              { 0x00, 0x42, 0x61, 0x51, 0x49, 0x46 },   // 2
     72              { 0x00, 0x21, 0x41, 0x45, 0x4B, 0x31 },   // 3
     73              { 0x00, 0x18, 0x14, 0x12, 0x7F, 0x10 },   // 4
     74              { 0x00, 0x27, 0x45, 0x45, 0x45, 0x39 },   // 5
     75              { 0x00, 0x3C, 0x4A, 0x49, 0x49, 0x30 },   // 6
     76              { 0x00, 0x01, 0x71, 0x09, 0x05, 0x03 },   // 7
     77              { 0x00, 0x36, 0x49, 0x49, 0x49, 0x36 },   // 8
     78              { 0x00, 0x06, 0x49, 0x49, 0x29, 0x1E },   // 9
     79              { 0x00, 0x00, 0x36, 0x36, 0x00, 0x00 },   // :
     80              { 0x00, 0x00, 0x56, 0x36, 0x00, 0x00 },   // ;
     81              { 0x00, 0x08, 0x14, 0x22, 0x41, 0x00 },   // <
     82              { 0x00, 0x14, 0x14, 0x14, 0x14, 0x14 },   // =
     83              { 0x00, 0x00, 0x41, 0x22, 0x14, 0x08 },   // >
     84              { 0x00, 0x02, 0x01, 0x51, 0x09, 0x06 },   // ?
     85              { 0x00, 0x32, 0x49, 0x59, 0x51, 0x3E },   // @
     86              { 0x00, 0x7C, 0x12, 0x11, 0x12, 0x7C },   // A
     87              { 0x00, 0x7F, 0x49, 0x49, 0x49, 0x36 },   // B
     88              { 0x00, 0x3E, 0x41, 0x41, 0x41, 0x22 },   // C
     89              { 0x00, 0x7F, 0x41, 0x41, 0x22, 0x1C },   // D
     90              { 0x00, 0x7F, 0x49, 0x49, 0x49, 0x41 },   // E
     91              { 0x00, 0x7F, 0x09, 0x09, 0x09, 0x01 },   // F
     92              { 0x00, 0x3E, 0x41, 0x49, 0x49, 0x7A },   // G
     93              { 0x00, 0x7F, 0x08, 0x08, 0x08, 0x7F },   // H
     94              { 0x00, 0x00, 0x41, 0x7F, 0x41, 0x00 },   // I
     95              { 0x00, 0x20, 0x40, 0x41, 0x3F, 0x01 },   // J
     96              { 0x00, 0x7F, 0x08, 0x14, 0x22, 0x41 },   // K
     97              { 0x00, 0x7F, 0x40, 0x40, 0x40, 0x40 },   // L
     98              { 0x00, 0x7F, 0x02, 0x0C, 0x02, 0x7F },   // M
     99              { 0x00, 0x7F, 0x04, 0x08, 0x10, 0x7F },   // N
    100              { 0x00, 0x3E, 0x41, 0x41, 0x41, 0x3E },   // O
    101              { 0x00, 0x7F, 0x09, 0x09, 0x09, 0x06 },   // P
    102              { 0x00, 0x3E, 0x41, 0x51, 0x21, 0x5E },   // Q
    103              { 0x00, 0x7F, 0x09, 0x19, 0x29, 0x46 },   // R
    104              { 0x00, 0x46, 0x49, 0x49, 0x49, 0x31 },   // S
    105              { 0x00, 0x01, 0x01, 0x7F, 0x01, 0x01 },   // T
    106              { 0x00, 0x3F, 0x40, 0x40, 0x40, 0x3F },   // U
    107              { 0x00, 0x1F, 0x20, 0x40, 0x20, 0x1F },   // V
    108              { 0x00, 0x3F, 0x40, 0x38, 0x40, 0x3F },   // W
    109              { 0x00, 0x63, 0x14, 0x08, 0x14, 0x63 },   // X
    110              { 0x00, 0x07, 0x08, 0x70, 0x08, 0x07 },   // Y
    111              { 0x00, 0x61, 0x51, 0x49, 0x45, 0x43 },   // Z
    112              { 0x00, 0x00, 0x7F, 0x41, 0x41, 0x00 },   // [
    113              { 0x00, 0x55, 0x2A, 0x55, 0x2A, 0x55 },   // 55
    114              { 0x00, 0x00, 0x41, 0x41, 0x7F, 0x00 },   // ]
    115              { 0x00, 0x04, 0x02, 0x01, 0x02, 0x04 },   // ^
    116              { 0x00, 0x40, 0x40, 0x40, 0x40, 0x40 },   // _
    117              { 0x00, 0x00, 0x01, 0x02, 0x04, 0x00 },   // '
    118              { 0x00, 0x20, 0x54, 0x54, 0x54, 0x78 },   // a
    119              { 0x00, 0x7F, 0x48, 0x44, 0x44, 0x38 },   // b
    120              { 0x00, 0x38, 0x44, 0x44, 0x44, 0x20 },   // c
    121              { 0x00, 0x38, 0x44, 0x44, 0x48, 0x7F },   // d
    122              { 0x00, 0x38, 0x54, 0x54, 0x54, 0x18 },   // e
    123              { 0x00, 0x08, 0x7E, 0x09, 0x01, 0x02 },   // f
    124              { 0x00, 0x18, 0xA4, 0xA4, 0xA4, 0x7C },   // g
    125              { 0x00, 0x7F, 0x08, 0x04, 0x04, 0x78 },   // h
    126              { 0x00, 0x00, 0x44, 0x7D, 0x40, 0x00 },   // i
    127              { 0x00, 0x40, 0x80, 0x84, 0x7D, 0x00 },   // j
    128              { 0x00, 0x7F, 0x10, 0x28, 0x44, 0x00 },   // k
    129              { 0x00, 0x00, 0x41, 0x7F, 0x40, 0x00 },   // l
    130              { 0x00, 0x7C, 0x04, 0x18, 0x04, 0x78 },   // m
    131              { 0x00, 0x7C, 0x08, 0x04, 0x04, 0x78 },   // n
    132              { 0x00, 0x38, 0x44, 0x44, 0x44, 0x38 },   // o
    133              { 0x00, 0xFC, 0x24, 0x24, 0x24, 0x18 },   // p
    134              { 0x00, 0x18, 0x24, 0x24, 0x18, 0xFC },   // q
    135              { 0x00, 0x7C, 0x08, 0x04, 0x04, 0x08 },   // r
    136              { 0x00, 0x48, 0x54, 0x54, 0x54, 0x20 },   // s
    137              { 0x00, 0x04, 0x3F, 0x44, 0x40, 0x20 },   // t
    138              { 0x00, 0x3C, 0x40, 0x40, 0x20, 0x7C },   // u
    139              { 0x00, 0x1C, 0x20, 0x40, 0x20, 0x1C },   // v
    140              { 0x00, 0x3C, 0x40, 0x30, 0x40, 0x3C },   // w
    141              { 0x00, 0x44, 0x28, 0x10, 0x28, 0x44 },   // x
    142              { 0x00, 0x1C, 0xA0, 0xA0, 0xA0, 0x7C },   // y
    143              { 0x00, 0x44, 0x64, 0x54, 0x4C, 0x44 },   // z
    144              { 0x14, 0x14, 0x14, 0x14, 0x14, 0x14 }    // horiz lines
    145          };

   \                                 In section .rodata, align 1
    146          const uint8 F14x16_Idx[] = 
   \                     F14x16_Idx:
   \        0x0   0x00               DC8 ""
    147          {
    148          	""
    149          };

   \                                 In section .rodata, align 4
    150          const uint8 F14x16[] = {  
   \                     F14x16:
   \        0x0   0x00 0x00          DC8 0, 0, 64, 64, 64, 254, 0, 0, 254, 128, 64, 32, 32, 0, 0, 48, 16, 16
   \              0x40 0x40    
   \              0x40 0xFE    
   \              0x00 0x00    
   \              0xFE 0x80    
   \              0x40 0x20    
   \              0x20 0x00    
   \              0x00 0x30    
   \              0x10 0x10    
   \       0x12   0x08 0x7F          DC8 8, 127, 0, 0, 127, 64, 64, 64, 120, 0, 0, 8, 8, 232, 72, 72, 74, 76
   \              0x00 0x00    
   \              0x7F 0x40    
   \              0x40 0x40    
   \              0x78 0x00    
   \              0x00 0x08    
   \              0x08 0xE8    
   \              0x48 0x48    
   \              0x4A 0x4C    
   \       0x24   0x48 0x48          DC8 72, 72, 232, 8, 8, 0, 0, 64, 32, 19, 10, 66, 254, 2, 2, 10, 19, 96
   \              0xE8 0x08    
   \              0x08 0x00    
   \              0x00 0x40    
   \              0x20 0x13    
   \              0x0A 0x42    
   \              0xFE 0x02    
   \              0x02 0x0A    
   \              0x13 0x60    
   \       0x36   0x00 0x00          DC8 0, 0, 0, 0, 32, 32, 32, 254, 34, 32, 224, 36, 168, 160, 16, 0, 0
   \              0x00 0x00    
   \              0x20 0x20    
   \              0x20 0xFE    
   \              0x22 0x20    
   \              0xE0 0x24    
   \              0xA8 0xA0    
   \              0x10 0x00    
   \              0x00         
   \       0x47   0x40 0x20          DC8 64, 32, 16, 12, 35, 16, 8, 127, 66, 65, 64, 120, 0, 0, 0, 0, 248
   \              0x10 0x0C    
   \              0x23 0x10    
   \              0x08 0x7F    
   \              0x42 0x41    
   \              0x40 0x78    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0xF8         
   \       0x58   0x88 0x88          DC8 136, 136, 136, 136, 132, 132, 134, 192, 0, 0, 0, 0, 32, 63, 32, 32
   \              0x88 0x88    
   \              0x84 0x84    
   \              0x86 0xC0    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x20 0x3F    
   \              0x20 0x20    
   \       0x68   0x20 0x20          DC8 32, 32, 63, 32, 32, 32, 32, 0, 0, 0, 252, 68, 68, 196, 66, 64, 252
   \              0x3F 0x20    
   \              0x20 0x20    
   \              0x20 0x00    
   \              0x00 0x00    
   \              0xFC 0x44    
   \              0x44 0xC4    
   \              0x42 0x40    
   \              0xFC         
   \       0x79   0x04 0xC4          DC8 4, 196, 52, 12, 0, 0, 48, 31, 16, 16, 15, 16, 16, 127, 0, 16, 17
   \              0x34 0x0C    
   \              0x00 0x00    
   \              0x30 0x1F    
   \              0x10 0x10    
   \              0x0F 0x10    
   \              0x10 0x7F    
   \              0x00 0x10    
   \              0x11         
   \       0x8A   0x1E 0x00          DC8 30, 0, 0, 0, 72, 252, 68, 66, 0, 136, 16, 0, 254, 2, 0, 0, 0, 12, 2
   \              0x00 0x00    
   \              0x48 0xFC    
   \              0x44 0x42    
   \              0x00 0x88    
   \              0x10 0x00    
   \              0xFE 0x02    
   \              0x00 0x00    
   \              0x00 0x0C    
   \              0x02         
   \       0x9D   0x7F 0x01          DC8 127, 1, 3, 8, 8, 5, 4, 255, 4, 2, 0, 0, 16, 16, 254, 16, 144, 144
   \              0x03 0x08    
   \              0x08 0x05    
   \              0x04 0xFF    
   \              0x04 0x02    
   \              0x00 0x00    
   \              0x10 0x10    
   \              0xFE 0x10    
   \              0x90 0x90    
   \       0xAF   0x90 0x90          DC8 144, 144, 254, 144, 144, 16, 0, 0, 2, 65, 127, 129, 128, 64, 39, 40
   \              0xFE 0x90    
   \              0x90 0x10    
   \              0x00 0x00    
   \              0x02 0x41    
   \              0x7F 0x81    
   \              0x80 0x40    
   \              0x27 0x28    
   \       0xBF   0x18 0x26          DC8 24, 38, 65, 64, 0, 0, 132, 132, 132, 252, 132, 132, 132, 132, 252
   \              0x41 0x40    
   \              0x00 0x00    
   \              0x84 0x84    
   \              0x84 0xFC    
   \              0x84 0x84    
   \              0x84 0x84    
   \              0xFC         
   \       0xCE   0x84 0x86          DC8 132, 134, 128, 0, 0, 64, 32, 16, 15, 0, 0, 0, 0, 127, 0, 0, 0, 0, 0
   \              0x80 0x00    
   \              0x00 0x40    
   \              0x20 0x10    
   \              0x0F 0x00    
   \              0x00 0x00    
   \              0x00 0x7F    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \       0xE1   0x00 0x18          DC8 0, 24, 36, 160, 124, 34, 32, 34, 36, 172, 32, 0, 0, 0, 64, 48, 140
   \              0x24 0xA0    
   \              0x7C 0x22    
   \              0x20 0x22    
   \              0x24 0xAC    
   \              0x20 0x00    
   \              0x00 0x00    
   \              0x40 0x30    
   \              0x8C         
   \       0xF2   0x83 0x41          DC8 131, 65, 39, 25, 25, 39, 97, 64, 64, 0, 0, 0, 224, 254, 144, 32
   \              0x27 0x19    
   \              0x19 0x27    
   \              0x61 0x40    
   \              0x40 0x00    
   \              0x00 0x00    
   \              0xE0 0xFE    
   \              0x90 0x20    
   \      0x102   0xF8 0xC8          DC8 248, 200, 72, 68, 196, 98, 0, 0, 0, 6, 1, 127, 65, 184, 71, 33, 22
   \              0x48 0x44    
   \              0xC4 0x62    
   \              0x00 0x00    
   \              0x00 0x06    
   \              0x01 0x7F    
   \              0x41 0xB8    
   \              0x47 0x21    
   \              0x16         
   \      0x113   0x1C 0x23          DC8 28, 35, 96, 64, 0, 0, 48, 44, 170, 120, 168, 164, 32, 252, 136, 136
   \              0x60 0x40    
   \              0x00 0x00    
   \              0x30 0x2C    
   \              0xAA 0x78    
   \              0xA8 0xA4    
   \              0x20 0xFC    
   \              0x88 0x88    
   \      0x123   0x78 0x00          DC8 120, 0, 0, 0, 2, 2, 1, 126, 82, 83, 83, 82, 82, 126, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x02 0x02    
   \              0x01 0x7E    
   \              0x52 0x53    
   \              0x53 0x52    
   \              0x52 0x7E    
   \              0x00 0x00    
   \              0x00 0x00    
   \      0x135   0x70 0xA8          DC8 112, 168, 164, 162, 232, 48, 0, 126, 144, 136, 184, 64, 0, 0, 0
   \              0xA4 0xA2    
   \              0xE8 0x30    
   \              0x00 0x7E    
   \              0x90 0x88    
   \              0xB8 0x40    
   \              0x00 0x00    
   \              0x00         
   \      0x144   0x7F 0x0A          DC8 127, 10, 74, 127, 0, 0, 126, 72, 68, 66, 112, 0, 0, 0, 8, 200, 56
   \              0x4A 0x7F    
   \              0x00 0x00    
   \              0x7E 0x48    
   \              0x44 0x42    
   \              0x70 0x00    
   \              0x00 0x00    
   \              0x08 0xC8    
   \              0x38         
   \      0x155   0x0C 0x0A          DC8 12, 10, 232, 8, 8, 136, 8, 0, 0, 0, 8, 8, 9, 9, 9, 9, 127, 9, 9, 8
   \              0xE8 0x08    
   \              0x08 0x88    
   \              0x08 0x00    
   \              0x00 0x00    
   \              0x08 0x08    
   \              0x09 0x09    
   \              0x09 0x09    
   \              0x7F 0x09    
   \              0x09 0x08    
   \      0x169   0x08 0x08          DC8 8, 8, 0, 0, 16, 16, 208, 82, 76, 112, 80, 76, 82, 208, 16, 0, 0, 0
   \              0x00 0x00    
   \              0x10 0x10    
   \              0xD0 0x52    
   \              0x4C 0x70    
   \              0x50 0x4C    
   \              0x52 0xD0    
   \              0x10 0x00    
   \              0x00 0x00    
   \      0x17B   0x00 0x00          DC8 0, 0, 127, 74, 74, 74, 74, 74, 74, 127, 0, 0, 0, 0, 0, 132, 72, 192
   \              0x7F 0x4A    
   \              0x4A 0x4A    
   \              0x4A 0x4A    
   \              0x4A 0x7F    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x84    
   \              0x48 0xC0    
   \      0x18D   0xA0 0x9C          DC8 160, 156, 144, 254, 144, 144, 144, 128, 0, 0, 32, 31, 16, 32, 80
   \              0x90 0xFE    
   \              0x90 0x90    
   \              0x90 0x80    
   \              0x00 0x00    
   \              0x20 0x1F    
   \              0x10 0x20    
   \              0x50         
   \      0x19C   0x4E 0x41          DC8 78, 65, 64, 95, 80, 88, 80, 0, 0, 64, 132, 224, 16, 200, 56, 152
   \              0x40 0x5F    
   \              0x50 0x58    
   \              0x50 0x00    
   \              0x00 0x40    
   \              0x84 0xE0    
   \              0x10 0xC8    
   \              0x38 0x98    
   \      0x1AC   0xEE 0x58          DC8 238, 88, 72, 200, 8, 0, 0, 8, 126, 1, 2, 255, 129, 65, 38, 27, 62
   \              0x48 0xC8    
   \              0x08 0x00    
   \              0x00 0x08    
   \              0x7E 0x01    
   \              0x02 0xFF    
   \              0x81 0x41    
   \              0x26 0x1B    
   \              0x3E         
   \      0x1BD   0x61 0x40          DC8 97, 64, 0, 0, 0, 0, 128, 124, 84, 84, 84, 84, 84, 126, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x80 0x7C    
   \              0x54 0x54    
   \              0x54 0x54    
   \              0x54 0x7E    
   \              0x00 0x00    
   \              0x00 0x00    
   \      0x1CF   0x00 0x7F          DC8 0, 127, 73, 73, 127, 0, 0, 127, 73, 73, 63, 1, 0, 0, 32, 88, 72, 72
   \              0x49 0x49    
   \              0x7F 0x00    
   \              0x00 0x7F    
   \              0x49 0x49    
   \              0x3F 0x01    
   \              0x00 0x00    
   \              0x20 0x58    
   \              0x48 0x48    
   \      0x1E1   0xC8 0x4A          DC8 200, 74, 76, 72, 200, 40, 24, 0, 0, 0, 64, 64, 75, 75, 74, 126, 74
   \              0x4C 0x48    
   \              0xC8 0x28    
   \              0x18 0x00    
   \              0x00 0x00    
   \              0x40 0x40    
   \              0x4B 0x4B    
   \              0x4A 0x7E    
   \              0x4A         
   \      0x1F2   0x4A 0x4A          DC8 74, 74, 75, 64, 64, 0, 0, 32, 4, 248, 16, 252, 148, 148, 148, 148
   \              0x4B 0x40    
   \              0x40 0x00    
   \              0x00 0x20    
   \              0x04 0xF8    
   \              0x10 0xFC    
   \              0x94 0x94    
   \              0x94 0x94    
   \      0x202   0xFC 0x00          DC8 252, 0, 0, 0, 0, 0, 126, 65, 126, 66, 126, 66, 66, 126, 66, 126, 64
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x7E 0x41    
   \              0x7E 0x42    
   \              0x7E 0x42    
   \              0x42 0x7E    
   \              0x42 0x7E    
   \              0x40         
   \      0x213   0x00 0x00          DC8 0, 0, 0, 248, 72, 72, 232, 88, 70, 72, 248, 72, 40, 0, 0, 64, 56
   \              0x00 0xF8    
   \              0x48 0x48    
   \              0xE8 0x58    
   \              0x46 0x48    
   \              0xF8 0x48    
   \              0x28 0x00    
   \              0x00 0x40    
   \              0x38         
   \      0x224   0x87 0x80          DC8 135, 128, 128, 68, 77, 53, 53, 77, 66, 64, 64, 0, 0, 0, 32, 254
   \              0x80 0x44    
   \              0x4D 0x35    
   \              0x35 0x4D    
   \              0x42 0x40    
   \              0x40 0x00    
   \              0x00 0x00    
   \              0x20 0xFE    
   \      0x234   0x90 0x20          DC8 144, 32, 24, 144, 106, 20, 16, 48, 24, 0, 0, 2, 65, 127, 128, 129
   \              0x18 0x90    
   \              0x6A 0x14    
   \              0x10 0x30    
   \              0x18 0x00    
   \              0x00 0x02    
   \              0x41 0x7F    
   \              0x80 0x81    
   \      0x244   0x47 0x49          DC8 71, 73, 49, 25, 23, 33, 64, 0, 0, 112, 206, 80, 72, 232, 152, 168
   \              0x31 0x19    
   \              0x17 0x21    
   \              0x40 0x00    
   \              0x00 0x70    
   \              0xCE 0x50    
   \              0x48 0xE8    
   \              0x98 0xA8    
   \      0x254   0xA8 0xFE          DC8 168, 254, 168, 248, 32, 0, 0, 2, 127, 178, 66, 36, 30, 41, 74, 127
   \              0xA8 0xF8    
   \              0x20 0x00    
   \              0x00 0x02    
   \              0x7F 0xB2    
   \              0x42 0x24    
   \              0x1E 0x29    
   \              0x4A 0x7F    
   \      0x264   0x4A 0x49          DC8 74, 73, 68, 0, 0, 0, 4, 248, 16, 192, 48, 46, 224, 32, 32, 32, 16
   \              0x44 0x00    
   \              0x00 0x00    
   \              0x04 0xF8    
   \              0x10 0xC0    
   \              0x30 0x2E    
   \              0xE0 0x20    
   \              0x20 0x20    
   \              0x10         
   \      0x275   0x00 0x00          DC8 0, 0, 0, 63, 128, 65, 32, 16, 14, 1, 14, 16, 96, 64, 0, 0, 0, 240
   \              0x00 0x3F    
   \              0x80 0x41    
   \              0x20 0x10    
   \              0x0E 0x01    
   \              0x0E 0x10    
   \              0x60 0x40    
   \              0x00 0x00    
   \              0x00 0xF0    
   \      0x287   0x90 0x90          DC8 144, 144, 144, 254, 144, 144, 144, 240, 16, 0, 0, 0, 0, 15, 4, 4, 4
   \              0x90 0xFE    
   \              0x90 0x90    
   \              0x90 0xF0    
   \              0x10 0x00    
   \              0x00 0x00    
   \              0x00 0x0F    
   \              0x04 0x04    
   \              0x04         
   \      0x298   0x7F 0x44          DC8 127, 68, 68, 68, 79, 80, 96, 0, 0, 0, 252, 4, 4, 4, 4, 252, 4, 4, 4
   \              0x44 0x44    
   \              0x4F 0x50    
   \              0x60 0x00    
   \              0x00 0x00    
   \              0xFC 0x04    
   \              0x04 0x04    
   \              0x04 0xFC    
   \              0x04 0x04    
   \              0x04         
   \      0x2AB   0x86 0x04          DC8 134, 4, 0, 0, 32, 95, 64, 64, 65, 65, 63, 65, 67, 77, 64, 32, 0, 0
   \              0x00 0x00    
   \              0x20 0x5F    
   \              0x40 0x40    
   \              0x41 0x41    
   \              0x3F 0x41    
   \              0x43 0x4D    
   \              0x40 0x20    
   \              0x00 0x00    
   \      0x2BD   0x00 0xF0          DC8 0, 240, 68, 196, 192, 36, 220, 52, 180, 68, 252, 4, 0, 0, 0, 127
   \              0x44 0xC4    
   \              0xC0 0x24    
   \              0xDC 0x34    
   \              0xB4 0x44    
   \              0xFC 0x04    
   \              0x00 0x00    
   \              0x00 0x7F    
   \      0x2CD   0x13 0x14          DC8 19, 20, 47, 25, 11, 14, 17, 124, 127, 0, 0, 0, 128, 240, 12, 8, 200
   \              0x2F 0x19    
   \              0x0B 0x0E    
   \              0x11 0x7C    
   \              0x7F 0x00    
   \              0x00 0x00    
   \              0x80 0xF0    
   \              0x0C 0x08    
   \              0xC8         
   \      0x2DE   0x48 0x28          DC8 72, 40, 94, 72, 232, 8, 8, 0, 0, 0, 127, 0, 0, 111, 149, 149, 149
   \              0x5E 0x48    
   \              0xE8 0x08    
   \              0x08 0x00    
   \              0x00 0x00    
   \              0x7F 0x00    
   \              0x00 0x6F    
   \              0x95 0x95    
   \              0x95         
   \      0x2EF   0x95 0x7F          DC8 149, 127, 128, 64, 0, 0, 0, 0, 0, 0, 0, 254, 64, 64, 64, 64, 64, 0
   \              0x80 0x40    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0xFE    
   \              0x40 0x40    
   \              0x40 0x40    
   \              0x40 0x00    
   \      0x301   0x00 0x00          DC8 0, 0, 64, 64, 64, 64, 64, 63, 64, 64, 64, 64, 64, 32, 0, 0, 0, 8, 8
   \              0x40 0x40    
   \              0x40 0x40    
   \              0x40 0x3F    
   \              0x40 0x40    
   \              0x40 0x40    
   \              0x40 0x20    
   \              0x00 0x00    
   \              0x00 0x08    
   \              0x08         
   \      0x314   0x08 0x08          DC8 8, 8, 248, 72, 136, 136, 8, 4, 4, 0, 0, 0, 0, 0, 0, 0, 127, 0, 0, 0
   \              0xF8 0x48    
   \              0x88 0x88    
   \              0x08 0x04    
   \              0x04 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x7F 0x00    
   \              0x00 0x00    
   \      0x328   0x01 0x00          DC8 1, 0, 0, 0, 0, 0, 16, 16, 208, 62, 16, 16, 16, 16, 16, 8, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x10 0x10    
   \              0xD0 0x3E    
   \              0x10 0x10    
   \              0x10 0x10    
   \              0x10 0x08    
   \              0x00 0x00    
   \              0x00         
   \      0x33B   0x10 0x08          DC8 16, 8, 70, 65, 65, 65, 127, 65, 65, 65, 96, 64, 0, 0, 16, 16, 16
   \              0x46 0x41    
   \              0x41 0x41    
   \              0x7F 0x41    
   \              0x41 0x41    
   \              0x60 0x40    
   \              0x00 0x00    
   \              0x10 0x10    
   \              0x10         
   \      0x34C   0x90 0x70          DC8 144, 112, 14, 16, 16, 16, 16, 16, 0, 0, 0, 8, 4, 2, 63, 65, 65, 65
   \              0x0E 0x10    
   \              0x10 0x10    
   \              0x10 0x10    
   \              0x00 0x00    
   \              0x00 0x08    
   \              0x04 0x02    
   \              0x3F 0x41    
   \              0x41 0x41    
   \      0x35E   0x41 0x41          DC8 65, 65, 127, 1, 0, 0, 0, 132, 136, 128, 8, 232, 40, 40, 254, 40, 40
   \              0x7F 0x01    
   \              0x00 0x00    
   \              0x00 0x84    
   \              0x88 0x80    
   \              0x08 0xE8    
   \              0x28 0x28    
   \              0xFE 0x28    
   \              0x28         
   \      0x36F   0xE8 0x08          DC8 232, 8, 0, 0, 32, 16, 31, 48, 73, 69, 67, 127, 69, 69, 73, 64, 0, 0
   \              0x00 0x00    
   \              0x20 0x10    
   \              0x1F 0x30    
   \              0x49 0x45    
   \              0x43 0x7F    
   \              0x45 0x45    
   \              0x49 0x40    
   \              0x00 0x00    
   \      0x381   0x00 0xF8          DC8 0, 248, 72, 72, 232, 88, 70, 72, 248, 72, 40, 0, 0, 64, 56, 135
   \              0x48 0x48    
   \              0xE8 0x58    
   \              0x46 0x48    
   \              0xF8 0x48    
   \              0x28 0x00    
   \              0x00 0x40    
   \              0x38 0x87    
   \      0x391   0x80 0x80          DC8 128, 128, 68, 77, 53, 53, 77, 66, 64, 64, 0, 0, 16, 16, 16, 16, 16
   \              0x44 0x4D    
   \              0x35 0x35    
   \              0x4D 0x42    
   \              0x40 0x40    
   \              0x00 0x00    
   \              0x10 0x10    
   \              0x10 0x10    
   \              0x10         
   \      0x3A2   0xF2 0x9C          DC8 242, 156, 144, 144, 144, 16, 24, 0, 0, 0, 64, 48, 8, 7, 64, 64, 64
   \              0x90 0x90    
   \              0x90 0x10    
   \              0x18 0x00    
   \              0x00 0x00    
   \              0x40 0x30    
   \              0x08 0x07    
   \              0x40 0x40    
   \              0x40         
   \      0x3B3   0x78 0x07          DC8 120, 7, 0, 0, 0, 0, 0, 240, 16, 144, 140, 146, 144, 144, 16, 16
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0xF0    
   \              0x10 0x90    
   \              0x8C 0x92    
   \              0x90 0x90    
   \              0x10 0x10    
   \      0x3C3   0xF8 0x00          DC8 248, 0, 0, 0, 0, 127, 0, 7, 8, 8, 8, 15, 0, 64, 127, 0, 0, 0, 16
   \              0x00 0x00    
   \              0x00 0x7F    
   \              0x00 0x07    
   \              0x08 0x08    
   \              0x08 0x0F    
   \              0x00 0x40    
   \              0x7F 0x00    
   \              0x00 0x00    
   \              0x10         
   \      0x3D6   0x10 0xFE          DC8 16, 254, 144, 48, 144, 80, 12, 20, 80, 176, 24, 0, 0, 66, 65, 127
   \              0x90 0x30    
   \              0x90 0x50    
   \              0x0C 0x14    
   \              0x50 0xB0    
   \              0x18 0x00    
   \              0x00 0x42    
   \              0x41 0x7F    
   \      0x3E6   0x00 0x01          DC8 0, 1, 66, 66, 62, 66, 66, 67, 32, 0, 0, 0, 64, 240, 44, 42, 40, 248
   \              0x42 0x42    
   \              0x3E 0x42    
   \              0x42 0x43    
   \              0x20 0x00    
   \              0x00 0x00    
   \              0x40 0xF0    
   \              0x2C 0x2A    
   \              0x28 0xF8    
   \      0x3F8   0x28 0x20          DC8 40, 32, 32, 224, 0, 0, 0, 64, 32, 31, 5, 5, 5, 127, 5, 69, 69, 127
   \              0x20 0xE0    
   \              0x00 0x00    
   \              0x00 0x40    
   \              0x20 0x1F    
   \              0x05 0x05    
   \              0x05 0x7F    
   \              0x05 0x45    
   \              0x45 0x7F    
   \      0x40A   0x00 0x00          DC8 0, 0, 0, 32, 32, 32, 32, 32, 254, 162, 32, 32, 32, 32, 32, 0, 0
   \              0x00 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0xFE 0xA2    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x20 0x00    
   \              0x00         
   \      0x41B   0x80 0x40          DC8 128, 64, 32, 16, 12, 3, 3, 4, 8, 48, 96, 64, 0, 0, 0, 0, 128, 96, 0
   \              0x20 0x10    
   \              0x0C 0x03    
   \              0x03 0x04    
   \              0x08 0x30    
   \              0x60 0x40    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x80 0x60    
   \              0x00         
   \      0x42E   0x00 0xFE          DC8 0, 254, 0, 64, 128, 0, 0, 0, 0, 4, 2, 1, 0, 64, 64, 63, 0, 0, 0, 3
   \              0x00 0x40    
   \              0x80 0x00    
   \              0x00 0x00    
   \              0x00 0x04    
   \              0x02 0x01    
   \              0x00 0x40    
   \              0x40 0x3F    
   \              0x00 0x00    
   \              0x00 0x03    
   \      0x442   0x06 0x00          DC8 6, 0, 0, 8, 8, 8, 232, 168, 166, 168, 168, 248, 8, 8, 4, 0, 0, 0
   \              0x00 0x08    
   \              0x08 0x08    
   \              0xE8 0xA8    
   \              0xA6 0xA8    
   \              0xA8 0xF8    
   \              0x08 0x08    
   \              0x04 0x00    
   \              0x00 0x00    
   \      0x454   0x7F 0x02          DC8 127, 2, 46, 18, 18, 18, 62, 66, 66, 127, 0, 0, 0, 192, 240, 12, 0
   \              0x2E 0x12    
   \              0x12 0x12    
   \              0x3E 0x42    
   \              0x42 0x7F    
   \              0x00 0x00    
   \              0x00 0xC0    
   \              0xF0 0x0C    
   \              0x00         
   \      0x465   0xF8 0x88          DC8 248, 136, 136, 248, 132, 132, 132, 128, 0, 0, 0, 127, 0, 0, 63, 32
   \              0x88 0xF8    
   \              0x84 0x84    
   \              0x84 0x80    
   \              0x00 0x00    
   \              0x00 0x7F    
   \              0x00 0x00    
   \              0x3F 0x20    
   \      0x475   0x30 0x51          DC8 48, 81, 14, 16, 32, 112, 0, 64, 64, 196, 0, 32, 104, 168, 168, 126
   \              0x0E 0x10    
   \              0x20 0x70    
   \              0x00 0x40    
   \              0x40 0xC4    
   \              0x00 0x20    
   \              0x68 0xA8    
   \              0xA8 0x7E    
   \      0x485   0xA8 0x28          DC8 168, 40, 96, 32, 0, 0, 0, 63, 32, 152, 137, 74, 41, 24, 39, 40, 72
   \              0x60 0x20    
   \              0x00 0x00    
   \              0x00 0x3F    
   \              0x20 0x98    
   \              0x89 0x4A    
   \              0x29 0x18    
   \              0x27 0x28    
   \              0x48         
   \      0x496   0x00 0x00          DC8 0, 0, 0, 0, 14, 140, 116, 68, 68, 68, 68, 68, 52, 12, 4, 0, 0, 8, 8
   \              0x00 0x00    
   \              0x0E 0x8C    
   \              0x74 0x44    
   \              0x44 0x44    
   \              0x44 0x44    
   \              0x34 0x0C    
   \              0x04 0x00    
   \              0x00 0x08    
   \              0x08         
   \      0x4A9   0x09 0x09          DC8 9, 9, 9, 9, 9, 9, 73, 113, 15, 0, 0, 0, 0, 132, 200, 0, 0, 252, 164
   \              0x09 0x09    
   \              0x09 0x09    
   \              0x49 0x71    
   \              0x0F 0x00    
   \              0x00 0x00    
   \              0x00 0x84    
   \              0xC8 0x00    
   \              0x00 0xFC    
   \              0xA4         
   \      0x4BC   0xA4 0xA4          DC8 164, 164, 252, 4, 0, 0, 0, 32, 16, 31, 32, 32, 95, 74, 66, 66, 70
   \              0xFC 0x04    
   \              0x00 0x00    
   \              0x00 0x20    
   \              0x10 0x1F    
   \              0x20 0x20    
   \              0x5F 0x4A    
   \              0x42 0x42    
   \              0x46         
   \      0x4CD   0x49 0x00          DC8 73, 0, 0, 0, 0, 240, 128, 128, 128, 252, 128, 128, 128, 240, 8, 0
   \              0x00 0x00    
   \              0x00 0xF0    
   \              0x80 0x80    
   \              0x80 0xFC    
   \              0x80 0x80    
   \              0x80 0xF0    
   \              0x08 0x00    
   \      0x4DD   0x00 0x00          DC8 0, 0, 0, 126, 64, 64, 64, 63, 64, 64, 64, 67, 124, 0, 0, 0, 0, 252
   \              0x00 0x7E    
   \              0x40 0x40    
   \              0x40 0x3F    
   \              0x40 0x40    
   \              0x40 0x43    
   \              0x7C 0x00    
   \              0x00 0x00    
   \              0x00 0xFC    
   \      0x4EF   0xF4 0x0C          DC8 244, 12, 0, 252, 36, 36, 36, 36, 252, 0, 0, 0, 0, 127, 8, 15, 0
   \              0x00 0xFC    
   \              0x24 0x24    
   \              0x24 0x24    
   \              0xFC 0x00    
   \              0x00 0x00    
   \              0x00 0x7F    
   \              0x08 0x0F    
   \              0x00         
   \      0x500   0x7F 0x21          DC8 127, 33, 7, 9, 53, 99, 2, 0, 0, 96, 88, 80, 254, 80, 80, 80, 0, 248
   \              0x07 0x09    
   \              0x35 0x63    
   \              0x02 0x00    
   \              0x00 0x60    
   \              0x58 0x50    
   \              0xFE 0x50    
   \              0x50 0x50    
   \              0x00 0xF8    
   \      0x512   0x00 0xFC          DC8 0, 252, 2, 0, 0, 30, 2, 2, 127, 18, 62, 1, 0, 15, 64, 127, 0, 0, 0
   \              0x02 0x00    
   \              0x00 0x1E    
   \              0x02 0x02    
   \              0x7F 0x12    
   \              0x3E 0x01    
   \              0x00 0x0F    
   \              0x40 0x7F    
   \              0x00 0x00    
   \              0x00         
   \      0x525   0x10 0x60          DC8 16, 96, 0, 254, 64, 64, 64, 254, 192, 68, 56, 0, 0, 0, 12, 2, 2
   \              0x00 0xFE    
   \              0x40 0x40    
   \              0x40 0xFE    
   \              0xC0 0x44    
   \              0x38 0x00    
   \              0x00 0x00    
   \              0x0C 0x02    
   \              0x02         
   \      0x536   0x7F 0x40          DC8 127, 64, 48, 14, 1, 7, 24, 32, 64, 0, 0, 16, 16, 16, 144, 240, 30
   \              0x30 0x0E    
   \              0x01 0x07    
   \              0x18 0x20    
   \              0x40 0x00    
   \              0x00 0x10    
   \              0x10 0x10    
   \              0x90 0xF0    
   \              0x1E         
   \      0x547   0x30 0x50          DC8 48, 80, 144, 16, 8, 0, 0, 0, 34, 26, 1, 124, 64, 69, 74, 64, 112, 1
   \              0x90 0x10    
   \              0x08 0x00    
   \              0x00 0x00    
   \              0x22 0x1A    
   \              0x01 0x7C    
   \              0x40 0x45    
   \              0x4A 0x40    
   \              0x70 0x01    
   \      0x559   0x1B 0x00          DC8 27, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 51, 50, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x33    
   \              0x32 0x00    
   \      0x56F   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 240, 46, 160, 112, 64, 112, 76, 66
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0xF0    
   \              0x2E 0xA0    
   \              0x70 0x40    
   \              0x70 0x4C    
   \              0x42         
   \      0x582   0x40 0x50          DC8 64, 80, 224, 0, 0, 67, 36, 24, 15, 48, 0, 126, 66, 66, 66, 127, 2
   \              0xE0 0x00    
   \              0x00 0x43    
   \              0x24 0x18    
   \              0x0F 0x30    
   \              0x00 0x7E    
   \              0x42 0x42    
   \              0x42 0x7F    
   \              0x02         
   \      0x593   0x00 0x00          DC8 0, 0, 224, 152, 134, 96, 32, 144, 144, 144, 254, 144, 144, 16, 0, 0
   \              0xE0 0x98    
   \              0x86 0x60    
   \              0x20 0x90    
   \              0x90 0x90    
   \              0xFE 0x90    
   \              0x90 0x10    
   \              0x00 0x00    
   \      0x5A3   0x64 0x27          DC8 100, 39, 36, 20, 20, 124, 68, 68, 68, 68, 126, 0, 0, 0, 8, 8, 232
   \              0x24 0x14    
   \              0x14 0x7C    
   \              0x44 0x44    
   \              0x44 0x44    
   \              0x7E 0x00    
   \              0x00 0x00    
   \              0x08 0x08    
   \              0xE8         
   \      0x5B4   0x28 0x28          DC8 40, 40, 254, 42, 40, 40, 232, 40, 8, 0, 0, 64, 32, 19, 10, 6, 255
   \              0xFE 0x2A    
   \              0x28 0x28    
   \              0xE8 0x28    
   \              0x08 0x00    
   \              0x00 0x40    
   \              0x20 0x13    
   \              0x0A 0x06    
   \              0xFF         
   \      0x5C5   0x02 0x0E          DC8 2, 14, 18, 51, 32, 32, 0, 0, 0, 4, 196, 68, 4, 4, 252, 4, 4, 4, 132
   \              0x12 0x33    
   \              0x20 0x20    
   \              0x00 0x00    
   \              0x00 0x04    
   \              0xC4 0x44    
   \              0x04 0x04    
   \              0xFC 0x04    
   \              0x04 0x04    
   \              0x84         
   \      0x5D8   0x04 0x00          DC8 4, 0, 0, 64, 64, 63, 64, 64, 64, 63, 65, 65, 65, 32, 0, 0, 0, 0, 0
   \              0x00 0x40    
   \              0x40 0x3F    
   \              0x40 0x40    
   \              0x40 0x3F    
   \              0x41 0x41    
   \              0x41 0x20    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \      0x5EB   0xF8 0x48          DC8 248, 72, 200, 68, 68, 68, 68, 194, 64, 0, 0, 0, 96, 156, 131, 64
   \              0xC8 0x44    
   \              0x44 0x44    
   \              0x44 0xC2    
   \              0x40 0x00    
   \              0x00 0x00    
   \              0x60 0x9C    
   \              0x83 0x40    
   \      0x5FB   0x21 0x22          DC8 33, 34, 20, 24, 54, 33, 64, 64, 0, 0, 0, 0, 0, 0, 0, 254, 32, 32
   \              0x14 0x18    
   \              0x36 0x21    
   \              0x40 0x40    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0xFE    
   \              0x20 0x20    
   \      0x60D   0x20 0x20          DC8 32, 32, 16, 0, 0, 0, 0, 0, 127, 66, 66, 65, 66, 66, 66, 127, 0, 0
   \              0x10 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x7F 0x42    
   \              0x42 0x41    
   \              0x42 0x42    
   \              0x42 0x7F    
   \              0x00 0x00    
   \      0x61F   0x00 0x00          DC8 0, 0, 32, 152, 144, 80, 48, 18, 20, 16, 48, 112, 208, 8, 0, 0, 65
   \              0x20 0x98    
   \              0x90 0x50    
   \              0x30 0x12    
   \              0x14 0x10    
   \              0x30 0x70    
   \              0xD0 0x08    
   \              0x00 0x00    
   \              0x41         
   \      0x630   0x40 0x40          DC8 64, 64, 66, 66, 126, 66, 66, 66, 65, 64, 64, 0, 0, 0, 254, 128, 128
   \              0x42 0x42    
   \              0x7E 0x42    
   \              0x42 0x42    
   \              0x41 0x40    
   \              0x40 0x00    
   \              0x00 0x00    
   \              0xFE 0x80    
   \              0x80         
   \      0x641   0x40 0x80          DC8 64, 128, 254, 128, 64, 32, 16, 0, 0, 0, 0, 63, 32, 32, 16, 16, 63
   \              0xFE 0x80    
   \              0x40 0x20    
   \              0x10 0x00    
   \              0x00 0x00    
   \              0x00 0x3F    
   \              0x20 0x20    
   \              0x10 0x10    
   \              0x3F         
   \      0x652   0x40 0x40          DC8 64, 64, 64, 88, 32, 0, 0, 32, 16, 8, 246, 88, 88, 88, 88, 88, 248
   \              0x40 0x58    
   \              0x20 0x00    
   \              0x00 0x20    
   \              0x10 0x08    
   \              0xF6 0x58    
   \              0x58 0x58    
   \              0x58 0x58    
   \              0xF8         
   \      0x663   0x04 0x00          DC8 4, 0, 0, 0, 128, 144, 136, 69, 79, 53, 21, 61, 79, 69, 64, 64, 0, 0
   \              0x00 0x00    
   \              0x80 0x90    
   \              0x88 0x45    
   \              0x4F 0x35    
   \              0x15 0x3D    
   \              0x4F 0x45    
   \              0x40 0x40    
   \              0x00 0x00    
   \      0x675   0x80 0x60          DC8 128, 96, 252, 34, 160, 32, 34, 44, 32, 224, 80, 0, 0, 0, 1, 0, 127
   \              0xFC 0x22    
   \              0xA0 0x20    
   \              0x22 0x2C    
   \              0x20 0xE0    
   \              0x50 0x00    
   \              0x00 0x00    
   \              0x01 0x00    
   \              0x7F         
   \      0x686   0x40 0x40          DC8 64, 64, 67, 76, 32, 94, 65, 64, 32, 0, 0, 0, 240, 32, 32, 32, 254
   \              0x43 0x4C    
   \              0x20 0x5E    
   \              0x41 0x40    
   \              0x20 0x00    
   \              0x00 0x00    
   \              0xF0 0x20    
   \              0x20 0x20    
   \              0xFE         
   \      0x697   0x22 0x20          DC8 34, 32, 32, 32, 240, 0, 0, 0, 0, 3, 2, 2, 2, 255, 2, 2, 2, 2, 3, 0
   \              0x20 0x20    
   \              0xF0 0x00    
   \              0x00 0x00    
   \              0x00 0x03    
   \              0x02 0x02    
   \              0x02 0xFF    
   \              0x02 0x02    
   \              0x02 0x02    
   \              0x03 0x00    
   \      0x6AB   0x00 0x00          DC8 0, 0, 0, 32, 32, 34, 44, 224, 16, 40, 38, 32, 16, 0, 0, 0, 128, 66
   \              0x00 0x20    
   \              0x20 0x22    
   \              0x2C 0xE0    
   \              0x10 0x28    
   \              0x26 0x20    
   \              0x10 0x00    
   \              0x00 0x00    
   \              0x80 0x42    
   \      0x6BD   0x22 0x12          DC8 34, 18, 10, 7, 2, 14, 18, 34, 65, 65, 0, 0, 0, 248, 66, 76, 64, 196
   \              0x0A 0x07    
   \              0x02 0x0E    
   \              0x12 0x22    
   \              0x41 0x41    
   \              0x00 0x00    
   \              0x00 0xF8    
   \              0x42 0x4C    
   \              0x40 0xC4    
   \      0x6CF   0xFC 0x44          DC8 252, 68, 68, 68, 252, 4, 0, 0, 0, 127, 8, 4, 2, 33, 63, 0, 0, 64
   \              0x44 0x44    
   \              0xFC 0x04    
   \              0x00 0x00    
   \              0x00 0x7F    
   \              0x08 0x04    
   \              0x02 0x21    
   \              0x3F 0x00    
   \              0x00 0x40    
   \      0x6E1   0x7F 0x00          DC8 127, 0, 0, 0, 16, 16, 210, 44, 144, 8, 8, 248, 8, 8, 8, 248, 0, 0
   \              0x00 0x00    
   \              0x10 0x10    
   \              0xD2 0x2C    
   \              0x90 0x08    
   \              0x08 0xF8    
   \              0x08 0x08    
   \              0x08 0xF8    
   \              0x00 0x00    
   \      0x6F3   0x02 0x01          DC8 2, 1, 127, 1, 66, 48, 14, 1, 0, 64, 126, 1, 0, 0, 128, 64, 248, 6
   \              0x7F 0x01    
   \              0x42 0x30    
   \              0x0E 0x01    
   \              0x00 0x40    
   \              0x7E 0x01    
   \              0x00 0x00    
   \              0x80 0x40    
   \              0xF8 0x06    
   \      0x705   0x00 0x00          DC8 0, 0, 254, 0, 128, 96, 16, 0, 0, 0, 1, 0, 127, 8, 4, 4, 62, 65, 64
   \              0xFE 0x00    
   \              0x80 0x60    
   \              0x10 0x00    
   \              0x00 0x00    
   \              0x01 0x00    
   \              0x7F 0x08    
   \              0x04 0x04    
   \              0x3E 0x41    
   \              0x40         
   \      0x718   0x40 0x40          DC8 64, 64, 120, 0, 0, 64, 66, 204, 128, 64, 188, 132, 132, 132, 188
   \              0x78 0x00    
   \              0x00 0x40    
   \              0x42 0xCC    
   \              0x80 0x40    
   \              0xBC 0x84    
   \              0x84 0x84    
   \              0xBC         
   \      0x727   0xC0 0x20          DC8 192, 32, 0, 0, 0, 0, 191, 152, 72, 65, 38, 24, 60, 35, 64, 64, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0xBF 0x98    
   \              0x48 0x41    
   \              0x26 0x18    
   \              0x3C 0x23    
   \              0x40 0x40    
   \              0x00 0x00    
   \      0x739   0x00 0x5E          DC8 0, 94, 212, 84, 92, 244, 84, 92, 84, 212, 62, 0, 0, 64, 64, 64, 127
   \              0xD4 0x54    
   \              0x5C 0xF4    
   \              0x54 0x5C    
   \              0x54 0xD4    
   \              0x3E 0x00    
   \              0x00 0x40    
   \              0x40 0x40    
   \              0x7F         
   \      0x74A   0x6B 0x6B          DC8 107, 107, 106, 107, 107, 107, 127, 64, 64, 0, 0, 0, 248, 44, 80
   \              0x6A 0x6B    
   \              0x6B 0x6B    
   \              0x7F 0x40    
   \              0x40 0x00    
   \              0x00 0x00    
   \              0xF8 0x2C    
   \              0x50         
   \      0x759   0xF8 0x20          DC8 248, 32, 24, 200, 14, 8, 152, 8, 0, 0, 121, 7, 3, 69, 127, 0, 0
   \              0x18 0xC8    
   \              0x0E 0x08    
   \              0x98 0x08    
   \              0x00 0x00    
   \              0x79 0x07    
   \              0x03 0x45    
   \              0x7F 0x00    
   \              0x00         
   \      0x76A   0x7F 0x42          DC8 127, 66, 65, 64, 112, 0, 0, 0, 160, 254, 160, 0, 248, 8, 8, 8, 252
   \              0x41 0x40    
   \              0x70 0x00    
   \              0x00 0x00    
   \              0xA0 0xFE    
   \              0xA0 0x00    
   \              0xF8 0x08    
   \              0x08 0x08    
   \              0xFC         
   \      0x77B   0x00 0x00          DC8 0, 0, 0, 24, 6, 1, 127, 64, 33, 31, 0, 0, 0, 127, 64, 112, 0, 0, 4
   \              0x00 0x18    
   \              0x06 0x01    
   \              0x7F 0x40    
   \              0x21 0x1F    
   \              0x00 0x00    
   \              0x00 0x7F    
   \              0x40 0x70    
   \              0x00 0x00    
   \              0x04         
   \      0x78E   0x84 0x74          DC8 132, 116, 76, 68, 228, 4, 252, 4, 132, 68, 4, 0, 0, 66, 33, 17, 10
   \              0x4C 0x44    
   \              0xE4 0x04    
   \              0xFC 0x04    
   \              0x84 0x44    
   \              0x04 0x00    
   \              0x00 0x42    
   \              0x21 0x11    
   \              0x0A         
   \      0x79F   0x07 0x00          DC8 7, 0, 0, 63, 65, 64, 64, 120, 0, 0, 0, 252, 4, 20, 36, 68, 132, 196
   \              0x00 0x3F    
   \              0x41 0x40    
   \              0x40 0x78    
   \              0x00 0x00    
   \              0x00 0xFC    
   \              0x04 0x14    
   \              0x24 0x44    
   \              0x84 0xC4    
   \      0x7B1   0x34 0x14          DC8 52, 20, 6, 4, 0, 0, 0, 127, 64, 72, 68, 66, 65, 67, 70, 72, 64, 64
   \              0x06 0x04    
   \              0x00 0x00    
   \              0x00 0x7F    
   \              0x40 0x48    
   \              0x44 0x42    
   \              0x41 0x43    
   \              0x46 0x48    
   \              0x40 0x40    
   \      0x7C3   0x00 0x00          DC8 0, 0, 16, 208, 80, 82, 204, 16, 16, 204, 18, 208, 48, 8, 0, 0, 0
   \              0x10 0xD0    
   \              0x50 0x52    
   \              0xCC 0x10    
   \              0x10 0xCC    
   \              0x12 0xD0    
   \              0x30 0x08    
   \              0x00 0x00    
   \              0x00         
   \      0x7D4   0x7F 0x09          DC8 127, 9, 9, 127, 0, 0, 31, 64, 127, 0, 0, 0, 0, 252, 72, 248, 4, 240
   \              0x09 0x7F    
   \              0x00 0x00    
   \              0x1F 0x40    
   \              0x7F 0x00    
   \              0x00 0x00    
   \              0x00 0xFC    
   \              0x48 0xF8    
   \              0x04 0xF0    
   \      0x7E6   0x28 0x66          DC8 40, 102, 40, 216, 44, 96, 144, 0, 0, 63, 18, 63, 96, 31, 1, 115, 91
   \              0x28 0xD8    
   \              0x2C 0x60    
   \              0x90 0x00    
   \              0x00 0x3F    
   \              0x12 0x3F    
   \              0x60 0x1F    
   \              0x01 0x73    
   \              0x5B         
   \      0x7F7   0x5A 0x5B          DC8 90, 91, 119, 0, 0, 0, 56, 68, 196, 68, 124, 0, 252, 68, 68, 68, 228
   \              0x77 0x00    
   \              0x00 0x00    
   \              0x38 0x44    
   \              0xC4 0x44    
   \              0x7C 0x00    
   \              0xFC 0x44    
   \              0x44 0x44    
   \              0xE4         
   \      0x808   0x04 0x00          DC8 4, 0, 0, 63, 34, 31, 18, 1, 0, 127, 68, 68, 68, 71, 32, 0, 0, 0, 8
   \              0x00 0x3F    
   \              0x22 0x1F    
   \              0x12 0x01    
   \              0x00 0x7F    
   \              0x44 0x44    
   \              0x44 0x47    
   \              0x20 0x00    
   \              0x00 0x00    
   \              0x08         
   \      0x81B   0xF8 0x88          DC8 248, 136, 88, 42, 44, 88, 8, 248, 8, 4, 0, 0, 0, 126, 3, 26, 23, 19
   \              0x58 0x2A    
   \              0x2C 0x58    
   \              0x08 0xF8    
   \              0x08 0x04    
   \              0x00 0x00    
   \              0x00 0x7E    
   \              0x03 0x1A    
   \              0x17 0x13    
   \      0x82D   0x13 0x0B          DC8 19, 11, 51, 66, 126, 0, 0, 0, 64, 68, 244, 76, 196, 68, 228, 20
   \              0x33 0x42    
   \              0x7E 0x00    
   \              0x00 0x00    
   \              0x40 0x44    
   \              0xF4 0x4C    
   \              0xC4 0x44    
   \              0xE4 0x14    
   \      0x83D   0xEC 0x24          DC8 236, 36, 228, 2, 0, 0, 0, 0, 127, 0, 128, 128, 79, 32, 31, 16, 31
   \              0xE4 0x02    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x7F 0x00    
   \              0x80 0x80    
   \              0x4F 0x20    
   \              0x1F 0x10    
   \              0x1F         
   \      0x84E   0x60 0x00          DC8 96, 0, 0, 64, 66, 204, 128, 64, 188, 132, 132, 132, 188, 192, 32, 0
   \              0x00 0x40    
   \              0x42 0xCC    
   \              0x80 0x40    
   \              0xBC 0x84    
   \              0x84 0x84    
   \              0xBC 0xC0    
   \              0x20 0x00    
   \      0x85E   0x00 0x00          DC8 0, 0, 0, 191, 152, 72, 65, 38, 24, 60, 35, 64, 64, 0, 0, 0, 160
   \              0x00 0xBF    
   \              0x98 0x48    
   \              0x41 0x26    
   \              0x18 0x3C    
   \              0x23 0x40    
   \              0x40 0x00    
   \              0x00 0x00    
   \              0xA0         
   \      0x86F   0xFE 0xA0          DC8 254, 160, 96, 160, 152, 134, 136, 80, 32, 64, 0, 0, 6, 1, 127, 64
   \              0x60 0xA0    
   \              0x98 0x86    
   \              0x88 0x50    
   \              0x20 0x40    
   \              0x00 0x00    
   \              0x06 0x01    
   \              0x7F 0x40    
   \      0x87F   0x40 0x5C          DC8 64, 92, 64, 78, 96, 94, 65, 64, 0, 0, 32, 4, 192, 252, 4, 244, 4
   \              0x40 0x4E    
   \              0x60 0x5E    
   \              0x41 0x40    
   \              0x00 0x00    
   \              0x20 0x04    
   \              0xC0 0xFC    
   \              0x04 0xF4    
   \              0x04         
   \      0x890   0xFC 0x00          DC8 252, 0, 240, 252, 0, 0, 0, 0, 127, 64, 39, 24, 7, 16, 103, 0, 15
   \              0xF0 0xFC    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x7F 0x40    
   \              0x27 0x18    
   \              0x07 0x10    
   \              0x67 0x00    
   \              0x0F         
   \      0x8A1   0x7F 0x00          DC8 127, 0, 0, 0, 192, 0, 254, 32, 24, 8, 8, 8, 248, 8, 8, 4, 0, 0, 96
   \              0x00 0x00    
   \              0xC0 0x00    
   \              0xFE 0x20    
   \              0x18 0x08    
   \              0x08 0x08    
   \              0xF8 0x08    
   \              0x08 0x04    
   \              0x00 0x00    
   \              0x60         
   \      0x8B4   0x18 0x07          DC8 24, 7, 8, 16, 0, 0, 64, 127, 0, 0, 0, 0, 0, 0, 254, 128, 128, 64
   \              0x08 0x10    
   \              0x00 0x00    
   \              0x40 0x7F    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0xFE 0x80    
   \              0x80 0x40    
   \      0x8C6   0x80 0xFE          DC8 128, 254, 128, 64, 32, 16, 0, 0, 0, 0, 63, 32, 32, 16, 16, 63, 64
   \              0x80 0x40    
   \              0x20 0x10    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x3F 0x20    
   \              0x20 0x10    
   \              0x10 0x3F    
   \              0x40         
   \      0x8D7   0x40 0x40          DC8 64, 64, 88, 32, 0, 0, 128, 248, 6, 136, 120, 72, 200, 68, 224, 16
   \              0x58 0x20    
   \              0x00 0x00    
   \              0x80 0xF8    
   \              0x06 0x88    
   \              0x78 0x48    
   \              0xC8 0x44    
   \              0xE0 0x10    
   \      0x8E7   0xFC 0x00          DC8 252, 0, 0, 0, 0, 127, 64, 33, 17, 14, 3, 0, 7, 64, 127, 0, 0, 0, 8
   \              0x00 0x00    
   \              0x00 0x7F    
   \              0x40 0x21    
   \              0x11 0x0E    
   \              0x03 0x00    
   \              0x07 0x40    
   \              0x7F 0x00    
   \              0x00 0x00    
   \              0x08         
   \      0x8FA   0xC4 0x24          DC8 196, 36, 184, 168, 190, 184, 192, 248, 38, 224, 16, 0, 0, 1, 127, 0
   \              0xB8 0xA8    
   \              0xBE 0xB8    
   \              0xC0 0xF8    
   \              0x26 0xE0    
   \              0x10 0x00    
   \              0x00 0x01    
   \              0x7F 0x00    
   \      0x90A   0x30 0x0E          DC8 48, 14, 130, 94, 73, 35, 28, 39, 64, 0, 0, 0, 192, 160, 152, 132
   \              0x82 0x5E    
   \              0x49 0x23    
   \              0x1C 0x27    
   \              0x40 0x00    
   \              0x00 0x00    
   \              0xC0 0xA0    
   \              0x98 0x84    
   \      0x91A   0x80 0x80          DC8 128, 128, 142, 176, 64, 128, 128, 0, 0, 129, 64, 32, 16, 15, 0, 64
   \              0x8E 0xB0    
   \              0x40 0x80    
   \              0x80 0x00    
   \              0x00 0x81    
   \              0x40 0x20    
   \              0x10 0x0F    
   \              0x00 0x40    
   \      0x92A   0x40 0x3F          DC8 64, 63, 1, 0, 0, 0, 0, 0, 72, 252, 68, 32, 64, 248, 8, 8, 8, 248, 0
   \              0x01 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x48 0xFC    
   \              0x44 0x20    
   \              0x40 0xF8    
   \              0x08 0x08    
   \              0x08 0xF8    
   \              0x00         
   \      0x93D   0x00 0x00          DC8 0, 0, 4, 3, 127, 1, 67, 32, 17, 13, 1, 5, 25, 96, 0, 0, 0, 0, 82
   \              0x04 0x03    
   \              0x7F 0x01    
   \              0x43 0x20    
   \              0x11 0x0D    
   \              0x01 0x05    
   \              0x19 0x60    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x52         
   \      0x950   0x4C 0xD0          DC8 76, 208, 112, 80, 72, 86, 80, 8, 0, 0, 0, 33, 17, 73, 71, 73, 73
   \              0x70 0x50    
   \              0x48 0x56    
   \              0x50 0x08    
   \              0x00 0x00    
   \              0x00 0x21    
   \              0x11 0x49    
   \              0x47 0x49    
   \              0x49         
   \      0x961   0x79 0x49          DC8 121, 73, 73, 69, 65, 65, 0, 0, 8, 232, 8, 222, 42, 136, 104, 94
   \              0x49 0x45    
   \              0x41 0x41    
   \              0x00 0x00    
   \              0x08 0xE8    
   \              0x08 0xDE    
   \              0x2A 0x88    
   \              0x68 0x5E    
   \      0x971   0xC8 0x48          DC8 200, 72, 40, 0, 0, 0, 64, 67, 124, 71, 124, 69, 124, 68, 68, 127
   \              0x28 0x00    
   \              0x00 0x00    
   \              0x40 0x43    
   \              0x7C 0x47    
   \              0x7C 0x45    
   \              0x7C 0x44    
   \              0x44 0x7F    
   \      0x981   0x40 0x40          DC8 64, 64, 0, 0, 0, 68, 124, 68, 68, 68, 196, 252, 68, 68, 70, 68, 0
   \              0x00 0x00    
   \              0x00 0x44    
   \              0x7C 0x44    
   \              0x44 0x44    
   \              0xC4 0xFC    
   \              0x44 0x44    
   \              0x46 0x44    
   \              0x00         
   \      0x992   0x00 0x20          DC8 0, 32, 32, 16, 8, 4, 67, 64, 63, 0, 0, 0, 0, 0, 0, 0, 132, 132, 132
   \              0x20 0x10    
   \              0x08 0x04    
   \              0x43 0x40    
   \              0x3F 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x84 0x84    
   \              0x84         
   \      0x9A5   0x84 0xFC          DC8 132, 252, 132, 132, 132, 132, 68, 64, 0, 0, 128, 64, 32, 16, 14, 1
   \              0x84 0x84    
   \              0x84 0x84    
   \              0x44 0x40    
   \              0x00 0x00    
   \              0x80 0x40    
   \              0x20 0x10    
   \              0x0E 0x01    
   \      0x9B5   0x3F 0x40          DC8 63, 64, 64, 64, 64, 120, 0, 0, 96, 88, 198, 96, 48, 32, 44, 242, 36
   \              0x40 0x40    
   \              0x40 0x78    
   \              0x00 0x00    
   \              0x60 0x58    
   \              0xC6 0x60    
   \              0x30 0x20    
   \              0x2C 0xF2    
   \              0x24         
   \      0x9C6   0x2C 0x90          DC8 44, 144, 128, 0, 0, 36, 39, 36, 20, 67, 65, 33, 31, 25, 37, 66, 112
   \              0x80 0x00    
   \              0x00 0x24    
   \              0x27 0x24    
   \              0x14 0x43    
   \              0x41 0x21    
   \              0x1F 0x19    
   \              0x25 0x42    
   \              0x70         
   \      0x9D7   0x00 0x00          DC8 0, 0, 0, 0, 252, 148, 148, 148, 148, 148, 148, 252, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0xFC 0x94    
   \              0x94 0x94    
   \              0x94 0x94    
   \              0x94 0xFC    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \      0x9E8   0x24 0x38          DC8 36, 56, 32, 63, 32, 32, 63, 48, 45, 34, 0, 0, 0, 64, 64, 68, 68, 68
   \              0x20 0x3F    
   \              0x20 0x20    
   \              0x3F 0x30    
   \              0x2D 0x22    
   \              0x00 0x00    
   \              0x00 0x40    
   \              0x40 0x44    
   \              0x44 0x44    
   \      0x9FA   0xC4 0x44          DC8 196, 68, 68, 68, 68, 68, 64, 0, 0, 16, 8, 6, 3, 64, 127, 0, 0, 2, 4
   \              0x44 0x44    
   \              0x44 0x44    
   \              0x40 0x00    
   \              0x00 0x10    
   \              0x08 0x06    
   \              0x03 0x40    
   \              0x7F 0x00    
   \              0x00 0x02    
   \              0x04         
   \      0xA0D   0x18 0x10          DC8 24, 16, 0, 0, 8, 72, 136, 136, 120, 8, 56, 200, 8, 136, 120, 0, 0
   \              0x00 0x00    
   \              0x08 0x48    
   \              0x88 0x88    
   \              0x78 0x08    
   \              0x38 0xC8    
   \              0x08 0x88    
   \              0x78 0x00    
   \              0x00         
   \      0xA1E   0x00 0x10          DC8 0, 16, 8, 4, 3, 6, 88, 32, 17, 14, 27, 32, 32, 0
   \              0x08 0x04    
   \              0x03 0x06    
   \              0x58 0x20    
   \              0x11 0x0E    
   \              0x1B 0x20    
   \              0x20 0x00    
    151          0x00,0x00,0x40,0x40,0x40,0xFE,0x00,0x00,0xFE,0x80,0x40,0x20,0x20,0x00,
    152          0x00,0x30,0x10,0x10,0x08,0x7F,0x00,0x00,0x7F,0x40,0x40,0x40,0x78,0x00,//北0
    153          
    154          0x00,0x08,0x08,0xE8,0x48,0x48,0x4A,0x4C,0x48,0x48,0xE8,0x08,0x08,0x00,
    155          0x00,0x40,0x20,0x13,0x0A,0x42,0xFE,0x02,0x02,0x0A,0x13,0x60,0x00,0x00,//京1
    156          
    157          0x00,0x00,0x20,0x20,0x20,0xFE,0x22,0x20,0xE0,0x24,0xA8,0xA0,0x10,0x00,
    158          0x00,0x40,0x20,0x10,0x0C,0x23,0x10,0x08,0x7F,0x42,0x41,0x40,0x78,0x00,//龙2
    159          
    160          0x00,0x00,0x00,0xF8,0x88,0x88,0x88,0x88,0x84,0x84,0x86,0xC0,0x00,0x00,
    161          0x00,0x00,0x20,0x3F,0x20,0x20,0x20,0x20,0x3F,0x20,0x20,0x20,0x20,0x00,//丘3
    162          
    163          0x00,0x00,0xFC,0x44,0x44,0xC4,0x42,0x40,0xFC,0x04,0xC4,0x34,0x0C,0x00,
    164          0x00,0x30,0x1F,0x10,0x10,0x0F,0x10,0x10,0x7F,0x00,0x10,0x11,0x1E,0x00,//邱4
    165          
    166          0x00,0x00,0x48,0xFC,0x44,0x42,0x00,0x88,0x10,0x00,0xFE,0x02,0x00,0x00,
    167          0x00,0x0C,0x02,0x7F,0x01,0x03,0x08,0x08,0x05,0x04,0xFF,0x04,0x02,0x00,//科5
    168          
    169          0x00,0x10,0x10,0xFE,0x10,0x90,0x90,0x90,0x90,0xFE,0x90,0x90,0x10,0x00,
    170          0x00,0x02,0x41,0x7F,0x81,0x80,0x40,0x27,0x28,0x18,0x26,0x41,0x40,0x00,//技6
    171          
    172          0x00,0x84,0x84,0x84,0xFC,0x84,0x84,0x84,0x84,0xFC,0x84,0x86,0x80,0x00,
    173          0x00,0x40,0x20,0x10,0x0F,0x00,0x00,0x00,0x00,0x7F,0x00,0x00,0x00,0x00,//开7
    174          
    175          0x00,0x00,0x18,0x24,0xA0,0x7C,0x22,0x20,0x22,0x24,0xAC,0x20,0x00,0x00,
    176          0x00,0x40,0x30,0x8C,0x83,0x41,0x27,0x19,0x19,0x27,0x61,0x40,0x40,0x00,//发8
    177          
    178          0x00,0x00,0xE0,0xFE,0x90,0x20,0xF8,0xC8,0x48,0x44,0xC4,0x62,0x00,0x00,
    179          0x00,0x06,0x01,0x7F,0x41,0xB8,0x47,0x21,0x16,0x1C,0x23,0x60,0x40,0x00,//板9
    180          
    181          0x00,0x30,0x2C,0xAA,0x78,0xA8,0xA4,0x20,0xFC,0x88,0x88,0x78,0x00,0x00,
    182          0x00,0x02,0x02,0x01,0x7E,0x52,0x53,0x53,0x52,0x52,0x7E,0x00,0x00,0x00,//智10
    183          
    184          0x00,0x70,0xA8,0xA4,0xA2,0xE8,0x30,0x00,0x7E,0x90,0x88,0xB8,0x40,0x00,
    185          0x00,0x00,0x7F,0x0A,0x4A,0x7F,0x00,0x00,0x7E,0x48,0x44,0x42,0x70,0x00,//能11
    186          
    187          0x00,0x00,0x08,0xC8,0x38,0x0C,0x0A,0xE8,0x08,0x08,0x88,0x08,0x00,0x00,
    188          0x00,0x08,0x08,0x09,0x09,0x09,0x09,0x7F,0x09,0x09,0x08,0x08,0x08,0x00,//车12
    189          
    190          0x00,0x10,0x10,0xD0,0x52,0x4C,0x70,0x50,0x4C,0x52,0xD0,0x10,0x00,0x00,
    191          0x00,0x00,0x00,0x7F,0x4A,0x4A,0x4A,0x4A,0x4A,0x4A,0x7F,0x00,0x00,0x00,//首13
    192          
    193          0x00,0x00,0x84,0x48,0xC0,0xA0,0x9C,0x90,0xFE,0x90,0x90,0x90,0x80,0x00,
    194          0x00,0x20,0x1F,0x10,0x20,0x50,0x4E,0x41,0x40,0x5F,0x50,0x58,0x50,0x00,//选14
    195          
    196          0x00,0x40,0x84,0xE0,0x10,0xC8,0x38,0x98,0xEE,0x58,0x48,0xC8,0x08,0x00,
    197          0x00,0x08,0x7E,0x01,0x02,0xFF,0x81,0x41,0x26,0x1B,0x3E,0x61,0x40,0x00,//液15
    198          
    199          0x00,0x00,0x00,0x80,0x7C,0x54,0x54,0x54,0x54,0x54,0x7E,0x00,0x00,0x00,
    200          0x00,0x00,0x7F,0x49,0x49,0x7F,0x00,0x00,0x7F,0x49,0x49,0x3F,0x01,0x00,//晶16
    201          
    202          0x00,0x20,0x58,0x48,0x48,0xC8,0x4A,0x4C,0x48,0xC8,0x28,0x18,0x00,0x00,
    203          0x00,0x40,0x40,0x4B,0x4B,0x4A,0x7E,0x4A,0x4A,0x4A,0x4B,0x40,0x40,0x00,//室17
    204          
    205          0x00,0x20,0x04,0xF8,0x10,0xFC,0x94,0x94,0x94,0x94,0xFC,0x00,0x00,0x00,
    206          0x00,0x00,0x7E,0x41,0x7E,0x42,0x7E,0x42,0x42,0x7E,0x42,0x7E,0x40,0x00,//温18
    207          
    208          0x00,0x00,0xF8,0x48,0x48,0xE8,0x58,0x46,0x48,0xF8,0x48,0x28,0x00,0x00,
    209          0x40,0x38,0x87,0x80,0x80,0x44,0x4D,0x35,0x35,0x4D,0x42,0x40,0x40,0x00,//度19
    210          
    211          0x00,0x00,0x20,0xFE,0x90,0x20,0x18,0x90,0x6A,0x14,0x10,0x30,0x18,0x00,
    212          0x00,0x02,0x41,0x7F,0x80,0x81,0x47,0x49,0x31,0x19,0x17,0x21,0x40,0x00,//按20
    213          
    214          0x00,0x70,0xCE,0x50,0x48,0xE8,0x98,0xA8,0xA8,0xFE,0xA8,0xF8,0x20,0x00,
    215          0x00,0x02,0x7F,0xB2,0x42,0x24,0x1E,0x29,0x4A,0x7F,0x4A,0x49,0x44,0x00,//键21
    216          
    217          0x00,0x00,0x04,0xF8,0x10,0xC0,0x30,0x2E,0xE0,0x20,0x20,0x20,0x10,0x00,
    218          0x00,0x00,0x3F,0x80,0x41,0x20,0x10,0x0E,0x01,0x0E,0x10,0x60,0x40,0x00,//次22
    219          
    220          0x00,0x00,0xF0,0x90,0x90,0x90,0xFE,0x90,0x90,0x90,0xF0,0x10,0x00,0x00,
    221          0x00,0x00,0x0F,0x04,0x04,0x04,0x7F,0x44,0x44,0x44,0x4F,0x50,0x60,0x00,//电23
    222          
    223          0x00,0x00,0xFC,0x04,0x04,0x04,0x04,0xFC,0x04,0x04,0x04,0x86,0x04,0x00,
    224          0x00,0x20,0x5F,0x40,0x40,0x41,0x41,0x3F,0x41,0x43,0x4D,0x40,0x20,0x00,//压24
    225          
    226          0x00,0x00,0xF0,0x44,0xC4,0xC0,0x24,0xDC,0x34,0xB4,0x44,0xFC,0x04,0x00,
    227          0x00,0x00,0x7F,0x13,0x14,0x2F,0x19,0x0B,0x0E,0x11,0x7C,0x7F,0x00,0x00,//阈25
    228          
    229          0x00,0x80,0xF0,0x0C,0x08,0xC8,0x48,0x28,0x5E,0x48,0xE8,0x08,0x08,0x00,
    230          0x00,0x00,0x7F,0x00,0x00,0x6F,0x95,0x95,0x95,0x95,0x7F,0x80,0x40,0x00,//值26
    231          
    232          0x00,0x00,0x00,0x00,0x00,0x00,0xFE,0x40,0x40,0x40,0x40,0x40,0x00,0x00,
    233          0x00,0x40,0x40,0x40,0x40,0x40,0x3F,0x40,0x40,0x40,0x40,0x40,0x20,0x00,//上27
    234          
    235          0x00,0x00,0x08,0x08,0x08,0x08,0xF8,0x48,0x88,0x88,0x08,0x04,0x04,0x00,
    236          0x00,0x00,0x00,0x00,0x00,0x00,0x7F,0x00,0x00,0x00,0x01,0x00,0x00,0x00,//下28
    237          
    238          0x00,0x00,0x10,0x10,0xD0,0x3E,0x10,0x10,0x10,0x10,0x10,0x08,0x00,0x00,
    239          0x00,0x10,0x08,0x46,0x41,0x41,0x41,0x7F,0x41,0x41,0x41,0x60,0x40,0x00,//左29
    240          
    241          0x00,0x10,0x10,0x10,0x90,0x70,0x0E,0x10,0x10,0x10,0x10,0x10,0x00,0x00,
    242          0x00,0x08,0x04,0x02,0x3F,0x41,0x41,0x41,0x41,0x41,0x7F,0x01,0x00,0x00,//右30
    243          
    244          0x00,0x84,0x88,0x80,0x08,0xE8,0x28,0x28,0xFE,0x28,0x28,0xE8,0x08,0x00,
    245          0x00,0x20,0x10,0x1F,0x30,0x49,0x45,0x43,0x7F,0x45,0x45,0x49,0x40,0x00,//速31
    246          
    247          0x00,0x00,0xF8,0x48,0x48,0xE8,0x58,0x46,0x48,0xF8,0x48,0x28,0x00,0x00,
    248          0x40,0x38,0x87,0x80,0x80,0x44,0x4D,0x35,0x35,0x4D,0x42,0x40,0x40,0x00,//度32
    249          
    250          0x00,0x10,0x10,0x10,0x10,0x10,0xF2,0x9C,0x90,0x90,0x90,0x10,0x18,0x00,
    251          0x00,0x00,0x40,0x30,0x08,0x07,0x40,0x40,0x40,0x78,0x07,0x00,0x00,0x00,//方33
    252          
    253          0x00,0x00,0xF0,0x10,0x90,0x8C,0x92,0x90,0x90,0x10,0x10,0xF8,0x00,0x00,
    254          0x00,0x00,0x7F,0x00,0x07,0x08,0x08,0x08,0x0F,0x00,0x40,0x7F,0x00,0x00,//向34
    255          
    256          0x00,0x10,0x10,0xFE,0x90,0x30,0x90,0x50,0x0C,0x14,0x50,0xB0,0x18,0x00,
    257          0x00,0x42,0x41,0x7F,0x00,0x01,0x42,0x42,0x3E,0x42,0x42,0x43,0x20,0x00,//控35
    258          
    259          0x00,0x00,0x40,0xF0,0x2C,0x2A,0x28,0xF8,0x28,0x20,0x20,0xE0,0x00,0x00,
    260          0x00,0x40,0x20,0x1F,0x05,0x05,0x05,0x7F,0x05,0x45,0x45,0x7F,0x00,0x00,//角36
    261          
    262          0x00,0x20,0x20,0x20,0x20,0x20,0xFE,0xA2,0x20,0x20,0x20,0x20,0x20,0x00,
    263          0x00,0x80,0x40,0x20,0x10,0x0C,0x03,0x03,0x04,0x08,0x30,0x60,0x40,0x00,//大37
    264          
    265          0x00,0x00,0x00,0x80,0x60,0x00,0x00,0xFE,0x00,0x40,0x80,0x00,0x00,0x00,
    266          0x00,0x04,0x02,0x01,0x00,0x40,0x40,0x3F,0x00,0x00,0x00,0x03,0x06,0x00,//小38
    267          
    268          0x00,0x08,0x08,0x08,0xE8,0xA8,0xA6,0xA8,0xA8,0xF8,0x08,0x08,0x04,0x00,
    269          0x00,0x00,0x7F,0x02,0x2E,0x12,0x12,0x12,0x3E,0x42,0x42,0x7F,0x00,0x00,//高39
    270          
    271          0x00,0xC0,0xF0,0x0C,0x00,0xF8,0x88,0x88,0xF8,0x84,0x84,0x84,0x80,0x00,
    272          0x00,0x00,0x7F,0x00,0x00,0x3F,0x20,0x30,0x51,0x0E,0x10,0x20,0x70,0x00,//低40
    273          
    274          0x40,0x40,0xC4,0x00,0x20,0x68,0xA8,0xA8,0x7E,0xA8,0x28,0x60,0x20,0x00,
    275          0x00,0x00,0x3F,0x20,0x98,0x89,0x4A,0x29,0x18,0x27,0x28,0x48,0x00,0x00,//读41
    276          
    277          0x00,0x00,0x0E,0x8C,0x74,0x44,0x44,0x44,0x44,0x44,0x34,0x0C,0x04,0x00,
    278          0x00,0x08,0x08,0x09,0x09,0x09,0x09,0x09,0x09,0x49,0x71,0x0F,0x00,0x00,//写42
    279          
    280          0x00,0x00,0x84,0xC8,0x00,0x00,0xFC,0xA4,0xA4,0xA4,0xFC,0x04,0x00,0x00,
    281          0x00,0x20,0x10,0x1F,0x20,0x20,0x5F,0x4A,0x42,0x42,0x46,0x49,0x00,0x00,//退43
    282          
    283          0x00,0x00,0xF0,0x80,0x80,0x80,0xFC,0x80,0x80,0x80,0xF0,0x08,0x00,0x00,
    284          0x00,0x00,0x7E,0x40,0x40,0x40,0x3F,0x40,0x40,0x40,0x43,0x7C,0x00,0x00,//出44
    285          
    286          0x00,0x00,0xFC,0xF4,0x0C,0x00,0xFC,0x24,0x24,0x24,0x24,0xFC,0x00,0x00,
    287          0x00,0x00,0x7F,0x08,0x0F,0x00,0x7F,0x21,0x07,0x09,0x35,0x63,0x02,0x00,//限45
    288          
    289          0x00,0x60,0x58,0x50,0xFE,0x50,0x50,0x50,0x00,0xF8,0x00,0xFC,0x02,0x00,
    290          0x00,0x1E,0x02,0x02,0x7F,0x12,0x3E,0x01,0x00,0x0F,0x40,0x7F,0x00,0x00,//制46
    291          
    292          0x00,0x10,0x60,0x00,0xFE,0x40,0x40,0x40,0xFE,0xC0,0x44,0x38,0x00,0x00,
    293          0x00,0x0C,0x02,0x02,0x7F,0x40,0x30,0x0E,0x01,0x07,0x18,0x20,0x40,0x00,//状47
    294          
    295          0x00,0x10,0x10,0x10,0x90,0xF0,0x1E,0x30,0x50,0x90,0x10,0x08,0x00,0x00,
    296          0x00,0x22,0x1A,0x01,0x7C,0x40,0x45,0x4A,0x40,0x70,0x01,0x1B,0x00,0x00,//态48
    297          
    298          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    299          0x00,0x00,0x33,0x32,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,//：49
    300          
    301          0x00,0x00,0xF0,0x2E,0xA0,0x70,0x40,0x70,0x4C,0x42,0x40,0x50,0xE0,0x00,
    302          0x00,0x43,0x24,0x18,0x0F,0x30,0x00,0x7E,0x42,0x42,0x42,0x7F,0x02,0x00,//始50
    303          
    304          0x00,0xE0,0x98,0x86,0x60,0x20,0x90,0x90,0x90,0xFE,0x90,0x90,0x10,0x00,
    305          0x00,0x64,0x27,0x24,0x14,0x14,0x7C,0x44,0x44,0x44,0x44,0x7E,0x00,0x00,//结51
    306          
    307          0x00,0x08,0x08,0xE8,0x28,0x28,0xFE,0x2A,0x28,0x28,0xE8,0x28,0x08,0x00,
    308          0x00,0x40,0x20,0x13,0x0A,0x06,0xFF,0x02,0x0E,0x12,0x33,0x20,0x20,0x00,//束52
    309          
    310          0x00,0x00,0x04,0xC4,0x44,0x04,0x04,0xFC,0x04,0x04,0x04,0x84,0x04,0x00,
    311          0x00,0x40,0x40,0x3F,0x40,0x40,0x40,0x3F,0x41,0x41,0x41,0x20,0x00,0x00,//正53
    312          
    313          0x00,0x00,0x00,0xF8,0x48,0xC8,0x44,0x44,0x44,0x44,0xC2,0x40,0x00,0x00,
    314          0x00,0x60,0x9C,0x83,0x40,0x21,0x22,0x14,0x18,0x36,0x21,0x40,0x40,0x00,//反54
    315          
    316          0x00,0x00,0x00,0x00,0x00,0x00,0xFE,0x20,0x20,0x20,0x20,0x10,0x00,0x00,
    317          0x00,0x00,0x00,0x7F,0x42,0x42,0x41,0x42,0x42,0x42,0x7F,0x00,0x00,0x00,//占55
    318          
    319          0x00,0x20,0x98,0x90,0x50,0x30,0x12,0x14,0x10,0x30,0x70,0xD0,0x08,0x00,
    320          0x00,0x41,0x40,0x40,0x42,0x42,0x7E,0x42,0x42,0x42,0x41,0x40,0x40,0x00,//空56
    321          
    322          0x00,0x00,0xFE,0x80,0x80,0x40,0x80,0xFE,0x80,0x40,0x20,0x10,0x00,0x00,
    323          0x00,0x00,0x3F,0x20,0x20,0x10,0x10,0x3F,0x40,0x40,0x40,0x58,0x20,0x00,//比57
    324          
    325          0x00,0x20,0x10,0x08,0xF6,0x58,0x58,0x58,0x58,0x58,0xF8,0x04,0x00,0x00,
    326          0x00,0x80,0x90,0x88,0x45,0x4F,0x35,0x15,0x3D,0x4F,0x45,0x40,0x40,0x00,//复58
    327          
    328          0x00,0x80,0x60,0xFC,0x22,0xA0,0x20,0x22,0x2C,0x20,0xE0,0x50,0x00,0x00,
    329          0x00,0x01,0x00,0x7F,0x40,0x40,0x43,0x4C,0x20,0x5E,0x41,0x40,0x20,0x00,//位59
    330          
    331          0x00,0x00,0xF0,0x20,0x20,0x20,0xFE,0x22,0x20,0x20,0x20,0xF0,0x00,0x00,
    332          0x00,0x00,0x03,0x02,0x02,0x02,0xFF,0x02,0x02,0x02,0x02,0x03,0x00,0x00,//中60
    333          
    334          0x00,0x00,0x20,0x20,0x22,0x2C,0xE0,0x10,0x28,0x26,0x20,0x10,0x00,0x00,
    335          0x00,0x80,0x42,0x22,0x12,0x0A,0x07,0x02,0x0E,0x12,0x22,0x41,0x41,0x00,//关61
    336          
    337          0x00,0x00,0xF8,0x42,0x4C,0x40,0xC4,0xFC,0x44,0x44,0x44,0xFC,0x04,0x00,
    338          0x00,0x00,0x7F,0x08,0x04,0x02,0x21,0x3F,0x00,0x00,0x40,0x7F,0x00,0x00,//闭62
    339          
    340          0x00,0x10,0x10,0xD2,0x2C,0x90,0x08,0x08,0xF8,0x08,0x08,0x08,0xF8,0x00,
    341          0x00,0x02,0x01,0x7F,0x01,0x42,0x30,0x0E,0x01,0x00,0x40,0x7E,0x01,0x00,//初63
    342          
    343          0x00,0x80,0x40,0xF8,0x06,0x00,0x00,0xFE,0x00,0x80,0x60,0x10,0x00,0x00,
    344          0x00,0x01,0x00,0x7F,0x08,0x04,0x04,0x3E,0x41,0x40,0x40,0x40,0x78,0x00,//化64
    345          
    346          0x00,0x40,0x42,0xCC,0x80,0x40,0xBC,0x84,0x84,0x84,0xBC,0xC0,0x20,0x00,
    347          0x00,0x00,0x00,0xBF,0x98,0x48,0x41,0x26,0x18,0x3C,0x23,0x40,0x40,0x00,//设65
    348          
    349          0x00,0x00,0x5E,0xD4,0x54,0x5C,0xF4,0x54,0x5C,0x54,0xD4,0x3E,0x00,0x00,
    350          0x40,0x40,0x40,0x7F,0x6B,0x6B,0x6A,0x6B,0x6B,0x6B,0x7F,0x40,0x40,0x00,//置66
    351          
    352          0x00,0x00,0xF8,0x2C,0x50,0xF8,0x20,0x18,0xC8,0x0E,0x08,0x98,0x08,0x00,
    353          0x00,0x79,0x07,0x03,0x45,0x7F,0x00,0x00,0x7F,0x42,0x41,0x40,0x70,0x00,//舵67
    354          
    355          0x00,0x00,0xA0,0xFE,0xA0,0x00,0xF8,0x08,0x08,0x08,0xFC,0x00,0x00,0x00,
    356          0x18,0x06,0x01,0x7F,0x40,0x21,0x1F,0x00,0x00,0x00,0x7F,0x40,0x70,0x00,//机68
    357          
    358          0x00,0x04,0x84,0x74,0x4C,0x44,0xE4,0x04,0xFC,0x04,0x84,0x44,0x04,0x00,
    359          0x00,0x42,0x21,0x11,0x0A,0x07,0x00,0x00,0x3F,0x41,0x40,0x40,0x78,0x00,//死0
    360          
    361          0x00,0x00,0xFC,0x04,0x14,0x24,0x44,0x84,0xC4,0x34,0x14,0x06,0x04,0x00,
    362          0x00,0x00,0x7F,0x40,0x48,0x44,0x42,0x41,0x43,0x46,0x48,0x40,0x40,0x00,//区1
    363          
    364          0x00,0x10,0xD0,0x50,0x52,0xCC,0x10,0x10,0xCC,0x12,0xD0,0x30,0x08,0x00,
    365          0x00,0x00,0x7F,0x09,0x09,0x7F,0x00,0x00,0x1F,0x40,0x7F,0x00,0x00,0x00,//前0
    366          
    367          0x00,0xFC,0x48,0xF8,0x04,0xF0,0x28,0x66,0x28,0xD8,0x2C,0x60,0x90,0x00,
    368          0x00,0x3F,0x12,0x3F,0x60,0x1F,0x01,0x73,0x5B,0x5A,0x5B,0x77,0x00,0x00,//瞻1
    369          
    370          0x00,0x38,0x44,0xC4,0x44,0x7C,0x00,0xFC,0x44,0x44,0x44,0xE4,0x04,0x00,
    371          0x00,0x3F,0x22,0x1F,0x12,0x01,0x00,0x7F,0x44,0x44,0x44,0x47,0x20,0x00,//距0
    372          
    373          0x00,0x00,0x08,0xF8,0x88,0x58,0x2A,0x2C,0x58,0x08,0xF8,0x08,0x04,0x00,
    374          0x00,0x00,0x7E,0x03,0x1A,0x17,0x13,0x13,0x0B,0x33,0x42,0x7E,0x00,0x00,//离1
    375          
    376          0x00,0x40,0x44,0xF4,0x4C,0xC4,0x44,0xE4,0x14,0xEC,0x24,0xE4,0x02,0x00,
    377          0x00,0x00,0x00,0x7F,0x00,0x80,0x80,0x4F,0x20,0x1F,0x10,0x1F,0x60,0x00,//预0
    378          
    379          0x00,0x40,0x42,0xCC,0x80,0x40,0xBC,0x84,0x84,0x84,0xBC,0xC0,0x20,0x00,
    380          0x00,0x00,0x00,0xBF,0x98,0x48,0x41,0x26,0x18,0x3C,0x23,0x40,0x40,0x00,//设1
    381          
    382          0x00,0x00,0xA0,0xFE,0xA0,0x60,0xA0,0x98,0x86,0x88,0x50,0x20,0x40,0x00,
    383          0x00,0x06,0x01,0x7F,0x40,0x40,0x5C,0x40,0x4E,0x60,0x5E,0x41,0x40,0x00,//检0
    384          
    385          0x00,0x20,0x04,0xC0,0xFC,0x04,0xF4,0x04,0xFC,0x00,0xF0,0xFC,0x00,0x00,
    386          0x00,0x00,0x7F,0x40,0x27,0x18,0x07,0x10,0x67,0x00,0x0F,0x7F,0x00,0x00,//测1
    387          
    388          0x00,0xC0,0x00,0xFE,0x20,0x18,0x08,0x08,0x08,0xF8,0x08,0x08,0x04,0x00,
    389          0x00,0x60,0x18,0x07,0x08,0x10,0x00,0x00,0x40,0x7F,0x00,0x00,0x00,0x00,//灯0
    390          
    391          0x00,0x00,0xFE,0x80,0x80,0x40,0x80,0xFE,0x80,0x40,0x20,0x10,0x00,0x00,
    392          0x00,0x00,0x3F,0x20,0x20,0x10,0x10,0x3F,0x40,0x40,0x40,0x58,0x20,0x00,//比0
    393          
    394          0x00,0x80,0xF8,0x06,0x88,0x78,0x48,0xC8,0x44,0xE0,0x10,0xFC,0x00,0x00,
    395          0x00,0x00,0x7F,0x40,0x21,0x11,0x0E,0x03,0x00,0x07,0x40,0x7F,0x00,0x00,//例1
    396          
    397          0x00,0x08,0xC4,0x24,0xB8,0xA8,0xBE,0xB8,0xC0,0xF8,0x26,0xE0,0x10,0x00,
    398          0x00,0x01,0x7F,0x00,0x30,0x0E,0x82,0x5E,0x49,0x23,0x1C,0x27,0x40,0x00,//微2
    399          
    400          0x00,0x00,0xC0,0xA0,0x98,0x84,0x80,0x80,0x8E,0xB0,0x40,0x80,0x80,0x00,
    401          0x00,0x81,0x40,0x20,0x10,0x0F,0x00,0x40,0x40,0x3F,0x01,0x00,0x00,0x00,//分3
    402          
    403          0x00,0x00,0x48,0xFC,0x44,0x20,0x40,0xF8,0x08,0x08,0x08,0xF8,0x00,0x00,
    404          0x00,0x04,0x03,0x7F,0x01,0x43,0x20,0x11,0x0D,0x01,0x05,0x19,0x60,0x00,//积0
    405          
    406          0x00,0x00,0x00,0x52,0x4C,0xD0,0x70,0x50,0x48,0x56,0x50,0x08,0x00,0x00,
    407          0x00,0x21,0x11,0x49,0x47,0x49,0x49,0x79,0x49,0x49,0x45,0x41,0x41,0x00,//差 0
    408          
    409          0x00,0x08,0xE8,0x08,0xDE,0x2A,0x88,0x68,0x5E,0xC8,0x48,0x28,0x00,0x00,
    410          0x00,0x40,0x43,0x7C,0x47,0x7C,0x45,0x7C,0x44,0x44,0x7F,0x40,0x40,0x00,//蓝0
    411          
    412          0x00,0x00,0x44,0x7C,0x44,0x44,0x44,0xC4,0xFC,0x44,0x44,0x46,0x44,0x00,
    413          0x00,0x20,0x20,0x10,0x08,0x04,0x43,0x40,0x3F,0x00,0x00,0x00,0x00,0x00,//牙1
    414          
    415          0x00,0x00,0x84,0x84,0x84,0x84,0xFC,0x84,0x84,0x84,0x84,0x44,0x40,0x00,
    416          0x00,0x80,0x40,0x20,0x10,0x0E,0x01,0x3F,0x40,0x40,0x40,0x40,0x78,0x00,//无2
    417          
    418          0x00,0x60,0x58,0xC6,0x60,0x30,0x20,0x2C,0xF2,0x24,0x2C,0x90,0x80,0x00,
    419          0x00,0x24,0x27,0x24,0x14,0x43,0x41,0x21,0x1F,0x19,0x25,0x42,0x70,0x00,//线3
    420          
    421          0x00,0x00,0x00,0xFC,0x94,0x94,0x94,0x94,0x94,0x94,0xFC,0x00,0x00,0x00,
    422          0x00,0x00,0x24,0x38,0x20,0x3F,0x20,0x20,0x3F,0x30,0x2D,0x22,0x00,0x00,//显0
    423          
    424          0x00,0x40,0x40,0x44,0x44,0x44,0xC4,0x44,0x44,0x44,0x44,0x44,0x40,0x00,
    425          0x00,0x10,0x08,0x06,0x03,0x40,0x7F,0x00,0x00,0x02,0x04,0x18,0x10,0x00,//示1
    426          
    427          0x00,0x08,0x48,0x88,0x88,0x78,0x08,0x38,0xC8,0x08,0x88,0x78,0x00,0x00,
    428          0x00,0x10,0x08,0x04,0x03,0x06,0x58,0x20,0x11,0x0E,0x1B,0x20,0x20,0x00,//双0
    429          };
    430          
    431          //======================================================
    432          // 128X64I液晶底层驱动[8X16]字体库
    433          // 设计者: powerint
    434          // 描  述: [8X16]西文字符的字模数据 (纵向取模,字节倒序)
    435          // !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_`abcdefghijklmnopqrstuvwxyz{|}~
    436          //======================================================

   \                                 In section .rodata, align 4
    437          const uint8 F8X16[]=
   \                     F8X16:
   \        0x0   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 248, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0xF8    
   \              0x00 0x00    
   \       0x16   0x00 0x00          DC8 0, 0, 0, 0, 0, 51, 48, 0, 0, 0, 0, 16, 12, 6, 16, 12, 6, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x33    
   \              0x30 0x00    
   \              0x00 0x00    
   \              0x00 0x10    
   \              0x0C 0x06    
   \              0x10 0x0C    
   \              0x06 0x00    
   \              0x00 0x00    
   \              0x00         
   \       0x2B   0x00 0x00          DC8 0, 0, 0, 0, 0, 64, 192, 120, 64, 192, 120, 64, 0, 4, 63, 4, 4, 63
   \              0x00 0x00    
   \              0x00 0x40    
   \              0xC0 0x78    
   \              0x40 0xC0    
   \              0x78 0x40    
   \              0x00 0x04    
   \              0x3F 0x04    
   \              0x04 0x3F    
   \       0x3D   0x04 0x04          DC8 4, 4, 0, 0, 112, 136, 252, 8, 48, 0, 0, 0, 24, 32, 255, 33, 30, 0
   \              0x00 0x00    
   \              0x70 0x88    
   \              0xFC 0x08    
   \              0x30 0x00    
   \              0x00 0x00    
   \              0x18 0x20    
   \              0xFF 0x21    
   \              0x1E 0x00    
   \       0x4F   0x00 0xF0          DC8 0, 240, 8, 240, 0, 224, 24, 0, 0, 0, 33, 28, 3, 30, 33, 30, 0, 0
   \              0x08 0xF0    
   \              0x00 0xE0    
   \              0x18 0x00    
   \              0x00 0x00    
   \              0x21 0x1C    
   \              0x03 0x1E    
   \              0x21 0x1E    
   \              0x00 0x00    
   \       0x61   0xF0 0x08          DC8 240, 8, 136, 112, 0, 0, 0, 30, 33, 35, 36, 25, 39, 33, 16, 16, 22
   \              0x88 0x70    
   \              0x00 0x00    
   \              0x00 0x1E    
   \              0x21 0x23    
   \              0x24 0x19    
   \              0x27 0x21    
   \              0x10 0x10    
   \              0x16         
   \       0x72   0x0E 0x00          DC8 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 224, 24, 4, 2
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0xE0    
   \              0x18 0x04    
   \              0x02         
   \       0x87   0x00 0x00          DC8 0, 0, 0, 0, 7, 24, 32, 64, 0, 0, 2, 4, 24, 224, 0, 0, 0, 0, 64, 32
   \              0x00 0x00    
   \              0x07 0x18    
   \              0x20 0x40    
   \              0x00 0x00    
   \              0x02 0x04    
   \              0x18 0xE0    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x40 0x20    
   \       0x9B   0x18 0x07          DC8 24, 7, 0, 0, 0, 64, 64, 128, 240, 128, 64, 64, 0, 2, 2, 1, 15, 1, 2
   \              0x00 0x00    
   \              0x00 0x40    
   \              0x40 0x80    
   \              0xF0 0x80    
   \              0x40 0x40    
   \              0x00 0x02    
   \              0x02 0x01    
   \              0x0F 0x01    
   \              0x02         
   \       0xAE   0x02 0x00          DC8 2, 0, 0, 0, 0, 240, 0, 0, 0, 0, 1, 1, 1, 31, 1, 1, 1, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0xF0    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x01 0x01    
   \              0x01 0x1F    
   \              0x01 0x01    
   \              0x01 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \       0xC4   0x00 0x00          DC8 0, 0, 0, 0, 128, 176, 112, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x80 0xB0    
   \              0x70 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \       0xD9   0x01 0x01          DC8 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 48, 48, 0, 0, 0, 0
   \              0x01 0x01    
   \              0x01 0x01    
   \              0x01 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x30 0x30    
   \              0x00 0x00    
   \              0x00 0x00    
   \       0xEF   0x00 0x00          DC8 0, 0, 0, 0, 0, 128, 96, 24, 4, 0, 96, 24, 6, 1, 0, 0, 0, 0, 224, 16
   \              0x00 0x00    
   \              0x00 0x80    
   \              0x60 0x18    
   \              0x04 0x00    
   \              0x60 0x18    
   \              0x06 0x01    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0xE0 0x10    
   \      0x103   0x08 0x08          DC8 8, 8, 16, 224, 0, 0, 15, 16, 32, 32, 16, 15, 0, 0, 16, 16, 248, 0
   \              0x10 0xE0    
   \              0x00 0x00    
   \              0x0F 0x10    
   \              0x20 0x20    
   \              0x10 0x0F    
   \              0x00 0x00    
   \              0x10 0x10    
   \              0xF8 0x00    
   \      0x115   0x00 0x00          DC8 0, 0, 0, 0, 32, 32, 63, 32, 32, 0, 0, 0, 112, 8, 8, 8, 136, 112, 0
   \              0x00 0x00    
   \              0x20 0x20    
   \              0x3F 0x20    
   \              0x20 0x00    
   \              0x00 0x00    
   \              0x70 0x08    
   \              0x08 0x08    
   \              0x88 0x70    
   \              0x00         
   \      0x128   0x00 0x30          DC8 0, 48, 40, 36, 34, 33, 48, 0, 0, 48, 8, 136, 136, 72, 48, 0, 0, 24
   \              0x28 0x24    
   \              0x22 0x21    
   \              0x30 0x00    
   \              0x00 0x30    
   \              0x08 0x88    
   \              0x88 0x48    
   \              0x30 0x00    
   \              0x00 0x18    
   \      0x13A   0x20 0x20          DC8 32, 32, 32, 17, 14, 0, 0, 0, 192, 32, 16, 248, 0, 0, 0, 7, 4, 36
   \              0x20 0x11    
   \              0x0E 0x00    
   \              0x00 0x00    
   \              0xC0 0x20    
   \              0x10 0xF8    
   \              0x00 0x00    
   \              0x00 0x07    
   \              0x04 0x24    
   \      0x14C   0x24 0x3F          DC8 36, 63, 36, 0, 0, 248, 8, 136, 136, 8, 8, 0, 0, 25, 33, 32, 32, 17
   \              0x24 0x00    
   \              0x00 0xF8    
   \              0x08 0x88    
   \              0x88 0x08    
   \              0x08 0x00    
   \              0x00 0x19    
   \              0x21 0x20    
   \              0x20 0x11    
   \      0x15E   0x0E 0x00          DC8 14, 0, 0, 224, 16, 136, 136, 24, 0, 0, 0, 15, 17, 32, 32, 17, 14, 0
   \              0x00 0xE0    
   \              0x10 0x88    
   \              0x88 0x18    
   \              0x00 0x00    
   \              0x00 0x0F    
   \              0x11 0x20    
   \              0x20 0x11    
   \              0x0E 0x00    
   \      0x170   0x00 0x38          DC8 0, 56, 8, 8, 200, 56, 8, 0, 0, 0, 0, 63, 0, 0, 0, 0, 0, 112, 136, 8
   \              0x08 0x08    
   \              0xC8 0x38    
   \              0x08 0x00    
   \              0x00 0x00    
   \              0x00 0x3F    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x70    
   \              0x88 0x08    
   \      0x184   0x08 0x88          DC8 8, 136, 112, 0, 0, 28, 34, 33, 33, 34, 28, 0, 0, 224, 16, 8, 8, 16
   \              0x70 0x00    
   \              0x00 0x1C    
   \              0x22 0x21    
   \              0x21 0x22    
   \              0x1C 0x00    
   \              0x00 0xE0    
   \              0x10 0x08    
   \              0x08 0x10    
   \      0x196   0xE0 0x00          DC8 224, 0, 0, 0, 49, 34, 34, 17, 15, 0, 0, 0, 0, 192, 192, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x31 0x22    
   \              0x22 0x11    
   \              0x0F 0x00    
   \              0x00 0x00    
   \              0x00 0xC0    
   \              0xC0 0x00    
   \              0x00 0x00    
   \              0x00         
   \      0x1A9   0x00 0x00          DC8 0, 0, 48, 48, 0, 0, 0, 0, 0, 0, 128, 0, 0, 0, 0, 0, 0, 128, 96, 0
   \              0x30 0x30    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x80 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x80    
   \              0x60 0x00    
   \      0x1BD   0x00 0x00          DC8 0, 0, 0, 0, 0, 128, 64, 32, 16, 8, 0, 0, 1, 2, 4, 8, 16, 32, 0, 64
   \              0x00 0x00    
   \              0x00 0x80    
   \              0x40 0x20    
   \              0x10 0x08    
   \              0x00 0x00    
   \              0x01 0x02    
   \              0x04 0x08    
   \              0x10 0x20    
   \              0x00 0x40    
   \      0x1D1   0x40 0x40          DC8 64, 64, 64, 64, 64, 64, 0, 4, 4, 4, 4, 4, 4, 4, 0, 0, 8, 16, 32, 64
   \              0x40 0x40    
   \              0x40 0x40    
   \              0x00 0x04    
   \              0x04 0x04    
   \              0x04 0x04    
   \              0x04 0x04    
   \              0x00 0x00    
   \              0x08 0x10    
   \              0x20 0x40    
   \      0x1E5   0x80 0x00          DC8 128, 0, 0, 0, 32, 16, 8, 4, 2, 1, 0, 0, 112, 72, 8, 8, 8, 240, 0, 0
   \              0x00 0x00    
   \              0x20 0x10    
   \              0x08 0x04    
   \              0x02 0x01    
   \              0x00 0x00    
   \              0x70 0x48    
   \              0x08 0x08    
   \              0x08 0xF0    
   \              0x00 0x00    
   \      0x1F9   0x00 0x00          DC8 0, 0, 48, 54, 1, 0, 0, 192, 48, 200, 40, 232, 16, 224, 0, 7, 24, 39
   \              0x30 0x36    
   \              0x01 0x00    
   \              0x00 0xC0    
   \              0x30 0xC8    
   \              0x28 0xE8    
   \              0x10 0xE0    
   \              0x00 0x07    
   \              0x18 0x27    
   \      0x20B   0x24 0x23          DC8 36, 35, 20, 11, 0, 0, 0, 192, 56, 224, 0, 0, 0, 32, 60, 35, 2, 2
   \              0x14 0x0B    
   \              0x00 0x00    
   \              0x00 0xC0    
   \              0x38 0xE0    
   \              0x00 0x00    
   \              0x00 0x20    
   \              0x3C 0x23    
   \              0x02 0x02    
   \      0x21D   0x27 0x38          DC8 39, 56, 32, 8, 248, 136, 136, 136, 112, 0, 0, 32, 63, 32, 32, 32
   \              0x20 0x08    
   \              0xF8 0x88    
   \              0x88 0x88    
   \              0x70 0x00    
   \              0x00 0x20    
   \              0x3F 0x20    
   \              0x20 0x20    
   \      0x22D   0x11 0x0E          DC8 17, 14, 0, 192, 48, 8, 8, 8, 8, 56, 0, 7, 24, 32, 32, 32, 16, 8, 0
   \              0x00 0xC0    
   \              0x30 0x08    
   \              0x08 0x08    
   \              0x08 0x38    
   \              0x00 0x07    
   \              0x18 0x20    
   \              0x20 0x20    
   \              0x10 0x08    
   \              0x00         
   \      0x240   0x08 0xF8          DC8 8, 248, 8, 8, 8, 16, 224, 0, 32, 63, 32, 32, 32, 16, 15, 0, 8, 248
   \              0x08 0x08    
   \              0x08 0x10    
   \              0xE0 0x00    
   \              0x20 0x3F    
   \              0x20 0x20    
   \              0x20 0x10    
   \              0x0F 0x00    
   \              0x08 0xF8    
   \      0x252   0x88 0x88          DC8 136, 136, 232, 8, 16, 0, 32, 63, 32, 32, 35, 32, 24, 0, 8, 248, 136
   \              0xE8 0x08    
   \              0x10 0x00    
   \              0x20 0x3F    
   \              0x20 0x20    
   \              0x23 0x20    
   \              0x18 0x00    
   \              0x08 0xF8    
   \              0x88         
   \      0x263   0x88 0xE8          DC8 136, 232, 8, 16, 0, 32, 63, 32, 0, 3, 0, 0, 0, 192, 48, 8, 8, 8, 56
   \              0x08 0x10    
   \              0x00 0x20    
   \              0x3F 0x20    
   \              0x00 0x03    
   \              0x00 0x00    
   \              0x00 0xC0    
   \              0x30 0x08    
   \              0x08 0x08    
   \              0x38         
   \      0x276   0x00 0x00          DC8 0, 0, 7, 24, 32, 32, 34, 30, 2, 0, 8, 248, 8, 0, 0, 8, 248, 8, 32
   \              0x07 0x18    
   \              0x20 0x20    
   \              0x22 0x1E    
   \              0x02 0x00    
   \              0x08 0xF8    
   \              0x08 0x00    
   \              0x00 0x08    
   \              0xF8 0x08    
   \              0x20         
   \      0x289   0x3F 0x21          DC8 63, 33, 1, 1, 33, 63, 32, 0, 8, 8, 248, 8, 8, 0, 0, 0, 32, 32, 63
   \              0x01 0x01    
   \              0x21 0x3F    
   \              0x20 0x00    
   \              0x08 0x08    
   \              0xF8 0x08    
   \              0x08 0x00    
   \              0x00 0x00    
   \              0x20 0x20    
   \              0x3F         
   \      0x29C   0x20 0x20          DC8 32, 32, 0, 0, 0, 0, 8, 8, 248, 8, 8, 0, 192, 128, 128, 128, 127, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x08 0x08    
   \              0xF8 0x08    
   \              0x08 0x00    
   \              0xC0 0x80    
   \              0x80 0x80    
   \              0x7F 0x00    
   \      0x2AE   0x00 0x00          DC8 0, 0, 8, 248, 136, 192, 40, 24, 8, 0, 32, 63, 32, 1, 38, 56, 32, 0
   \              0x08 0xF8    
   \              0x88 0xC0    
   \              0x28 0x18    
   \              0x08 0x00    
   \              0x20 0x3F    
   \              0x20 0x01    
   \              0x26 0x38    
   \              0x20 0x00    
   \      0x2C0   0x08 0xF8          DC8 8, 248, 8, 0, 0, 0, 0, 0, 32, 63, 32, 32, 32, 32, 48, 0, 8, 248
   \              0x08 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x20 0x3F    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x30 0x00    
   \              0x08 0xF8    
   \      0x2D2   0xF8 0x00          DC8 248, 0, 248, 248, 8, 0, 32, 63, 0, 63, 0, 63, 32, 0, 8, 248, 48
   \              0xF8 0xF8    
   \              0x08 0x00    
   \              0x20 0x3F    
   \              0x00 0x3F    
   \              0x00 0x3F    
   \              0x20 0x00    
   \              0x08 0xF8    
   \              0x30         
   \      0x2E3   0xC0 0x00          DC8 192, 0, 8, 248, 8, 32, 63, 32, 0, 7, 24, 63, 0, 224, 16, 8, 8, 8
   \              0x08 0xF8    
   \              0x08 0x20    
   \              0x3F 0x20    
   \              0x00 0x07    
   \              0x18 0x3F    
   \              0x00 0xE0    
   \              0x10 0x08    
   \              0x08 0x08    
   \      0x2F5   0x10 0xE0          DC8 16, 224, 0, 15, 16, 32, 32, 32, 16, 15, 0, 8, 248, 8, 8, 8, 8, 240
   \              0x00 0x0F    
   \              0x10 0x20    
   \              0x20 0x20    
   \              0x10 0x0F    
   \              0x00 0x08    
   \              0xF8 0x08    
   \              0x08 0x08    
   \              0x08 0xF0    
   \      0x307   0x00 0x20          DC8 0, 32, 63, 33, 1, 1, 1, 0, 0, 224, 16, 8, 8, 8, 16, 224, 0, 15, 24
   \              0x3F 0x21    
   \              0x01 0x01    
   \              0x01 0x00    
   \              0x00 0xE0    
   \              0x10 0x08    
   \              0x08 0x08    
   \              0x10 0xE0    
   \              0x00 0x0F    
   \              0x18         
   \      0x31A   0x24 0x24          DC8 36, 36, 56, 80, 79, 0, 8, 248, 136, 136, 136, 136, 112, 0, 32, 63
   \              0x38 0x50    
   \              0x4F 0x00    
   \              0x08 0xF8    
   \              0x88 0x88    
   \              0x88 0x88    
   \              0x70 0x00    
   \              0x20 0x3F    
   \      0x32A   0x20 0x00          DC8 32, 0, 3, 12, 48, 32, 0, 112, 136, 8, 8, 8, 56, 0, 0, 56, 32, 33
   \              0x03 0x0C    
   \              0x30 0x20    
   \              0x00 0x70    
   \              0x88 0x08    
   \              0x08 0x08    
   \              0x38 0x00    
   \              0x00 0x38    
   \              0x20 0x21    
   \      0x33C   0x21 0x22          DC8 33, 34, 28, 0, 24, 8, 8, 248, 8, 8, 24, 0, 0, 0, 32, 63, 32, 0, 0
   \              0x1C 0x00    
   \              0x18 0x08    
   \              0x08 0xF8    
   \              0x08 0x08    
   \              0x18 0x00    
   \              0x00 0x00    
   \              0x20 0x3F    
   \              0x20 0x00    
   \              0x00         
   \      0x34F   0x00 0x08          DC8 0, 8, 248, 8, 0, 0, 8, 248, 8, 0, 31, 32, 32, 32, 32, 31, 0, 8, 120
   \              0xF8 0x08    
   \              0x00 0x00    
   \              0x08 0xF8    
   \              0x08 0x00    
   \              0x1F 0x20    
   \              0x20 0x20    
   \              0x20 0x1F    
   \              0x00 0x08    
   \              0x78         
   \      0x362   0x88 0x00          DC8 136, 0, 0, 200, 56, 8, 0, 0, 7, 56, 14, 1, 0, 0, 248, 8, 0, 248, 0
   \              0x00 0xC8    
   \              0x38 0x08    
   \              0x00 0x00    
   \              0x07 0x38    
   \              0x0E 0x01    
   \              0x00 0x00    
   \              0xF8 0x08    
   \              0x00 0xF8    
   \              0x00         
   \      0x375   0x08 0xF8          DC8 8, 248, 0, 3, 60, 7, 0, 7, 60, 3, 0, 8, 24, 104, 128, 128, 104, 24
   \              0x00 0x03    
   \              0x3C 0x07    
   \              0x00 0x07    
   \              0x3C 0x03    
   \              0x00 0x08    
   \              0x18 0x68    
   \              0x80 0x80    
   \              0x68 0x18    
   \      0x387   0x08 0x20          DC8 8, 32, 48, 44, 3, 3, 44, 48, 32, 8, 56, 200, 0, 200, 56, 8, 0, 0, 0
   \              0x30 0x2C    
   \              0x03 0x03    
   \              0x2C 0x30    
   \              0x20 0x08    
   \              0x38 0xC8    
   \              0x00 0xC8    
   \              0x38 0x08    
   \              0x00 0x00    
   \              0x00         
   \      0x39A   0x20 0x3F          DC8 32, 63, 32, 0, 0, 0, 16, 8, 8, 8, 200, 56, 8, 0, 32, 56, 38, 33, 32
   \              0x20 0x00    
   \              0x00 0x00    
   \              0x10 0x08    
   \              0x08 0x08    
   \              0xC8 0x38    
   \              0x08 0x00    
   \              0x20 0x38    
   \              0x26 0x21    
   \              0x20         
   \      0x3AD   0x20 0x18          DC8 32, 24, 0, 0, 0, 0, 254, 2, 2, 2, 0, 0, 0, 0, 127, 64, 64, 64, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0xFE 0x02    
   \              0x02 0x02    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x7F 0x40    
   \              0x40 0x40    
   \              0x00 0x00    
   \      0x3C1   0x0C 0x30          DC8 12, 48, 192, 0, 0, 0, 0, 0, 0, 0, 1, 6, 56, 192, 0, 0, 2, 2, 2, 254
   \              0xC0 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x01 0x06    
   \              0x38 0xC0    
   \              0x00 0x00    
   \              0x02 0x02    
   \              0x02 0xFE    
   \      0x3D5   0x00 0x00          DC8 0, 0, 0, 0, 64, 64, 64, 127, 0, 0, 0, 0, 0, 4, 2, 2, 2, 4, 0, 0, 0
   \              0x00 0x00    
   \              0x40 0x40    
   \              0x40 0x7F    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x04    
   \              0x02 0x02    
   \              0x02 0x04    
   \              0x00 0x00    
   \              0x00         
   \      0x3EA   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128, 128, 128, 128, 128
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x80 0x80    
   \              0x80 0x80    
   \              0x80         
   \      0x3FD   0x80 0x80          DC8 128, 128, 128, 0, 2, 2, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x80 0x00    
   \              0x02 0x02    
   \              0x04 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \      0x412   0x80 0x80          DC8 128, 128, 128, 128, 0, 0, 0, 25, 36, 34, 34, 34, 63, 32, 8, 248, 0
   \              0x80 0x80    
   \              0x00 0x00    
   \              0x00 0x19    
   \              0x24 0x22    
   \              0x22 0x22    
   \              0x3F 0x20    
   \              0x08 0xF8    
   \              0x00         
   \      0x423   0x80 0x80          DC8 128, 128, 0, 0, 0, 0, 63, 17, 32, 32, 17, 14, 0, 0, 0, 0, 128, 128
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x3F 0x11    
   \              0x20 0x20    
   \              0x11 0x0E    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x80 0x80    
   \      0x435   0x80 0x00          DC8 128, 0, 0, 0, 14, 17, 32, 32, 32, 17, 0, 0, 0, 0, 128, 128, 136
   \              0x00 0x00    
   \              0x0E 0x11    
   \              0x20 0x20    
   \              0x20 0x11    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x80 0x80    
   \              0x88         
   \      0x446   0xF8 0x00          DC8 248, 0, 0, 14, 17, 32, 32, 16, 63, 32, 0, 0, 128, 128, 128, 128, 0
   \              0x00 0x0E    
   \              0x11 0x20    
   \              0x20 0x10    
   \              0x3F 0x20    
   \              0x00 0x00    
   \              0x80 0x80    
   \              0x80 0x80    
   \              0x00         
   \      0x457   0x00 0x00          DC8 0, 0, 31, 34, 34, 34, 34, 19, 0, 0, 128, 128, 240, 136, 136, 136
   \              0x1F 0x22    
   \              0x22 0x22    
   \              0x22 0x13    
   \              0x00 0x00    
   \              0x80 0x80    
   \              0xF0 0x88    
   \              0x88 0x88    
   \      0x467   0x18 0x00          DC8 24, 0, 32, 32, 63, 32, 32, 0, 0, 0, 0, 128, 128, 128, 128, 128, 0
   \              0x20 0x20    
   \              0x3F 0x20    
   \              0x20 0x00    
   \              0x00 0x00    
   \              0x00 0x80    
   \              0x80 0x80    
   \              0x80 0x80    
   \              0x00         
   \      0x478   0x00 0x6B          DC8 0, 107, 148, 148, 148, 147, 96, 0, 8, 248, 0, 128, 128, 128, 0, 0
   \              0x94 0x94    
   \              0x94 0x93    
   \              0x60 0x00    
   \              0x08 0xF8    
   \              0x00 0x80    
   \              0x80 0x80    
   \              0x00 0x00    
   \      0x488   0x20 0x3F          DC8 32, 63, 33, 0, 0, 32, 63, 32, 0, 128, 152, 152, 0, 0, 0, 0, 0, 32
   \              0x21 0x00    
   \              0x00 0x20    
   \              0x3F 0x20    
   \              0x00 0x80    
   \              0x98 0x98    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x20    
   \      0x49A   0x20 0x3F          DC8 32, 63, 32, 32, 0, 0, 0, 0, 0, 128, 152, 152, 0, 0, 0, 192, 128
   \              0x20 0x20    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x80    
   \              0x98 0x98    
   \              0x00 0x00    
   \              0x00 0xC0    
   \              0x80         
   \      0x4AB   0x80 0x80          DC8 128, 128, 127, 0, 0, 8, 248, 0, 0, 128, 128, 128, 0, 32, 63, 36, 2
   \              0x7F 0x00    
   \              0x00 0x08    
   \              0xF8 0x00    
   \              0x00 0x80    
   \              0x80 0x80    
   \              0x00 0x20    
   \              0x3F 0x24    
   \              0x02         
   \      0x4BC   0x2D 0x30          DC8 45, 48, 32, 0, 0, 8, 8, 248, 0, 0, 0, 0, 0, 32, 32, 63, 32, 32, 0
   \              0x20 0x00    
   \              0x00 0x08    
   \              0x08 0xF8    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x20    
   \              0x20 0x3F    
   \              0x20 0x20    
   \              0x00         
   \      0x4CF   0x00 0x80          DC8 0, 128, 128, 128, 128, 128, 128, 128, 0, 32, 63, 32, 0, 63, 32, 0
   \              0x80 0x80    
   \              0x80 0x80    
   \              0x80 0x80    
   \              0x00 0x20    
   \              0x3F 0x20    
   \              0x00 0x3F    
   \              0x20 0x00    
   \      0x4DF   0x3F 0x80          DC8 63, 128, 128, 0, 128, 128, 128, 0, 0, 32, 63, 33, 0, 0, 32, 63, 32
   \              0x80 0x00    
   \              0x80 0x80    
   \              0x80 0x00    
   \              0x00 0x20    
   \              0x3F 0x21    
   \              0x00 0x00    
   \              0x20 0x3F    
   \              0x20         
   \      0x4F0   0x00 0x00          DC8 0, 0, 128, 128, 128, 128, 0, 0, 0, 31, 32, 32, 32, 32, 31, 0, 128
   \              0x80 0x80    
   \              0x80 0x80    
   \              0x00 0x00    
   \              0x00 0x1F    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x1F 0x00    
   \              0x80         
   \      0x501   0x80 0x00          DC8 128, 0, 128, 128, 0, 0, 0, 128, 255, 161, 32, 32, 17, 14, 0, 0, 0
   \              0x80 0x80    
   \              0x00 0x00    
   \              0x00 0x80    
   \              0xFF 0xA1    
   \              0x20 0x20    
   \              0x11 0x0E    
   \              0x00 0x00    
   \              0x00         
   \      0x512   0x00 0x80          DC8 0, 128, 128, 128, 128, 0, 0, 14, 17, 32, 32, 160, 255, 128, 128
   \              0x80 0x80    
   \              0x80 0x00    
   \              0x00 0x0E    
   \              0x11 0x20    
   \              0x20 0xA0    
   \              0xFF 0x80    
   \              0x80         
   \      0x521   0x80 0x80          DC8 128, 128, 0, 128, 128, 128, 0, 32, 32, 63, 33, 32, 0, 1, 0, 0, 0
   \              0x00 0x80    
   \              0x80 0x80    
   \              0x00 0x20    
   \              0x20 0x3F    
   \              0x21 0x20    
   \              0x00 0x01    
   \              0x00 0x00    
   \              0x00         
   \      0x532   0x80 0x80          DC8 128, 128, 128, 128, 128, 0, 0, 51, 36, 36, 36, 36, 25, 0, 0, 128
   \              0x80 0x80    
   \              0x80 0x00    
   \              0x00 0x33    
   \              0x24 0x24    
   \              0x24 0x24    
   \              0x19 0x00    
   \              0x00 0x80    
   \      0x542   0x80 0xE0          DC8 128, 224, 128, 128, 0, 0, 0, 0, 0, 31, 32, 32, 0, 0, 128, 128, 0, 0
   \              0x80 0x80    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x1F    
   \              0x20 0x20    
   \              0x00 0x00    
   \              0x80 0x80    
   \              0x00 0x00    
   \      0x554   0x00 0x80          DC8 0, 128, 128, 0, 0, 31, 32, 32, 32, 16, 63, 32, 128, 128, 128, 0, 0
   \              0x80 0x00    
   \              0x00 0x1F    
   \              0x20 0x20    
   \              0x20 0x10    
   \              0x3F 0x20    
   \              0x80 0x80    
   \              0x80 0x00    
   \              0x00         
   \      0x565   0x80 0x80          DC8 128, 128, 128, 0, 1, 14, 48, 8, 6, 1, 0, 128, 128, 0, 128, 0, 128
   \              0x80 0x00    
   \              0x01 0x0E    
   \              0x30 0x08    
   \              0x06 0x01    
   \              0x00 0x80    
   \              0x80 0x00    
   \              0x80 0x00    
   \              0x80         
   \      0x576   0x80 0x80          DC8 128, 128, 15, 48, 12, 3, 12, 48, 15, 0, 0, 128, 128, 0, 128, 128
   \              0x0F 0x30    
   \              0x0C 0x03    
   \              0x0C 0x30    
   \              0x0F 0x00    
   \              0x00 0x80    
   \              0x80 0x00    
   \              0x80 0x80    
   \      0x586   0x80 0x00          DC8 128, 0, 0, 32, 49, 46, 14, 49, 32, 0, 128, 128, 128, 0, 0, 128, 128
   \              0x00 0x20    
   \              0x31 0x2E    
   \              0x0E 0x31    
   \              0x20 0x00    
   \              0x80 0x80    
   \              0x80 0x00    
   \              0x00 0x80    
   \              0x80         
   \      0x597   0x80 0x80          DC8 128, 128, 129, 142, 112, 24, 6, 1, 0, 0, 128, 128, 128, 128, 128
   \              0x81 0x8E    
   \              0x70 0x18    
   \              0x06 0x01    
   \              0x00 0x00    
   \              0x80 0x80    
   \              0x80 0x80    
   \              0x80         
   \      0x5A6   0x80 0x00          DC8 128, 0, 0, 33, 48, 44, 34, 33, 48, 0, 0, 0, 0, 0, 128, 124, 2, 2, 0
   \              0x00 0x21    
   \              0x30 0x2C    
   \              0x22 0x21    
   \              0x30 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x80 0x7C    
   \              0x02 0x02    
   \              0x00         
   \      0x5B9   0x00 0x00          DC8 0, 0, 0, 0, 63, 64, 64, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 255
   \              0x00 0x00    
   \              0x3F 0x40    
   \              0x40 0x00    
   \              0x00 0x00    
   \              0x00 0xFF    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0xFF    
   \      0x5CD   0x00 0x00          DC8 0, 0, 0, 0, 2, 2, 124, 128, 0, 0, 0, 0, 64, 64, 63, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x02 0x02    
   \              0x7C 0x80    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x40 0x40    
   \              0x3F 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \      0x5E1   0x06 0x01          DC8 6, 1, 1, 2, 2, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x01 0x02    
   \              0x02 0x04    
   \              0x04 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
    438          {
    439          	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,// 0
    440            0x00,0x00,0x00,0xF8,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x33,0x30,0x00,0x00,0x00,//!1
    441            0x00,0x10,0x0C,0x06,0x10,0x0C,0x06,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,//"2
    442            0x40,0xC0,0x78,0x40,0xC0,0x78,0x40,0x00,0x04,0x3F,0x04,0x04,0x3F,0x04,0x04,0x00,//#3
    443            0x00,0x70,0x88,0xFC,0x08,0x30,0x00,0x00,0x00,0x18,0x20,0xFF,0x21,0x1E,0x00,0x00,//$4
    444            0xF0,0x08,0xF0,0x00,0xE0,0x18,0x00,0x00,0x00,0x21,0x1C,0x03,0x1E,0x21,0x1E,0x00,//%5
    445            0x00,0xF0,0x08,0x88,0x70,0x00,0x00,0x00,0x1E,0x21,0x23,0x24,0x19,0x27,0x21,0x10,//&6
    446            0x10,0x16,0x0E,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,//'7
    447            0x00,0x00,0x00,0xE0,0x18,0x04,0x02,0x00,0x00,0x00,0x00,0x07,0x18,0x20,0x40,0x00,//(8
    448            0x00,0x02,0x04,0x18,0xE0,0x00,0x00,0x00,0x00,0x40,0x20,0x18,0x07,0x00,0x00,0x00,//)9
    449            0x40,0x40,0x80,0xF0,0x80,0x40,0x40,0x00,0x02,0x02,0x01,0x0F,0x01,0x02,0x02,0x00,//*10
    450            0x00,0x00,0x00,0xF0,0x00,0x00,0x00,0x00,0x01,0x01,0x01,0x1F,0x01,0x01,0x01,0x00,//+11
    451            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0xB0,0x70,0x00,0x00,0x00,0x00,0x00,//,12
    452            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x01,0x01,0x01,0x01,0x01,0x01,//-13
    453            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x30,0x30,0x00,0x00,0x00,0x00,0x00,//.14
    454            0x00,0x00,0x00,0x00,0x80,0x60,0x18,0x04,0x00,0x60,0x18,0x06,0x01,0x00,0x00,0x00,///15
    455            0x00,0xE0,0x10,0x08,0x08,0x10,0xE0,0x00,0x00,0x0F,0x10,0x20,0x20,0x10,0x0F,0x00,//016
    456            0x00,0x10,0x10,0xF8,0x00,0x00,0x00,0x00,0x00,0x20,0x20,0x3F,0x20,0x20,0x00,0x00,//117
    457            0x00,0x70,0x08,0x08,0x08,0x88,0x70,0x00,0x00,0x30,0x28,0x24,0x22,0x21,0x30,0x00,//218
    458            0x00,0x30,0x08,0x88,0x88,0x48,0x30,0x00,0x00,0x18,0x20,0x20,0x20,0x11,0x0E,0x00,//319
    459            0x00,0x00,0xC0,0x20,0x10,0xF8,0x00,0x00,0x00,0x07,0x04,0x24,0x24,0x3F,0x24,0x00,//420
    460            0x00,0xF8,0x08,0x88,0x88,0x08,0x08,0x00,0x00,0x19,0x21,0x20,0x20,0x11,0x0E,0x00,//521
    461            0x00,0xE0,0x10,0x88,0x88,0x18,0x00,0x00,0x00,0x0F,0x11,0x20,0x20,0x11,0x0E,0x00,//622
    462            0x00,0x38,0x08,0x08,0xC8,0x38,0x08,0x00,0x00,0x00,0x00,0x3F,0x00,0x00,0x00,0x00,//723
    463            0x00,0x70,0x88,0x08,0x08,0x88,0x70,0x00,0x00,0x1C,0x22,0x21,0x21,0x22,0x1C,0x00,//824
    464            0x00,0xE0,0x10,0x08,0x08,0x10,0xE0,0x00,0x00,0x00,0x31,0x22,0x22,0x11,0x0F,0x00,//925
    465            0x00,0x00,0x00,0xC0,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x30,0x30,0x00,0x00,0x00,//:26
    466            0x00,0x00,0x00,0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x60,0x00,0x00,0x00,0x00,//;27
    467            0x00,0x00,0x80,0x40,0x20,0x10,0x08,0x00,0x00,0x01,0x02,0x04,0x08,0x10,0x20,0x00,//<28
    468            0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x00,0x04,0x04,0x04,0x04,0x04,0x04,0x04,0x00,//=29
    469            0x00,0x08,0x10,0x20,0x40,0x80,0x00,0x00,0x00,0x20,0x10,0x08,0x04,0x02,0x01,0x00,//>30
    470            0x00,0x70,0x48,0x08,0x08,0x08,0xF0,0x00,0x00,0x00,0x00,0x30,0x36,0x01,0x00,0x00,//?31
    471            0xC0,0x30,0xC8,0x28,0xE8,0x10,0xE0,0x00,0x07,0x18,0x27,0x24,0x23,0x14,0x0B,0x00,//@32
    472            0x00,0x00,0xC0,0x38,0xE0,0x00,0x00,0x00,0x20,0x3C,0x23,0x02,0x02,0x27,0x38,0x20,//A33
    473            0x08,0xF8,0x88,0x88,0x88,0x70,0x00,0x00,0x20,0x3F,0x20,0x20,0x20,0x11,0x0E,0x00,//B34
    474            0xC0,0x30,0x08,0x08,0x08,0x08,0x38,0x00,0x07,0x18,0x20,0x20,0x20,0x10,0x08,0x00,//C35
    475            0x08,0xF8,0x08,0x08,0x08,0x10,0xE0,0x00,0x20,0x3F,0x20,0x20,0x20,0x10,0x0F,0x00,//D36
    476            0x08,0xF8,0x88,0x88,0xE8,0x08,0x10,0x00,0x20,0x3F,0x20,0x20,0x23,0x20,0x18,0x00,//E37
    477            0x08,0xF8,0x88,0x88,0xE8,0x08,0x10,0x00,0x20,0x3F,0x20,0x00,0x03,0x00,0x00,0x00,//F38
    478            0xC0,0x30,0x08,0x08,0x08,0x38,0x00,0x00,0x07,0x18,0x20,0x20,0x22,0x1E,0x02,0x00,//G39
    479            0x08,0xF8,0x08,0x00,0x00,0x08,0xF8,0x08,0x20,0x3F,0x21,0x01,0x01,0x21,0x3F,0x20,//H40
    480            0x00,0x08,0x08,0xF8,0x08,0x08,0x00,0x00,0x00,0x20,0x20,0x3F,0x20,0x20,0x00,0x00,//I41
    481            0x00,0x00,0x08,0x08,0xF8,0x08,0x08,0x00,0xC0,0x80,0x80,0x80,0x7F,0x00,0x00,0x00,//J42
    482            0x08,0xF8,0x88,0xC0,0x28,0x18,0x08,0x00,0x20,0x3F,0x20,0x01,0x26,0x38,0x20,0x00,//K43
    483            0x08,0xF8,0x08,0x00,0x00,0x00,0x00,0x00,0x20,0x3F,0x20,0x20,0x20,0x20,0x30,0x00,//L44
    484            0x08,0xF8,0xF8,0x00,0xF8,0xF8,0x08,0x00,0x20,0x3F,0x00,0x3F,0x00,0x3F,0x20,0x00,//M45
    485            0x08,0xF8,0x30,0xC0,0x00,0x08,0xF8,0x08,0x20,0x3F,0x20,0x00,0x07,0x18,0x3F,0x00,//N46
    486            0xE0,0x10,0x08,0x08,0x08,0x10,0xE0,0x00,0x0F,0x10,0x20,0x20,0x20,0x10,0x0F,0x00,//O47
    487            0x08,0xF8,0x08,0x08,0x08,0x08,0xF0,0x00,0x20,0x3F,0x21,0x01,0x01,0x01,0x00,0x00,//P48
    488            0xE0,0x10,0x08,0x08,0x08,0x10,0xE0,0x00,0x0F,0x18,0x24,0x24,0x38,0x50,0x4F,0x00,//Q49
    489            0x08,0xF8,0x88,0x88,0x88,0x88,0x70,0x00,0x20,0x3F,0x20,0x00,0x03,0x0C,0x30,0x20,//R50
    490            0x00,0x70,0x88,0x08,0x08,0x08,0x38,0x00,0x00,0x38,0x20,0x21,0x21,0x22,0x1C,0x00,//S51
    491            0x18,0x08,0x08,0xF8,0x08,0x08,0x18,0x00,0x00,0x00,0x20,0x3F,0x20,0x00,0x00,0x00,//T52
    492            0x08,0xF8,0x08,0x00,0x00,0x08,0xF8,0x08,0x00,0x1F,0x20,0x20,0x20,0x20,0x1F,0x00,//U53
    493            0x08,0x78,0x88,0x00,0x00,0xC8,0x38,0x08,0x00,0x00,0x07,0x38,0x0E,0x01,0x00,0x00,//V54
    494            0xF8,0x08,0x00,0xF8,0x00,0x08,0xF8,0x00,0x03,0x3C,0x07,0x00,0x07,0x3C,0x03,0x00,//W55
    495            0x08,0x18,0x68,0x80,0x80,0x68,0x18,0x08,0x20,0x30,0x2C,0x03,0x03,0x2C,0x30,0x20,//X56
    496            0x08,0x38,0xC8,0x00,0xC8,0x38,0x08,0x00,0x00,0x00,0x20,0x3F,0x20,0x00,0x00,0x00,//Y57
    497            0x10,0x08,0x08,0x08,0xC8,0x38,0x08,0x00,0x20,0x38,0x26,0x21,0x20,0x20,0x18,0x00,//Z58
    498            0x00,0x00,0x00,0xFE,0x02,0x02,0x02,0x00,0x00,0x00,0x00,0x7F,0x40,0x40,0x40,0x00,//[59
    499            0x00,0x0C,0x30,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x06,0x38,0xC0,0x00,//\60
    500            0x00,0x02,0x02,0x02,0xFE,0x00,0x00,0x00,0x00,0x40,0x40,0x40,0x7F,0x00,0x00,0x00,//]61
    501            0x00,0x00,0x04,0x02,0x02,0x02,0x04,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,//^62
    502            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,//_63
    503            0x00,0x02,0x02,0x04,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,//`64
    504            0x00,0x00,0x80,0x80,0x80,0x80,0x00,0x00,0x00,0x19,0x24,0x22,0x22,0x22,0x3F,0x20,//a65
    505            0x08,0xF8,0x00,0x80,0x80,0x00,0x00,0x00,0x00,0x3F,0x11,0x20,0x20,0x11,0x0E,0x00,//b66
    506            0x00,0x00,0x00,0x80,0x80,0x80,0x00,0x00,0x00,0x0E,0x11,0x20,0x20,0x20,0x11,0x00,//c67
    507            0x00,0x00,0x00,0x80,0x80,0x88,0xF8,0x00,0x00,0x0E,0x11,0x20,0x20,0x10,0x3F,0x20,//d68
    508            0x00,0x00,0x80,0x80,0x80,0x80,0x00,0x00,0x00,0x1F,0x22,0x22,0x22,0x22,0x13,0x00,//e69
    509            0x00,0x80,0x80,0xF0,0x88,0x88,0x88,0x18,0x00,0x20,0x20,0x3F,0x20,0x20,0x00,0x00,//f70
    510            0x00,0x00,0x80,0x80,0x80,0x80,0x80,0x00,0x00,0x6B,0x94,0x94,0x94,0x93,0x60,0x00,//g71
    511            0x08,0xF8,0x00,0x80,0x80,0x80,0x00,0x00,0x20,0x3F,0x21,0x00,0x00,0x20,0x3F,0x20,//h72
    512            0x00,0x80,0x98,0x98,0x00,0x00,0x00,0x00,0x00,0x20,0x20,0x3F,0x20,0x20,0x00,0x00,//i73
    513            0x00,0x00,0x00,0x80,0x98,0x98,0x00,0x00,0x00,0xC0,0x80,0x80,0x80,0x7F,0x00,0x00,//j74
    514            0x08,0xF8,0x00,0x00,0x80,0x80,0x80,0x00,0x20,0x3F,0x24,0x02,0x2D,0x30,0x20,0x00,//k75
    515            0x00,0x08,0x08,0xF8,0x00,0x00,0x00,0x00,0x00,0x20,0x20,0x3F,0x20,0x20,0x00,0x00,//l76
    516            0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x00,0x20,0x3F,0x20,0x00,0x3F,0x20,0x00,0x3F,//m77
    517            0x80,0x80,0x00,0x80,0x80,0x80,0x00,0x00,0x20,0x3F,0x21,0x00,0x00,0x20,0x3F,0x20,//n78
    518            0x00,0x00,0x80,0x80,0x80,0x80,0x00,0x00,0x00,0x1F,0x20,0x20,0x20,0x20,0x1F,0x00,//o79
    519            0x80,0x80,0x00,0x80,0x80,0x00,0x00,0x00,0x80,0xFF,0xA1,0x20,0x20,0x11,0x0E,0x00,//p80
    520            0x00,0x00,0x00,0x80,0x80,0x80,0x80,0x00,0x00,0x0E,0x11,0x20,0x20,0xA0,0xFF,0x80,//q81
    521            0x80,0x80,0x80,0x00,0x80,0x80,0x80,0x00,0x20,0x20,0x3F,0x21,0x20,0x00,0x01,0x00,//r82
    522            0x00,0x00,0x80,0x80,0x80,0x80,0x80,0x00,0x00,0x33,0x24,0x24,0x24,0x24,0x19,0x00,//s83
    523            0x00,0x80,0x80,0xE0,0x80,0x80,0x00,0x00,0x00,0x00,0x00,0x1F,0x20,0x20,0x00,0x00,//t84
    524            0x80,0x80,0x00,0x00,0x00,0x80,0x80,0x00,0x00,0x1F,0x20,0x20,0x20,0x10,0x3F,0x20,//u85
    525            0x80,0x80,0x80,0x00,0x00,0x80,0x80,0x80,0x00,0x01,0x0E,0x30,0x08,0x06,0x01,0x00,//v86
    526            0x80,0x80,0x00,0x80,0x00,0x80,0x80,0x80,0x0F,0x30,0x0C,0x03,0x0C,0x30,0x0F,0x00,//w87
    527            0x00,0x80,0x80,0x00,0x80,0x80,0x80,0x00,0x00,0x20,0x31,0x2E,0x0E,0x31,0x20,0x00,//x88
    528            0x80,0x80,0x80,0x00,0x00,0x80,0x80,0x80,0x80,0x81,0x8E,0x70,0x18,0x06,0x01,0x00,//y89
    529            0x00,0x80,0x80,0x80,0x80,0x80,0x80,0x00,0x00,0x21,0x30,0x2C,0x22,0x21,0x30,0x00,//z90
    530            0x00,0x00,0x00,0x00,0x80,0x7C,0x02,0x02,0x00,0x00,0x00,0x00,0x00,0x3F,0x40,0x40,//{91
    531            0x00,0x00,0x00,0x00,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0x00,0x00,0x00,//|92
    532            0x00,0x02,0x02,0x7C,0x80,0x00,0x00,0x00,0x00,0x40,0x40,0x3F,0x00,0x00,0x00,0x00,//}93
    533            0x00,0x06,0x01,0x01,0x02,0x02,0x04,0x04,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,//~94
    534          
    535          };
    536          //数据水平，字节垂直

   \                                 In section .data, align 4
    537          uint8 longqiu96x64[768] = {
   \                     longqiu96x64:
   \        0x0   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128, 128, 192
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x80 0x80    
   \              0xC0         
   \       0x15   0xC0 0xC0          DC8 192, 192, 96, 96, 96, 48, 48, 48, 56, 24, 24, 24, 24, 12, 12, 12
   \              0x60 0x60    
   \              0x60 0x30    
   \              0x30 0x30    
   \              0x38 0x18    
   \              0x18 0x18    
   \              0x18 0x0C    
   \              0x0C 0x0C    
   \       0x25   0x0C 0x0C          DC8 12, 12, 14, 14, 14, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 14, 14
   \              0x0E 0x0E    
   \              0x0E 0x06    
   \              0x06 0x06    
   \              0x06 0x06    
   \              0x06 0x06    
   \              0x06 0x06    
   \              0x06 0x06    
   \              0x06 0x06    
   \              0x0E 0x0E    
   \       0x39   0x0C 0x0C          DC8 12, 12, 12, 12, 12, 28, 24, 24, 24, 24, 48, 48, 48, 112, 96, 96
   \              0x0C 0x0C    
   \              0x0C 0x1C    
   \              0x18 0x18    
   \              0x18 0x18    
   \              0x30 0x30    
   \              0x30 0x70    
   \              0x60 0x60    
   \       0x49   0xE0 0xC0          DC8 224, 192, 192, 128, 128, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0xC0 0x80    
   \              0x80 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \       0x5C   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128, 192, 224, 112, 48, 56, 28, 12
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x80    
   \              0xC0 0xE0    
   \              0x70 0x30    
   \              0x38 0x1C    
   \              0x0C         
   \       0x6F   0x06 0x07          DC8 6, 7, 3, 3, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x03 0x03    
   \              0x01 0x01    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \       0x86   0x80 0x80          DC8 128, 128, 128, 0, 0, 0, 0, 0, 128, 128, 240, 248, 248, 240, 128, 0
   \              0x80 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x80 0x80    
   \              0xF0 0xF8    
   \              0xF8 0xF0    
   \              0x80 0x00    
   \       0x96   0x00 0x80          DC8 0, 128, 224, 240, 248, 252, 60, 28, 12, 12, 28, 252, 248, 240, 224
   \              0xE0 0xF0    
   \              0xF8 0xFC    
   \              0x3C 0x1C    
   \              0x0C 0x0C    
   \              0x1C 0xFC    
   \              0xF8 0xF0    
   \              0xE0         
   \       0xA5   0x80 0x00          DC8 128, 0, 0, 0, 192, 192, 193, 1, 3, 3, 7, 6, 14, 12, 24, 56, 112, 96
   \              0x00 0x00    
   \              0xC0 0xC0    
   \              0xC1 0x01    
   \              0x03 0x03    
   \              0x07 0x06    
   \              0x0E 0x0C    
   \              0x18 0x38    
   \              0x70 0x60    
   \       0xB7   0xC0 0x80          DC8 192, 128, 128, 0, 0, 0, 0, 0, 0, 0, 0, 192, 240, 120, 30, 7, 51, 49
   \              0x80 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0xC0    
   \              0xF0 0x78    
   \              0x1E 0x07    
   \              0x33 0x31    
   \       0xC9   0x38 0x78          DC8 56, 120, 252, 254, 246, 192, 128, 0, 0, 0, 0, 192, 192, 128, 0, 248
   \              0xFC 0xFE    
   \              0xF6 0xC0    
   \              0x80 0x00    
   \              0x00 0x00    
   \              0x00 0xC0    
   \              0xC0 0x80    
   \              0x00 0xF8    
   \       0xD9   0xFC 0xDE          DC8 252, 222, 14, 15, 30, 190, 252, 240, 6, 255, 255, 255, 255, 3, 7
   \              0x0E 0x0F    
   \              0x1E 0xBE    
   \              0xFC 0xF0    
   \              0x06 0xFF    
   \              0xFF 0xFF    
   \              0xFF 0x03    
   \              0x07         
   \       0xE8   0xFF 0xFF          DC8 255, 255, 254, 128, 30, 63, 255, 255, 249, 249, 255, 255, 127, 31
   \              0xFE 0x80    
   \              0x1E 0x3F    
   \              0xFF 0xFF    
   \              0xF9 0xF9    
   \              0xFF 0xFF    
   \              0x7F 0x1F    
   \       0xF6   0x0E 0x7F          DC8 14, 127, 255, 255, 255, 193, 128, 206, 206, 198, 192, 255, 255, 255
   \              0xFF 0xFF    
   \              0xFF 0xC1    
   \              0x80 0xCE    
   \              0xCE 0xC6    
   \              0xC0 0xFF    
   \              0xFF 0xFF    
   \      0x104   0xFF 0x3F          DC8 255, 63, 128, 252, 252, 253, 125, 1, 192, 248, 248, 240, 112, 0
   \              0x80 0xFC    
   \              0xFC 0xFD    
   \              0x7D 0x01    
   \              0xC0 0xF8    
   \              0xF8 0xF0    
   \              0x70 0x00    
   \      0x112   0xC0 0x80          DC8 192, 128, 128, 128, 0, 0, 1, 7, 14, 60, 248, 224, 128, 0, 0, 254
   \              0x80 0x80    
   \              0x00 0x00    
   \              0x01 0x07    
   \              0x0E 0x3C    
   \              0xF8 0xE0    
   \              0x80 0x00    
   \              0x00 0xFE    
   \      0x122   0xFF 0x03          DC8 255, 3, 0, 0, 0, 0, 0, 0, 0, 1, 3, 15, 31, 127, 254, 252, 240, 240
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x01    
   \              0x03 0x0F    
   \              0x1F 0x7F    
   \              0xFE 0xFC    
   \              0xF0 0xF0    
   \      0x134   0xF0 0x7F          DC8 240, 127, 127, 62, 16, 3, 3, 15, 31, 31, 15, 15, 3, 4, 7, 7, 7, 7
   \              0x7F 0x3E    
   \              0x10 0x03    
   \              0x03 0x0F    
   \              0x1F 0x1F    
   \              0x0F 0x0F    
   \              0x03 0x04    
   \              0x07 0x07    
   \              0x07 0x07    
   \      0x146   0x06 0x00          DC8 6, 0, 7, 7, 7, 15, 30, 63, 127, 127, 127, 121, 115, 63, 63, 31, 14
   \              0x07 0x07    
   \              0x07 0x0F    
   \              0x1E 0x3F    
   \              0x7F 0x7F    
   \              0x7F 0x79    
   \              0x73 0x3F    
   \              0x3F 0x1F    
   \              0x0E         
   \      0x157   0x00 0x01          DC8 0, 1, 3, 3, 7, 7, 6, 14, 15, 15, 31, 63, 61, 8, 12, 31, 31, 31, 25
   \              0x03 0x03    
   \              0x07 0x07    
   \              0x06 0x0E    
   \              0x0F 0x0F    
   \              0x1F 0x3F    
   \              0x3D 0x08    
   \              0x0C 0x1F    
   \              0x1F 0x1F    
   \              0x19         
   \      0x16A   0x3C 0x7F          DC8 60, 127, 127, 127, 243, 240, 252, 254, 63, 31, 7, 1, 0, 0, 0, 0, 0
   \              0x7F 0x7F    
   \              0xF3 0xF0    
   \              0xFC 0xFE    
   \              0x3F 0x1F    
   \              0x07 0x01    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \      0x17B   0x00 0x00          DC8 0, 0, 207, 255, 112, 0, 3, 31, 126, 240, 192, 0, 0, 0, 0, 0, 0, 0
   \              0xCF 0xFF    
   \              0x70 0x00    
   \              0x03 0x1F    
   \              0x7E 0xF0    
   \              0xC0 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \      0x18D   0x00 0x00          DC8 0, 0, 0, 3, 3, 1, 1, 0, 0, 0, 0, 192, 192, 64, 64, 64, 64, 248, 120
   \              0x00 0x03    
   \              0x03 0x01    
   \              0x01 0x00    
   \              0x00 0x00    
   \              0x00 0xC0    
   \              0xC0 0x40    
   \              0x40 0x40    
   \              0x40 0xF8    
   \              0x78         
   \      0x1A0   0x40 0xC0          DC8 64, 192, 64, 88, 88, 64, 64, 64, 0, 0, 0, 0, 0, 128, 128, 128, 0, 0
   \              0x40 0x58    
   \              0x58 0x40    
   \              0x40 0x40    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x80    
   \              0x80 0x80    
   \              0x00 0x00    
   \      0x1B2   0x00 0x00          DC8 0, 0, 0, 0, 96, 240, 224, 32, 32, 32, 32, 48, 48, 56, 24, 16, 0, 0
   \              0x00 0x00    
   \              0x60 0xF0    
   \              0xE0 0x20    
   \              0x20 0x20    
   \              0x20 0x30    
   \              0x30 0x38    
   \              0x18 0x10    
   \              0x00 0x00    
   \      0x1C4   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x01    
   \              0x01 0x01    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \      0x1DA   0x80 0xE0          DC8 128, 224, 248, 63, 15, 0, 0, 0, 0, 0, 0, 3, 7, 14, 28, 56, 48, 96
   \              0xF8 0x3F    
   \              0x0F 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x03    
   \              0x07 0x0E    
   \              0x1C 0x38    
   \              0x30 0x60    
   \      0x1EC   0xE0 0xC0          DC8 224, 192, 128, 0, 0, 0, 0, 0, 0, 0, 64, 96, 96, 112, 48, 24, 12, 7
   \              0x80 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x40 0x60    
   \              0x60 0x70    
   \              0x30 0x18    
   \              0x0C 0x07    
   \      0x1FE   0x11 0x08          DC8 17, 8, 63, 125, 102, 231, 227, 192, 192, 192, 224, 96, 0, 0, 0, 3
   \              0x3F 0x7D    
   \              0x66 0xE7    
   \              0xE3 0xC0    
   \              0xC0 0xC0    
   \              0xE0 0x60    
   \              0x00 0x00    
   \              0x00 0x03    
   \      0x20E   0x03 0x03          DC8 3, 3, 0, 0, 96, 96, 96, 96, 96, 127, 127, 97, 97, 97, 97, 127, 127
   \              0x00 0x00    
   \              0x60 0x60    
   \              0x60 0x60    
   \              0x60 0x7F    
   \              0x7F 0x61    
   \              0x61 0x61    
   \              0x61 0x7F    
   \              0x7F         
   \      0x21F   0x61 0x61          DC8 97, 97, 225, 224, 224, 192, 192, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0xE1 0xE0    
   \              0xE0 0xC0    
   \              0xC0 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \      0x231   0x80 0xC0          DC8 128, 192, 192, 224, 112, 56, 24, 12, 7, 3, 1, 0, 0, 0, 0, 0, 0, 0
   \              0xC0 0xE0    
   \              0x70 0x38    
   \              0x18 0x0C    
   \              0x07 0x03    
   \              0x01 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \      0x243   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 3, 3, 6, 6, 12, 12, 24, 24, 56
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x01 0x01    
   \              0x03 0x03    
   \              0x06 0x06    
   \              0x0C 0x0C    
   \              0x18 0x18    
   \              0x38         
   \      0x258   0x30 0x30          DC8 48, 48, 112, 96, 96, 224, 192, 192, 192, 192, 192, 128, 128, 128
   \              0x70 0x60    
   \              0x60 0xE0    
   \              0xC0 0xC0    
   \              0xC0 0xC0    
   \              0xC0 0x80    
   \              0x80 0x80    
   \      0x266   0x81 0x80          DC8 129, 128, 128, 128, 128, 128, 0, 0, 0, 0, 0, 0, 0, 0, 128, 128, 128
   \              0x80 0x80    
   \              0x80 0x80    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x80 0x80    
   \              0x80         
   \      0x277   0x80 0x80          DC8 128, 128, 128, 128, 128, 128, 128, 192, 192, 192, 192, 192, 96, 96
   \              0x80 0x80    
   \              0x80 0x80    
   \              0x80 0xC0    
   \              0xC0 0xC0    
   \              0xC0 0xC0    
   \              0x60 0x60    
   \      0x285   0x60 0x30          DC8 96, 48, 48, 48, 24, 24, 28, 12, 14, 6, 7, 3, 3, 1, 0, 0, 0, 0, 0, 0
   \              0x30 0x30    
   \              0x18 0x18    
   \              0x1C 0x0C    
   \              0x0E 0x06    
   \              0x07 0x03    
   \              0x03 0x01    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \      0x299   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \      0x2B0   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x01 0x01    
   \              0x01 0x01    
   \              0x01         
   \      0x2C7   0x01 0x01          DC8 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1
   \              0x03 0x03    
   \              0x03 0x03    
   \              0x03 0x03    
   \              0x03 0x03    
   \              0x03 0x03    
   \              0x03 0x03    
   \              0x03 0x03    
   \              0x01 0x01    
   \              0x01 0x01    
   \              0x01 0x01    
   \              0x01         
   \      0x2DE   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \      0x2F5   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
    538          /* 
    539            0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,
    540            0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X80,0X80,0X80,0XC0,0XC0,0XC0,
    541            0XC0,0XC0,0X60,0X60,0X60,0X60,0X60,0X70,0X70,0X70,0X30,0X30,0X30,0X30,0X30,0X30,
    542            0X30,0X30,0X30,0X30,0X30,0X30,0X30,0X70,0X70,0X60,0X60,0X60,0X60,0X60,0XE0,0XC0,
    543            0XC0,0XC0,0XC0,0X80,0X80,0X80,0X80,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,
    544            0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,
    545            0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X80,0X80,0XC0,0XE0,0X60,0X30,
    546            0X38,0X18,0X1C,0X0C,0X0E,0X06,0X06,0X03,0X03,0X03,0X01,0X01,0X01,0X01,0X00,0X00,
    547            0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,
    548            0X80,0XC0,0XC0,0X80,0X00,0X00,0X00,0X00,0X00,0X80,0XC0,0XE0,0XE0,0XE0,0X60,0X60,
    549            0XE0,0XE0,0XC0,0X81,0X01,0X01,0X03,0X03,0X03,0X07,0X06,0X0E,0X0C,0X1C,0X18,0X38,
    550            0X30,0X70,0X60,0XC0,0XC0,0X80,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,
    551            0X00,0X00,0X00,0X80,0XC0,0XF0,0X38,0X9C,0X8E,0XC7,0XC3,0XE1,0XF1,0XB0,0X00,0X00,
    552            0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0XC0,0XE0,0XF0,0X70,0X78,0XF0,0XF0,0XE0,
    553            0X80,0X30,0XF8,0XF8,0XF8,0XF8,0X1C,0X3C,0XFC,0XF8,0XF0,0X00,0XF0,0XF8,0XFC,0XFC,
    554            0XCF,0XCF,0XFF,0XFF,0XFC,0XF8,0X70,0XFC,0XFF,0XFF,0XFF,0X0F,0X01,0X70,0X70,0X30,
    555            0X00,0XFF,0XFF,0XFF,0XFF,0XFC,0X00,0XE0,0XE0,0XEE,0XEE,0X0E,0X00,0XC0,0XC0,0X80,
    556            0X80,0X00,0X00,0X00,0X01,0X03,0X03,0X06,0X0C,0X3C,0X70,0XE0,0XC0,0X00,0X00,0X00,
    557            0X00,0XF0,0XFE,0X1F,0X03,0X00,0X00,0X01,0X01,0X01,0X03,0X0F,0X1F,0X7F,0XFE,0XFC,
    558            0XF0,0XE0,0X80,0X80,0X86,0XFE,0XFC,0XF0,0X87,0X1F,0X1E,0X78,0XF8,0XF8,0X7D,0X7F,
    559            0X1F,0X20,0X3F,0X3F,0X3F,0X3F,0X30,0X00,0X3F,0X3F,0X3F,0X7C,0XF0,0XF9,0XFF,0XFF,
    560            0XFF,0XCF,0X9F,0XFF,0XFB,0XF8,0X70,0X03,0X0F,0X1F,0X1F,0X3E,0X3C,0X36,0X76,0X7E,
    561            0X7E,0XFF,0XFF,0XEF,0X47,0X61,0XFC,0XFF,0XFF,0XCF,0XE3,0XF8,0XFE,0XFF,0X9F,0X87,
    562            0XE3,0XF0,0XFE,0XFC,0X3C,0X0C,0X00,0X00,0X00,0X00,0X00,0X01,0X07,0X7F,0XFC,0X80,
    563            0X00,0X1F,0XFF,0XF0,0X80,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X03,
    564            0X1F,0X1F,0X0F,0X0F,0X07,0X03,0X03,0X01,0X00,0X00,0X00,0X00,0X00,0X00,0XC0,0XC0,
    565            0X00,0X00,0X00,0XC0,0XC0,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X01,0X03,0X03,
    566            0X03,0X03,0X03,0X01,0X01,0X00,0X00,0X80,0X00,0X00,0X00,0X00,0X00,0X80,0X80,0XC0,
    567            0XC0,0X80,0X01,0X01,0X00,0X00,0X00,0X00,0X00,0X00,0X01,0X03,0X03,0X03,0X07,0X0F,
    568            0X0F,0X0F,0X01,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0XC0,0XFE,0X7F,0X03,
    569            0X00,0X00,0X00,0X03,0X07,0X1E,0X38,0X70,0XE0,0XC0,0X80,0X00,0X00,0X00,0X00,0X00,
    570            0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X06,0X86,0X82,0XC2,0X62,0X3A,0X8F,0X43,
    571            0XFA,0XEE,0X32,0X3A,0X1A,0X02,0X02,0X02,0X00,0X00,0X00,0X00,0X00,0X1C,0X1C,0X1C,
    572            0X00,0X00,0X00,0X00,0X00,0X00,0X03,0XFF,0XFF,0X09,0X09,0X09,0X09,0XF9,0XF9,0X09,
    573            0X08,0X08,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,
    574            0X00,0X00,0X00,0X00,0X00,0X80,0XC0,0XC0,0X60,0X38,0X1C,0X0F,0X07,0X01,0X00,0X00,
    575            0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X01,0X01,0X03,0X07,0X0E,0X0C,0X18,
    576            0X18,0X30,0X30,0X60,0X60,0XC0,0XC2,0XC3,0X83,0X83,0X81,0X00,0X00,0X00,0X00,0X00,
    577            0X01,0X03,0X03,0X07,0X07,0X06,0X0E,0X06,0X07,0X03,0X00,0X00,0X00,0X00,0X00,0X00,
    578            0X00,0X00,0X03,0X03,0X03,0X03,0X03,0X03,0X03,0X03,0X03,0X03,0X03,0X03,0X03,0X03,
    579            0X03,0X07,0X07,0X07,0X06,0X06,0X80,0X80,0X80,0XC0,0XC0,0XE0,0X60,0X70,0X30,0X38,
    580            0X18,0X1C,0X0E,0X06,0X07,0X03,0X01,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,
    581            0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,
    582            0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X01,0X01,0X01,0X03,0X03,0X03,0X07,0X06,0X06,
    583            0X06,0X06,0X0E,0X0C,0X0C,0X0C,0X0C,0X0C,0X0C,0X1C,0X1C,0X1C,0X18,0X18,0X18,0X18,
    584            0X18,0X18,0X18,0X18,0X1C,0X1C,0X1C,0X0C,0X0C,0X0C,0X0C,0X0C,0X0C,0X0C,0X06,0X06,
    585            0X06,0X06,0X06,0X03,0X03,0X03,0X01,0X01,0X01,0X00,0X00,0X00,0X00,0X00,0X00,0X00,
    586            0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,
    587          */
    588          0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,
    589          0X00,0X00,0X80,0X80,0XC0,0XC0,0XC0,0X60,0X60,0X60,0X30,0X30,0X30,0X38,0X18,0X18,
    590          0X18,0X18,0X0C,0X0C,0X0C,0X0C,0X0C,0X0E,0X0E,0X0E,0X06,0X06,0X06,0X06,0X06,0X06,
    591          0X06,0X06,0X06,0X06,0X06,0X06,0X06,0X0E,0X0E,0X0C,0X0C,0X0C,0X0C,0X0C,0X1C,0X18,
    592          0X18,0X18,0X18,0X30,0X30,0X30,0X70,0X60,0X60,0XE0,0XC0,0XC0,0X80,0X80,0X00,0X00,
    593          0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,
    594          0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X80,0XC0,0XE0,0X70,0X30,0X38,0X1C,0X0C,0X06,
    595          0X07,0X03,0X03,0X01,0X01,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,
    596          0X00,0X00,0X00,0X00,0X00,0X00,0X80,0X80,0X80,0X00,0X00,0X00,0X00,0X00,0X80,0X80,
    597          0XF0,0XF8,0XF8,0XF0,0X80,0X00,0X00,0X80,0XE0,0XF0,0XF8,0XFC,0X3C,0X1C,0X0C,0X0C,
    598          0X1C,0XFC,0XF8,0XF0,0XE0,0X80,0X00,0X00,0X00,0XC0,0XC0,0XC1,0X01,0X03,0X03,0X07,
    599          0X06,0X0E,0X0C,0X18,0X38,0X70,0X60,0XC0,0X80,0X80,0X00,0X00,0X00,0X00,0X00,0X00,
    600          0X00,0X00,0XC0,0XF0,0X78,0X1E,0X07,0X33,0X31,0X38,0X78,0XFC,0XFE,0XF6,0XC0,0X80,
    601          0X00,0X00,0X00,0X00,0XC0,0XC0,0X80,0X00,0XF8,0XFC,0XDE,0X0E,0X0F,0X1E,0XBE,0XFC,
    602          0XF0,0X06,0XFF,0XFF,0XFF,0XFF,0X03,0X07,0XFF,0XFF,0XFE,0X80,0X1E,0X3F,0XFF,0XFF,
    603          0XF9,0XF9,0XFF,0XFF,0X7F,0X1F,0X0E,0X7F,0XFF,0XFF,0XFF,0XC1,0X80,0XCE,0XCE,0XC6,
    604          0XC0,0XFF,0XFF,0XFF,0XFF,0X3F,0X80,0XFC,0XFC,0XFD,0X7D,0X01,0XC0,0XF8,0XF8,0XF0,
    605          0X70,0X00,0XC0,0X80,0X80,0X80,0X00,0X00,0X01,0X07,0X0E,0X3C,0XF8,0XE0,0X80,0X00,
    606          0X00,0XFE,0XFF,0X03,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X01,0X03,0X0F,0X1F,0X7F,
    607          0XFE,0XFC,0XF0,0XF0,0XF0,0X7F,0X7F,0X3E,0X10,0X03,0X03,0X0F,0X1F,0X1F,0X0F,0X0F,
    608          0X03,0X04,0X07,0X07,0X07,0X07,0X06,0X00,0X07,0X07,0X07,0X0F,0X1E,0X3F,0X7F,0X7F,
    609          0X7F,0X79,0X73,0X3F,0X3F,0X1F,0X0E,0X00,0X01,0X03,0X03,0X07,0X07,0X06,0X0E,0X0F,
    610          0X0F,0X1F,0X3F,0X3D,0X08,0X0C,0X1F,0X1F,0X1F,0X19,0X3C,0X7F,0X7F,0X7F,0XF3,0XF0,
    611          0XFC,0XFE,0X3F,0X1F,0X07,0X01,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0XCF,0XFF,0X70,
    612          0X00,0X03,0X1F,0X7E,0XF0,0XC0,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,
    613          0X03,0X03,0X01,0X01,0X00,0X00,0X00,0X00,0XC0,0XC0,0X40,0X40,0X40,0X40,0XF8,0X78,
    614          0X40,0XC0,0X40,0X58,0X58,0X40,0X40,0X40,0X00,0X00,0X00,0X00,0X00,0X80,0X80,0X80,
    615          0X00,0X00,0X00,0X00,0X00,0X00,0X60,0XF0,0XE0,0X20,0X20,0X20,0X20,0X30,0X30,0X38,
    616          0X18,0X10,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X01,
    617          0X01,0X01,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X80,0XE0,0XF8,0X3F,0X0F,0X00,
    618          0X00,0X00,0X00,0X00,0X00,0X03,0X07,0X0E,0X1C,0X38,0X30,0X60,0XE0,0XC0,0X80,0X00,
    619          0X00,0X00,0X00,0X00,0X00,0X00,0X40,0X60,0X60,0X70,0X30,0X18,0X0C,0X07,0X11,0X08,
    620          0X3F,0X7D,0X66,0XE7,0XE3,0XC0,0XC0,0XC0,0XE0,0X60,0X00,0X00,0X00,0X03,0X03,0X03,
    621          0X00,0X00,0X60,0X60,0X60,0X60,0X60,0X7F,0X7F,0X61,0X61,0X61,0X61,0X7F,0X7F,0X61,
    622          0X61,0XE1,0XE0,0XE0,0XC0,0XC0,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,
    623          0X00,0X80,0XC0,0XC0,0XE0,0X70,0X38,0X18,0X0C,0X07,0X03,0X01,0X00,0X00,0X00,0X00,
    624          0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X01,0X01,0X03,
    625          0X03,0X06,0X06,0X0C,0X0C,0X18,0X18,0X38,0X30,0X30,0X70,0X60,0X60,0XE0,0XC0,0XC0,
    626          0XC0,0XC0,0XC0,0X80,0X80,0X80,0X81,0X80,0X80,0X80,0X80,0X80,0X00,0X00,0X00,0X00,
    627          0X00,0X00,0X00,0X00,0X80,0X80,0X80,0X80,0X80,0X80,0X80,0X80,0X80,0X80,0XC0,0XC0,
    628          0XC0,0XC0,0XC0,0X60,0X60,0X60,0X30,0X30,0X30,0X18,0X18,0X1C,0X0C,0X0E,0X06,0X07,
    629          0X03,0X03,0X01,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,
    630          0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,
    631          0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,
    632          0X00,0X00,0X01,0X01,0X01,0X01,0X01,0X01,0X01,0X03,0X03,0X03,0X03,0X03,0X03,0X03,
    633          0X03,0X03,0X03,0X03,0X03,0X03,0X03,0X01,0X01,0X01,0X01,0X01,0X01,0X01,0X00,0X00,
    634          0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,
    635          0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,
    636          
    637          };

   \                                 In section .data, align 4
    638          uint8 LIBLOGO60x58[480] = { 
   \                     LIBLOGO60x58:
   \        0x0   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \       0x17   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \       0x2E   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 192
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0xC0         
   \       0x43   0xE0 0xF8          DC8 224, 248, 252, 254, 127, 63, 15, 15, 7, 7, 7, 135, 199, 199, 199
   \              0xFC 0xFE    
   \              0x7F 0x3F    
   \              0x0F 0x0F    
   \              0x07 0x07    
   \              0x07 0x87    
   \              0xC7 0xC7    
   \              0xC7         
   \       0x52   0xE7 0xEF          DC8 231, 239, 255, 255, 255, 239, 231, 231, 231, 231, 231, 239, 255
   \              0xFF 0xFF    
   \              0xFF 0xEF    
   \              0xE7 0xE7    
   \              0xE7 0xE7    
   \              0xE7 0xEF    
   \              0xFF         
   \       0x5F   0xFF 0xFF          DC8 255, 255, 239, 231, 231, 231, 231, 231, 247, 7, 15, 63, 127, 255
   \              0xEF 0xE7    
   \              0xE7 0xE7    
   \              0xE7 0xE7    
   \              0xF7 0x07    
   \              0x0F 0x3F    
   \              0x7F 0xFF    
   \       0x6D   0xFE 0xFC          DC8 254, 252, 240, 192, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 216, 220, 223
   \              0xF0 0xC0    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0xD8 0xDC    
   \              0xDF         
   \       0x7E   0xDF 0xDF          DC8 223, 223, 223, 215, 1, 0, 0, 0, 0, 0, 0, 62, 127, 255, 255, 227
   \              0xDF 0xD7    
   \              0x01 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x3E    
   \              0x7F 0xFF    
   \              0xFF 0xE3    
   \       0x8E   0xE1 0xE1          DC8 225, 225, 255, 255, 255, 224, 224, 224, 224, 224, 224, 224, 255
   \              0xFF 0xFF    
   \              0xFF 0xE0    
   \              0xE0 0xE0    
   \              0xE0 0xE0    
   \              0xE0 0xE0    
   \              0xFF         
   \       0x9B   0xFF 0xFF          DC8 255, 255, 224, 224, 224, 224, 193, 131, 7, 0, 0, 0, 0, 1, 215, 223
   \              0xE0 0xE0    
   \              0xE0 0xE0    
   \              0xC1 0x83    
   \              0x07 0x00    
   \              0x00 0x00    
   \              0x00 0x01    
   \              0xD7 0xDF    
   \       0xAB   0xDF 0xDF          DC8 223, 223, 223, 220, 216, 0, 0, 0, 0, 0, 0, 0, 1, 3, 15, 31, 63, 255
   \              0xDF 0xDC    
   \              0xD8 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x01 0x03    
   \              0x0F 0x1F    
   \              0x3F 0xFF    
   \       0xBD   0xFF 0xFE          DC8 255, 254, 248, 240, 224, 192, 128, 0, 0, 248, 240, 224, 192, 192
   \              0xF8 0xF0    
   \              0xE0 0xC0    
   \              0x80 0x00    
   \              0x00 0xF8    
   \              0xF0 0xE0    
   \              0xC0 0xC0    
   \       0xCB   0xC0 0xFF          DC8 192, 255, 255, 255, 192, 192, 192, 192, 192, 192, 192, 255, 255
   \              0xFF 0xFF    
   \              0xC0 0xC0    
   \              0xC0 0xC0    
   \              0xC0 0xC0    
   \              0xC0 0xFF    
   \              0xFF         
   \       0xD8   0xFF 0xC0          DC8 255, 192, 224, 225, 243, 255, 127, 63, 0, 192, 224, 248, 254, 255
   \              0xE0 0xE1    
   \              0xF3 0xFF    
   \              0x7F 0x3F    
   \              0x00 0xC0    
   \              0xE0 0xF8    
   \              0xFE 0xFF    
   \       0xE6   0xFF 0xFF          DC8 255, 255, 63, 31, 7, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1
   \              0x3F 0x1F    
   \              0x07 0x01    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x01         
   \       0xFB   0x07 0x0F          DC8 7, 15, 63, 127, 255, 254, 252, 249, 243, 193, 129, 1, 1, 255, 255
   \              0x3F 0x7F    
   \              0xFF 0xFE    
   \              0xFC 0xF9    
   \              0xF3 0xC1    
   \              0x81 0x01    
   \              0x01 0xFF    
   \              0xFF         
   \      0x10A   0xFF 0x01          DC8 255, 1, 1, 1, 1, 1, 1, 1, 255, 255, 255, 3, 1, 129, 192, 240, 252
   \              0x01 0x01    
   \              0x01 0x01    
   \              0x01 0x01    
   \              0xFF 0xFF    
   \              0xFF 0x03    
   \              0x01 0x81    
   \              0xC0 0xF0    
   \              0xFC         
   \      0x11B   0xFE 0xFF          DC8 254, 255, 255, 127, 63, 15, 7, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0xFF 0x7F    
   \              0x3F 0x0F    
   \              0x07 0x03    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \      0x12E   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 7, 15, 63, 127, 255
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x03 0x07    
   \              0x0F 0x3F    
   \              0x7F 0xFF    
   \      0x142   0xFF 0xFF          DC8 255, 255, 251, 243, 227, 195, 3, 3, 3, 3, 3, 131, 195, 243, 243
   \              0xFB 0xF3    
   \              0xE3 0xC3    
   \              0x03 0x03    
   \              0x03 0x03    
   \              0x03 0x83    
   \              0xC3 0xF3    
   \              0xF3         
   \      0x151   0xFB 0xFF          DC8 251, 255, 255, 255, 127, 63, 15, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0xFF 0xFF    
   \              0x7F 0x3F    
   \              0x0F 0x03    
   \              0x01 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \      0x164   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \      0x17B   0x00 0x00          DC8 0, 0, 0, 3, 7, 7, 31, 63, 127, 255, 254, 252, 252, 254, 255, 255
   \              0x00 0x03    
   \              0x07 0x07    
   \              0x1F 0x3F    
   \              0x7F 0xFF    
   \              0xFE 0xFC    
   \              0xFC 0xFE    
   \              0xFF 0xFF    
   \      0x18B   0x7F 0x3F          DC8 127, 63, 15, 7, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x0F 0x07    
   \              0x03 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \      0x1A0   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \      0x1B7   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 7, 15, 15, 7, 1, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x03 0x07    
   \              0x0F 0x0F    
   \              0x07 0x01    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \      0x1CD   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
    639            0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,
    640            0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,
    641            0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,
    642            0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,
    643            0X00,0X00,0XC0,0XE0,0XF8,0XFC,0XFE,0X7F,0X3F,0X0F,0X0F,0X07,0X07,0X07,0X87,0XC7,
    644            0XC7,0XC7,0XE7,0XEF,0XFF,0XFF,0XFF,0XEF,0XE7,0XE7,0XE7,0XE7,0XE7,0XEF,0XFF,0XFF,
    645            0XFF,0XEF,0XE7,0XE7,0XE7,0XE7,0XE7,0XF7,0X07,0X0F,0X3F,0X7F,0XFF,0XFE,0XFC,0XF0,
    646            0XC0,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0XD8,0XDC,0XDF,0XDF,0XDF,
    647            0XDF,0XD7,0X01,0X00,0X00,0X00,0X00,0X00,0X00,0X3E,0X7F,0XFF,0XFF,0XE3,0XE1,0XE1,
    648            0XFF,0XFF,0XFF,0XE0,0XE0,0XE0,0XE0,0XE0,0XE0,0XE0,0XFF,0XFF,0XFF,0XE0,0XE0,0XE0,
    649            0XE0,0XC1,0X83,0X07,0X00,0X00,0X00,0X00,0X01,0XD7,0XDF,0XDF,0XDF,0XDF,0XDC,0XD8,
    650            0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X01,0X03,0X0F,0X1F,0X3F,0XFF,0XFF,0XFE,0XF8,
    651            0XF0,0XE0,0XC0,0X80,0X00,0X00,0XF8,0XF0,0XE0,0XC0,0XC0,0XC0,0XFF,0XFF,0XFF,0XC0,
    652            0XC0,0XC0,0XC0,0XC0,0XC0,0XC0,0XFF,0XFF,0XFF,0XC0,0XE0,0XE1,0XF3,0XFF,0X7F,0X3F,
    653            0X00,0XC0,0XE0,0XF8,0XFE,0XFF,0XFF,0XFF,0X3F,0X1F,0X07,0X01,0X00,0X00,0X00,0X00,
    654            0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X01,0X07,0X0F,0X3F,0X7F,0XFF,
    655            0XFE,0XFC,0XF9,0XF3,0XC1,0X81,0X01,0X01,0XFF,0XFF,0XFF,0X01,0X01,0X01,0X01,0X01,
    656            0X01,0X01,0XFF,0XFF,0XFF,0X03,0X01,0X81,0XC0,0XF0,0XFC,0XFE,0XFF,0XFF,0X7F,0X3F,
    657            0X0F,0X07,0X03,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,
    658            0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X03,0X07,0X0F,0X3F,
    659            0X7F,0XFF,0XFF,0XFF,0XFB,0XF3,0XE3,0XC3,0X03,0X03,0X03,0X03,0X03,0X83,0XC3,0XF3,
    660            0XF3,0XFB,0XFF,0XFF,0XFF,0X7F,0X3F,0X0F,0X03,0X01,0X00,0X00,0X00,0X00,0X00,0X00,
    661            0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,
    662            0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X03,0X07,
    663            0X07,0X1F,0X3F,0X7F,0XFF,0XFE,0XFC,0XFC,0XFE,0XFF,0XFF,0X7F,0X3F,0X0F,0X07,0X03,
    664            0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,
    665            0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,
    666            0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,
    667            0X00,0X03,0X07,0X0F,0X0F,0X07,0X01,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,
    668            0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,
    669          }; 
    670          
    671          
    672          

   \                                 In section .bss, align 4
    673           uint8 str1[6];
   \                     str1:
   \        0x0                      DS8 8

   \                                 In section .bss, align 4
    674           uint8 str2[6];
   \                     str2:
   \        0x0                      DS8 8

   \                                 In section .bss, align 4
    675           uint8 str3[8];
   \                     str3:
   \        0x0                      DS8 8
    676          

   \                                 In section .bss, align 4
    677           uint8 str4[6];
   \                     str4:
   \        0x0                      DS8 8

   \                                 In section .bss, align 4
    678           uint8 str5[6];
   \                     str5:
   \        0x0                      DS8 8

   \                                 In section .bss, align 4
    679           uint8 str6[8];
   \                     str6:
   \        0x0                      DS8 8
    680          
    681          
    682          

   \                                 In section .text, align 4, keep-with-next
    683          void LCD_WrDat(uint8 data)    //数据逐位发送
    684          {
   \                     LCD_WrDat: (+1)
   \        0x0   0xB410             PUSH     {R4}
    685          	uint8 i=8;
   \        0x2   0x2208             MOVS     R2,#+8
    686          	//LCD_CS=0;;
    687          	LCD_DC=1;    //DC为1，表示数据发送
   \        0x4   0x2101             MOVS     R1,#+1
   \        0x6   0x....'....        LDR.W    R3,??DataTable12_2  ;; 0x43fe1024
   \        0xA   0x6019             STR      R1,[R3, #+0]
    688            LCD_SCL=0;
   \        0xC   0x....'....        LDR.W    R3,??DataTable12_3  ;; 0x43fe1020
   \       0x10   0x2100             MOVS     R1,#+0
   \       0x12   0x6019             STR      R1,[R3, #+0]
   \       0x14   0xE010             B.N      ??LCD_WrDat_0
    689            //asm("nop");    
    690            while(i--)
    691            {
    692              if(data&0x80){LCD_SDA=1;}
    693              else{LCD_SDA=0;}
   \                     ??LCD_WrDat_1: (+1)
   \       0x16   0x2100             MOVS     R1,#+0
   \       0x18   0x....'....        LDR.W    R4,??DataTable12_4  ;; 0x43fe101c
   \       0x1C   0x6021             STR      R1,[R4, #+0]
   \       0x1E   0xE005             B.N      ??LCD_WrDat_2
   \                     ??LCD_WrDat_3: (+1)
   \       0x20   0x0601             LSLS     R1,R0,#+24
   \       0x22   0xD5F8             BPL.N    ??LCD_WrDat_1
   \       0x24   0x2101             MOVS     R1,#+1
   \       0x26   0x....'....        LDR.W    R4,??DataTable12_4  ;; 0x43fe101c
   \       0x2A   0x6021             STR      R1,[R4, #+0]
    694              LCD_SCL=1; 
   \                     ??LCD_WrDat_2: (+1)
   \       0x2C   0x2101             MOVS     R1,#+1
   \       0x2E   0x6019             STR      R1,[R3, #+0]
    695              asm("nop");
   \       0x30   0xBF00             nop
    696          		//asm("nop");            
    697              LCD_SCL=0;;    
   \       0x32   0x2100             MOVS     R1,#+0
   \       0x34   0x6019             STR      R1,[R3, #+0]
    698              data<<=1;    
   \       0x36   0x0040             LSLS     R0,R0,#+1
    699            }
   \                     ??LCD_WrDat_0: (+1)
   \       0x38   0x0011             MOVS     R1,R2
   \       0x3A   0x1E4A             SUBS     R2,R1,#+1
   \       0x3C   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \       0x3E   0x2900             CMP      R1,#+0
   \       0x40   0xD1EE             BNE.N    ??LCD_WrDat_3
    700          	//LCD_CS=1;
    701          }
   \                     ??LCD_WrDat_4: (+1)
   \       0x42   0xBC10             POP      {R4}
   \       0x44   0x4770             BX       LR               ;; return

   \                                 In section .text, align 4, keep-with-next
    702          void LCD_WrCmd(uint8 cmd)
    703          {
   \                     LCD_WrCmd: (+1)
   \        0x0   0xB410             PUSH     {R4}
    704          	uint8 i=8;
   \        0x2   0x2208             MOVS     R2,#+8
    705          	
    706          	//LCD_CS=0;;
    707          	LCD_DC=0;;
   \        0x4   0x2100             MOVS     R1,#+0
   \        0x6   0x....'....        LDR.W    R3,??DataTable12_2  ;; 0x43fe1024
   \        0xA   0x6019             STR      R1,[R3, #+0]
    708            LCD_SCL=0;;
   \        0xC   0x....'....        LDR.W    R3,??DataTable12_3  ;; 0x43fe1020
   \       0x10   0x2100             MOVS     R1,#+0
   \       0x12   0x6019             STR      R1,[R3, #+0]
   \       0x14   0xE010             B.N      ??LCD_WrCmd_0
    709            //asm("nop");   
    710            while(i--)
    711            {
    712              if(cmd&0x80){LCD_SDA=1;}
    713              else{LCD_SDA=0;;}
   \                     ??LCD_WrCmd_1: (+1)
   \       0x16   0x2100             MOVS     R1,#+0
   \       0x18   0x....'....        LDR.W    R4,??DataTable12_4  ;; 0x43fe101c
   \       0x1C   0x6021             STR      R1,[R4, #+0]
   \       0x1E   0xE005             B.N      ??LCD_WrCmd_2
   \                     ??LCD_WrCmd_3: (+1)
   \       0x20   0x0601             LSLS     R1,R0,#+24
   \       0x22   0xD5F8             BPL.N    ??LCD_WrCmd_1
   \       0x24   0x2101             MOVS     R1,#+1
   \       0x26   0x....'....        LDR.W    R4,??DataTable12_4  ;; 0x43fe101c
   \       0x2A   0x6021             STR      R1,[R4, #+0]
    714              LCD_SCL=1;;
   \                     ??LCD_WrCmd_2: (+1)
   \       0x2C   0x2101             MOVS     R1,#+1
   \       0x2E   0x6019             STR      R1,[R3, #+0]
    715              asm("nop");;
   \       0x30   0xBF00             nop
    716          		//asm("nop");             
    717              LCD_SCL=0;;    
   \       0x32   0x2100             MOVS     R1,#+0
   \       0x34   0x6019             STR      R1,[R3, #+0]
    718              cmd<<=1;;   
   \       0x36   0x0040             LSLS     R0,R0,#+1
    719            } 	
   \                     ??LCD_WrCmd_0: (+1)
   \       0x38   0x0011             MOVS     R1,R2
   \       0x3A   0x1E4A             SUBS     R2,R1,#+1
   \       0x3C   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \       0x3E   0x2900             CMP      R1,#+0
   \       0x40   0xD1EE             BNE.N    ??LCD_WrCmd_3
    720          	//LCD_CS=1;
    721          }
   \                     ??LCD_WrCmd_4: (+1)
   \       0x42   0xBC10             POP      {R4}
   \       0x44   0x4770             BX       LR               ;; return

   \                                 In section .text, align 2, keep-with-next
    722          void LCD_Set_Pos(uint8 x, uint8 y)    //设置位置
    723          { 
   \                     LCD_Set_Pos: (+1)
   \        0x0   0xB510             PUSH     {R4,LR}
   \        0x2   0x0004             MOVS     R4,R0
    724            LCD_WrCmd(0xb0+y);       //表示从第y页开始
   \        0x4   0xF1B1 0x0050      SUBS     R0,R1,#+80
   \        0x8   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \        0xA   0x....'....        BL       LCD_WrCmd
    725            LCD_WrCmd(((x&0xf0)>>4)|0x10);
   \        0xE   0x0020             MOVS     R0,R4
   \       0x10   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \       0x12   0x0900             LSRS     R0,R0,#+4
   \       0x14   0xF050 0x0010      ORRS     R0,R0,#0x10
   \       0x18   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \       0x1A   0x....'....        BL       LCD_WrCmd
    726            LCD_WrCmd((x&0x0f)|0x01); 
   \       0x1E   0xF014 0x040F      ANDS     R4,R4,#0xF
   \       0x22   0xF054 0x0401      ORRS     R4,R4,#0x1
   \       0x26   0x0020             MOVS     R0,R4
   \       0x28   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \       0x2A   0x....'....        BL       LCD_WrCmd
    727          }
   \       0x2E   0xBD10             POP      {R4,PC}          ;; return
    728          //************************************************

   \                                 In section .text, align 2, keep-with-next
    729          void LCD_Fill_Line(uint8 line,uint8 bmp_data)   //自加填充整行亮或暗
    730          {
   \                     LCD_Fill_Line: (+1)
   \        0x0   0xB538             PUSH     {R3-R5,LR}
   \        0x2   0x000C             MOVS     R4,R1
    731            LCD_WrCmd(0xb0+line);
   \        0x4   0x3850             SUBS     R0,R0,#+80
   \        0x6   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \        0x8   0x....'....        BL       LCD_WrCmd
    732            LCD_WrCmd(0x01);
   \        0xC   0x2001             MOVS     R0,#+1
   \        0xE   0x....'....        BL       LCD_WrCmd
    733            LCD_WrCmd(0x10);
   \       0x12   0x2010             MOVS     R0,#+16
   \       0x14   0x....'....        BL       LCD_WrCmd
    734            for(uint8 x=0;x<X_WIDTH;x++)
   \       0x18   0x2500             MOVS     R5,#+0
   \       0x1A   0xE004             B.N      ??LCD_Fill_Line_0
    735              LCD_WrDat(bmp_data);
   \                     ??LCD_Fill_Line_1: (+1)
   \       0x1C   0x0020             MOVS     R0,R4
   \       0x1E   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \       0x20   0x....'....        BL       LCD_WrDat
   \       0x24   0x1C6D             ADDS     R5,R5,#+1
   \                     ??LCD_Fill_Line_0: (+1)
   \       0x26   0x0028             MOVS     R0,R5
   \       0x28   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \       0x2A   0x2880             CMP      R0,#+128
   \       0x2C   0xDBF6             BLT.N    ??LCD_Fill_Line_1
    736          }
   \       0x2E   0xBD31             POP      {R0,R4,R5,PC}    ;; return
    737          //************************************************

   \                                 In section .text, align 2, keep-with-next
    738          void LCD_Fill(uint8 bmp_data)     //填充整个屏幕白或黑
    739          {
   \                     LCD_Fill: (+1)
   \        0x0   0xB570             PUSH     {R4-R6,LR}
   \        0x2   0x0004             MOVS     R4,R0
    740          	uint8 y,x;
    741          	
    742          	for(y=0;y<8;y++)
   \        0x4   0x2500             MOVS     R5,#+0
   \        0x6   0xE009             B.N      ??LCD_Fill_0
    743          	{
    744          		LCD_WrCmd(0xb0+y);
    745          		LCD_WrCmd(0x01);
    746          		LCD_WrCmd(0x10);
    747          		for(x=0;x<X_WIDTH;x++)
    748          			LCD_WrDat(bmp_data);
   \                     ??LCD_Fill_1: (+1)
   \        0x8   0x0020             MOVS     R0,R4
   \        0xA   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \        0xC   0x....'....        BL       LCD_WrDat
   \       0x10   0x1C76             ADDS     R6,R6,#+1
   \                     ??LCD_Fill_2: (+1)
   \       0x12   0x0030             MOVS     R0,R6
   \       0x14   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \       0x16   0x2880             CMP      R0,#+128
   \       0x18   0xDBF6             BLT.N    ??LCD_Fill_1
   \       0x1A   0x1C6D             ADDS     R5,R5,#+1
   \                     ??LCD_Fill_0: (+1)
   \       0x1C   0x0028             MOVS     R0,R5
   \       0x1E   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \       0x20   0x2808             CMP      R0,#+8
   \       0x22   0xDA0C             BGE.N    ??LCD_Fill_3
   \       0x24   0xF1B5 0x0050      SUBS     R0,R5,#+80
   \       0x28   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \       0x2A   0x....'....        BL       LCD_WrCmd
   \       0x2E   0x2001             MOVS     R0,#+1
   \       0x30   0x....'....        BL       LCD_WrCmd
   \       0x34   0x2010             MOVS     R0,#+16
   \       0x36   0x....'....        BL       LCD_WrCmd
   \       0x3A   0x2600             MOVS     R6,#+0
   \       0x3C   0xE7E9             B.N      ??LCD_Fill_2
    749          	}
    750          }
   \                     ??LCD_Fill_3: (+1)
   \       0x3E   0xBD70             POP      {R4-R6,PC}       ;; return

   \                                 In section .text, align 2, keep-with-next
    751          void LCD_CLS(void)     //清屏
    752          {
   \                     LCD_CLS: (+1)
   \        0x0   0xB538             PUSH     {R3-R5,LR}
    753          	uint8 y,x;	
    754          	for(y=0;y<8;y++)
   \        0x2   0x2400             MOVS     R4,#+0
   \        0x4   0xE008             B.N      ??LCD_CLS_0
    755          	{
    756          		LCD_WrCmd(0xb0+y);
    757          		LCD_WrCmd(0x01);
    758          		LCD_WrCmd(0x10); 
    759          		for(x=0;x<X_WIDTH;x++)
    760          			LCD_WrDat(0);
   \                     ??LCD_CLS_1: (+1)
   \        0x6   0x2000             MOVS     R0,#+0
   \        0x8   0x....'....        BL       LCD_WrDat
   \        0xC   0x1C6D             ADDS     R5,R5,#+1
   \                     ??LCD_CLS_2: (+1)
   \        0xE   0x0028             MOVS     R0,R5
   \       0x10   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \       0x12   0x2880             CMP      R0,#+128
   \       0x14   0xDBF7             BLT.N    ??LCD_CLS_1
   \       0x16   0x1C64             ADDS     R4,R4,#+1
   \                     ??LCD_CLS_0: (+1)
   \       0x18   0x0020             MOVS     R0,R4
   \       0x1A   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \       0x1C   0x2808             CMP      R0,#+8
   \       0x1E   0xDA0C             BGE.N    ??LCD_CLS_3
   \       0x20   0xF1B4 0x0050      SUBS     R0,R4,#+80
   \       0x24   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \       0x26   0x....'....        BL       LCD_WrCmd
   \       0x2A   0x2001             MOVS     R0,#+1
   \       0x2C   0x....'....        BL       LCD_WrCmd
   \       0x30   0x2010             MOVS     R0,#+16
   \       0x32   0x....'....        BL       LCD_WrCmd
   \       0x36   0x2500             MOVS     R5,#+0
   \       0x38   0xE7E9             B.N      ??LCD_CLS_2
    761          	}
    762          }
   \                     ??LCD_CLS_3: (+1)
   \       0x3A   0xBD31             POP      {R0,R4,R5,PC}    ;; return

   \                                 In section .text, align 2, keep-with-next
    763          void LCD_DLY_ms(uint32 ms)
    764          {                         
   \                     LCD_DLY_ms: (+1)
   \        0x0   0xE006             B.N      ??LCD_DLY_ms_0
    765            uint32 a;
    766            while(ms)
    767            {
    768              a=1335;
   \                     ??LCD_DLY_ms_1: (+1)
   \        0x2   0xF240 0x5237      MOVW     R2,#+1335
    769              while(a--);
   \                     ??LCD_DLY_ms_2: (+1)
   \        0x6   0x0011             MOVS     R1,R2
   \        0x8   0x1E4A             SUBS     R2,R1,#+1
   \        0xA   0x2900             CMP      R1,#+0
   \        0xC   0xD1FB             BNE.N    ??LCD_DLY_ms_2
    770              ms--;
   \        0xE   0x1E40             SUBS     R0,R0,#+1
    771            }
   \                     ??LCD_DLY_ms_0: (+1)
   \       0x10   0x2800             CMP      R0,#+0
   \       0x12   0xD1F6             BNE.N    ??LCD_DLY_ms_1
    772            return;
   \       0x14   0x4770             BX       LR               ;; return
    773          }

   \                                 In section .text, align 2, keep-with-next
    774          void adjust(uint8 a)
    775          {
   \                     adjust: (+1)
   \        0x0   0xB580             PUSH     {R7,LR}
    776            LCD_WrCmd(a);	//指令数据0x0000~0x003f  
   \        0x2   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \        0x4   0x....'....        BL       LCD_WrCmd
    777          }
   \        0x8   0xBD01             POP      {R0,PC}          ;; return

   \                                 In section .text, align 2, keep-with-next
    778          void SetStartColumn(uint8 d)
    779          {
   \                     SetStartColumn: (+1)
   \        0x0   0xB510             PUSH     {R4,LR}
   \        0x2   0x0004             MOVS     R4,R0
    780          	LCD_WrCmd(0x00+d%16);		// Set Lower Column Start Address for Page Addressing Mode
   \        0x4   0x0020             MOVS     R0,R4
   \        0x6   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \        0x8   0x2110             MOVS     R1,#+16
   \        0xA   0xFB90 0xF2F1      SDIV     R2,R0,R1
   \        0xE   0xFB01 0x0012      MLS      R0,R1,R2,R0
   \       0x12   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \       0x14   0x....'....        BL       LCD_WrCmd
    781          						//   Default => 0x00
    782          	LCD_WrCmd(0x10+d/16);		// Set Higher Column Start Address for Page Addressing Mode
   \       0x18   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \       0x1A   0x2010             MOVS     R0,#+16
   \       0x1C   0xFB94 0xF0F0      SDIV     R0,R4,R0
   \       0x20   0x3010             ADDS     R0,R0,#+16
   \       0x22   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \       0x24   0x....'....        BL       LCD_WrCmd
    783          						//   Default => 0x10
    784          }
   \       0x28   0xBD10             POP      {R4,PC}          ;; return
    785          

   \                                 In section .text, align 2, keep-with-next
    786          void SetAddressingMode(uint8 d)
    787          {
   \                     SetAddressingMode: (+1)
   \        0x0   0xB510             PUSH     {R4,LR}
   \        0x2   0x0004             MOVS     R4,R0
    788          	LCD_WrCmd(0x20);			// Set Memory Addressing Mode
   \        0x4   0x2020             MOVS     R0,#+32
   \        0x6   0x....'....        BL       LCD_WrCmd
    789          	LCD_WrCmd(d);			//   Default => 0x02
   \        0xA   0x0020             MOVS     R0,R4
   \        0xC   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \        0xE   0x....'....        BL       LCD_WrCmd
    790          						//     0x00 => Horizontal Addressing Mode
    791          						//     0x01 => Vertical Addressing Mode
    792          						//     0x02 => Page Addressing Mode
    793          }
   \       0x12   0xBD10             POP      {R4,PC}          ;; return
    794          

   \                                 In section .text, align 2, keep-with-next
    795          void SetColumnAddress(uint8 a, uint8 b)
    796          {
   \                     SetColumnAddress: (+1)
   \        0x0   0xB538             PUSH     {R3-R5,LR}
   \        0x2   0x0004             MOVS     R4,R0
   \        0x4   0x000D             MOVS     R5,R1
    797          	LCD_WrCmd(0x21);			// Set Column Address
   \        0x6   0x2021             MOVS     R0,#+33
   \        0x8   0x....'....        BL       LCD_WrCmd
    798          	LCD_WrCmd(a);			//   Default => 0x00 (Column Start Address)
   \        0xC   0x0020             MOVS     R0,R4
   \        0xE   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \       0x10   0x....'....        BL       LCD_WrCmd
    799          	LCD_WrCmd(b);			//   Default => 0x7F (Column End Address)
   \       0x14   0x0028             MOVS     R0,R5
   \       0x16   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \       0x18   0x....'....        BL       LCD_WrCmd
    800          }
   \       0x1C   0xBD31             POP      {R0,R4,R5,PC}    ;; return
    801          

   \                                 In section .text, align 2, keep-with-next
    802          void SetPageAddress(uint8 a, uint8 b)
    803          {
   \                     SetPageAddress: (+1)
   \        0x0   0xB538             PUSH     {R3-R5,LR}
   \        0x2   0x0004             MOVS     R4,R0
   \        0x4   0x000D             MOVS     R5,R1
    804          	LCD_WrCmd(0x22);			// Set Page Address
   \        0x6   0x2022             MOVS     R0,#+34
   \        0x8   0x....'....        BL       LCD_WrCmd
    805          	LCD_WrCmd(a);			//   Default => 0x00 (Page Start Address)
   \        0xC   0x0020             MOVS     R0,R4
   \        0xE   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \       0x10   0x....'....        BL       LCD_WrCmd
    806          	LCD_WrCmd(b);			//   Default => 0x07 (Page End Address)
   \       0x14   0x0028             MOVS     R0,R5
   \       0x16   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \       0x18   0x....'....        BL       LCD_WrCmd
    807          }
   \       0x1C   0xBD31             POP      {R0,R4,R5,PC}    ;; return
    808          

   \                                 In section .text, align 2, keep-with-next
    809          void SetStartLine(uint8 d)
    810          {
   \                     SetStartLine: (+1)
   \        0x0   0xB580             PUSH     {R7,LR}
    811          	LCD_WrCmd(0x40|d);			// Set Display Start Line
   \        0x2   0xF050 0x0040      ORRS     R0,R0,#0x40
   \        0x6   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \        0x8   0x....'....        BL       LCD_WrCmd
    812          						//   Default => 0x40 (0x00)
    813          }
   \        0xC   0xBD01             POP      {R0,PC}          ;; return
    814          

   \                                 In section .text, align 2, keep-with-next
    815          void SetContrastControl(uint8 d)
    816          {
   \                     SetContrastControl: (+1)
   \        0x0   0xB510             PUSH     {R4,LR}
   \        0x2   0x0004             MOVS     R4,R0
    817          	LCD_WrCmd(0x81);			// Set Contrast Control
   \        0x4   0x2081             MOVS     R0,#+129
   \        0x6   0x....'....        BL       LCD_WrCmd
    818          	LCD_WrCmd(d);			//   Default => 0x7F
   \        0xA   0x0020             MOVS     R0,R4
   \        0xC   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \        0xE   0x....'....        BL       LCD_WrCmd
    819          }
   \       0x12   0xBD10             POP      {R4,PC}          ;; return
    820          

   \                                 In section .text, align 2, keep-with-next
    821          void Set_Charge_Pump(uint8 d)
    822          {
   \                     Set_Charge_Pump: (+1)
   \        0x0   0xB510             PUSH     {R4,LR}
   \        0x2   0x0004             MOVS     R4,R0
    823          	LCD_WrCmd(0x8D);			// Set Charge Pump
   \        0x4   0x208D             MOVS     R0,#+141
   \        0x6   0x....'....        BL       LCD_WrCmd
    824          	LCD_WrCmd(0x10|d);			//   Default => 0x10
   \        0xA   0xF054 0x0410      ORRS     R4,R4,#0x10
   \        0xE   0x0020             MOVS     R0,R4
   \       0x10   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \       0x12   0x....'....        BL       LCD_WrCmd
    825          						//     0x10 (0x00) => Disable Charge Pump
    826          						//     0x14 (0x04) => Enable Charge Pump
    827          }
   \       0x16   0xBD10             POP      {R4,PC}          ;; return
    828          

   \                                 In section .text, align 2, keep-with-next
    829          void Set_Segment_Remap(uint8 d)
    830          {
   \                     Set_Segment_Remap: (+1)
   \        0x0   0xB580             PUSH     {R7,LR}
    831          	LCD_WrCmd(0xA0|d);			// Set Segment Re-Map
   \        0x2   0xF050 0x00A0      ORRS     R0,R0,#0xA0
   \        0x6   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \        0x8   0x....'....        BL       LCD_WrCmd
    832          						//   Default => 0xA0
    833          						//     0xA0 (0x00) => Column Address 0 Mapped to SEG0
    834          						//     0xA1 (0x01) => Column Address 0 Mapped to SEG127
    835          }
   \        0xC   0xBD01             POP      {R0,PC}          ;; return
    836          

   \                                 In section .text, align 2, keep-with-next
    837          void Set_Entire_Display(uint8 d)
    838          {
   \                     Set_Entire_Display: (+1)
   \        0x0   0xB580             PUSH     {R7,LR}
    839          	LCD_WrCmd(0xA4|d);			// Set Entire Display On / Off
   \        0x2   0xF050 0x00A4      ORRS     R0,R0,#0xA4
   \        0x6   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \        0x8   0x....'....        BL       LCD_WrCmd
    840          						//   Default => 0xA4
    841          						//     0xA4 (0x00) => Normal Display
    842          						//     0xA5 (0x01) => Entire Display On
    843          }
   \        0xC   0xBD01             POP      {R0,PC}          ;; return
    844          

   \                                 In section .text, align 2, keep-with-next
    845          void Set_Inverse_Display(uint8 d)
    846          {
   \                     Set_Inverse_Display: (+1)
   \        0x0   0xB580             PUSH     {R7,LR}
    847          	LCD_WrCmd(0xA6|d);			// Set Inverse Display On/Off
   \        0x2   0xF050 0x00A6      ORRS     R0,R0,#0xA6
   \        0x6   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \        0x8   0x....'....        BL       LCD_WrCmd
    848          						//   Default => 0xA6
    849          						//     0xA6 (0x00) => Normal Display
    850          						//     0xA7 (0x01) => Inverse Display On
    851          }
   \        0xC   0xBD01             POP      {R0,PC}          ;; return
    852          

   \                                 In section .text, align 2, keep-with-next
    853          void Set_Multiplex_Ratio(uint8 d)
    854          {
   \                     Set_Multiplex_Ratio: (+1)
   \        0x0   0xB510             PUSH     {R4,LR}
   \        0x2   0x0004             MOVS     R4,R0
    855          	LCD_WrCmd(0xA8);			// Set Multiplex Ratio
   \        0x4   0x20A8             MOVS     R0,#+168
   \        0x6   0x....'....        BL       LCD_WrCmd
    856          	LCD_WrCmd(d);			//   Default => 0x3F (1/64 Duty)
   \        0xA   0x0020             MOVS     R0,R4
   \        0xC   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \        0xE   0x....'....        BL       LCD_WrCmd
    857          }
   \       0x12   0xBD10             POP      {R4,PC}          ;; return
    858          

   \                                 In section .text, align 2, keep-with-next
    859          void Set_Display_On_Off(uint8 d)
    860          {
   \                     Set_Display_On_Off: (+1)
   \        0x0   0xB580             PUSH     {R7,LR}
    861          	LCD_WrCmd(0xAE|d);			// Set Display On/Off
   \        0x2   0xF050 0x00AE      ORRS     R0,R0,#0xAE
   \        0x6   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \        0x8   0x....'....        BL       LCD_WrCmd
    862          						//   Default => 0xAE
    863          						//     0xAE (0x00) => Display Off
    864          						//     0xAF (0x01) => Display On
    865          }
   \        0xC   0xBD01             POP      {R0,PC}          ;; return
    866          

   \                                 In section .text, align 2, keep-with-next
    867          void SetStartPage(uint8 d)
    868          {
   \                     SetStartPage: (+1)
   \        0x0   0xB580             PUSH     {R7,LR}
    869          	LCD_WrCmd(0xB0|d);			// Set Page Start Address for Page Addressing Mode
   \        0x2   0xF050 0x00B0      ORRS     R0,R0,#0xB0
   \        0x6   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \        0x8   0x....'....        BL       LCD_WrCmd
    870          						//   Default => 0xB0 (0x00)
    871          }
   \        0xC   0xBD01             POP      {R0,PC}          ;; return
    872          

   \                                 In section .text, align 2, keep-with-next
    873          void Set_Common_Remap(uint8 d)
    874          {
   \                     Set_Common_Remap: (+1)
   \        0x0   0xB580             PUSH     {R7,LR}
    875          	LCD_WrCmd(0xC0|d);			// Set COM Output Scan Direction
   \        0x2   0xF050 0x00C0      ORRS     R0,R0,#0xC0
   \        0x6   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \        0x8   0x....'....        BL       LCD_WrCmd
    876          						//   Default => 0xC0
    877          						//     0xC0 (0x00) => Scan from COM0 to 63
    878          						//     0xC8 (0x08) => Scan from COM63 to 0
    879          }
   \        0xC   0xBD01             POP      {R0,PC}          ;; return
    880          

   \                                 In section .text, align 2, keep-with-next
    881          void Set_Display_Offset(uint8 d)
    882          {
   \                     Set_Display_Offset: (+1)
   \        0x0   0xB510             PUSH     {R4,LR}
   \        0x2   0x0004             MOVS     R4,R0
    883          	LCD_WrCmd(0xD3);			// Set Display Offset
   \        0x4   0x20D3             MOVS     R0,#+211
   \        0x6   0x....'....        BL       LCD_WrCmd
    884          	LCD_WrCmd(d);			//   Default => 0x00
   \        0xA   0x0020             MOVS     R0,R4
   \        0xC   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \        0xE   0x....'....        BL       LCD_WrCmd
    885          }
   \       0x12   0xBD10             POP      {R4,PC}          ;; return
    886          

   \                                 In section .text, align 2, keep-with-next
    887          void Set_Display_Clock(uint8 d)
    888          {
   \                     Set_Display_Clock: (+1)
   \        0x0   0xB510             PUSH     {R4,LR}
   \        0x2   0x0004             MOVS     R4,R0
    889          	LCD_WrCmd(0xD5);			// Set Display Clock Divide Ratio / Oscillator Frequency
   \        0x4   0x20D5             MOVS     R0,#+213
   \        0x6   0x....'....        BL       LCD_WrCmd
    890          	LCD_WrCmd(d);			//   Default => 0x80
   \        0xA   0x0020             MOVS     R0,R4
   \        0xC   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \        0xE   0x....'....        BL       LCD_WrCmd
    891          						//     D[3:0] => Display Clock Divider
    892          						//     D[7:4] => Oscillator Frequency
    893          }
   \       0x12   0xBD10             POP      {R4,PC}          ;; return
    894          

   \                                 In section .text, align 2, keep-with-next
    895          void Set_Preint8ge_Period(uint8 d)
    896          {
   \                     Set_Preint8ge_Period: (+1)
   \        0x0   0xB510             PUSH     {R4,LR}
   \        0x2   0x0004             MOVS     R4,R0
    897          	LCD_WrCmd(0xD9);			// Set Pre-Charge Period
   \        0x4   0x20D9             MOVS     R0,#+217
   \        0x6   0x....'....        BL       LCD_WrCmd
    898          	LCD_WrCmd(d);			//   Default => 0x22 (2 Display Clocks [Phase 2] / 2 Display Clocks [Phase 1])
   \        0xA   0x0020             MOVS     R0,R4
   \        0xC   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \        0xE   0x....'....        BL       LCD_WrCmd
    899          						//     D[3:0] => Phase 1 Period in 1~15 Display Clocks
    900          						//     D[7:4] => Phase 2 Period in 1~15 Display Clocks
    901          }
   \       0x12   0xBD10             POP      {R4,PC}          ;; return
    902          

   \                                 In section .text, align 2, keep-with-next
    903          void Set_Common_Config(uint8 d)
    904          {
   \                     Set_Common_Config: (+1)
   \        0x0   0xB510             PUSH     {R4,LR}
   \        0x2   0x0004             MOVS     R4,R0
    905          	LCD_WrCmd(0xDA);			// Set COM Pins Hardware Configuration
   \        0x4   0x20DA             MOVS     R0,#+218
   \        0x6   0x....'....        BL       LCD_WrCmd
    906          	LCD_WrCmd(0x02|d);			//   Default => 0x12 (0x10)
   \        0xA   0xF054 0x0402      ORRS     R4,R4,#0x2
   \        0xE   0x0020             MOVS     R0,R4
   \       0x10   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \       0x12   0x....'....        BL       LCD_WrCmd
    907          						//     Alternative COM Pin Configuration
    908          						//     Disable COM Left/Right Re-Map
    909          }
   \       0x16   0xBD10             POP      {R4,PC}          ;; return
    910          

   \                                 In section .text, align 2, keep-with-next
    911          void Set_VCOMH(uint8 d)
    912          {
   \                     Set_VCOMH: (+1)
   \        0x0   0xB510             PUSH     {R4,LR}
   \        0x2   0x0004             MOVS     R4,R0
    913          	LCD_WrCmd(0xDB);			// Set VCOMH Deselect Level
   \        0x4   0x20DB             MOVS     R0,#+219
   \        0x6   0x....'....        BL       LCD_WrCmd
    914          	LCD_WrCmd(d);			//   Default => 0x20 (0.77*VCC)
   \        0xA   0x0020             MOVS     R0,R4
   \        0xC   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \        0xE   0x....'....        BL       LCD_WrCmd
    915          }
   \       0x12   0xBD10             POP      {R4,PC}          ;; return
    916          

   \                                 In section .text, align 2, keep-with-next
    917          void Set_NOP(void)
    918          {
   \                     Set_NOP: (+1)
   \        0x0   0xB580             PUSH     {R7,LR}
    919          	LCD_WrCmd(0xE3);			// Command for No Operation
   \        0x2   0x20E3             MOVS     R0,#+227
   \        0x4   0x....'....        BL       LCD_WrCmd
    920          }
   \        0x8   0xBD01             POP      {R0,PC}          ;; return
    921          

   \                                 In section .text, align 2, keep-with-next
    922          void LCD_Init(void)        
    923          {
   \                     LCD_Init: (+1)
   \        0x0   0xB510             PUSH     {R4,LR}
    924            init_gpio_OLED();
   \        0x2   0x....'....        BL       init_gpio_OLED
    925            
    926            LCD_SCL=1;
   \        0x6   0x2001             MOVS     R0,#+1
   \        0x8   0x....'....        LDR.W    R1,??DataTable12_3  ;; 0x43fe1020
   \        0xC   0x6008             STR      R0,[R1, #+0]
    927            //LCD_CS=1;	//预制SLK和SS为高电平   	
    928            LCD_RST=0;
   \        0xE   0x....'....        LDR.W    R4,??DataTable12_5  ;; 0x43fe1028
   \       0x12   0x2000             MOVS     R0,#+0
   \       0x14   0x6020             STR      R0,[R4, #+0]
    929            LCD_DLY_ms(50);
   \       0x16   0x2032             MOVS     R0,#+50
   \       0x18   0x....'....        BL       LCD_DLY_ms
    930            LCD_RST=1;
   \       0x1C   0x2001             MOVS     R0,#+1
   \       0x1E   0x6020             STR      R0,[R4, #+0]
    931          	
    932            //从上电到下面开始初始化要有足够的时间，即等待RC复位完毕
    933            Set_Display_On_Off(0x00);		  // Display Off (0x00/0x01)
   \       0x20   0x2000             MOVS     R0,#+0
   \       0x22   0x....'....        BL       Set_Display_On_Off
    934            Set_Display_Clock(0x80);		  // Set Clock as 100 Frames/Sec
   \       0x26   0x2080             MOVS     R0,#+128
   \       0x28   0x....'....        BL       Set_Display_Clock
    935            Set_Multiplex_Ratio(0x3F);		// 1/64 Duty (0x0F~0x3F)
   \       0x2C   0x203F             MOVS     R0,#+63
   \       0x2E   0x....'....        BL       Set_Multiplex_Ratio
    936            Set_Display_Offset(0x00);		  // Shift Mapping RAM Counter (0x00~0x3F)
   \       0x32   0x2000             MOVS     R0,#+0
   \       0x34   0x....'....        BL       Set_Display_Offset
    937            SetStartLine(0x00);			      // Set Mapping RAM Display Start Line (0x00~0x3F)
   \       0x38   0x2000             MOVS     R0,#+0
   \       0x3A   0x....'....        BL       SetStartLine
    938            Set_Charge_Pump(0x04);		    // Enable Embedded DC/DC Converter (0x00/0x04)
   \       0x3E   0x2004             MOVS     R0,#+4
   \       0x40   0x....'....        BL       Set_Charge_Pump
    939            SetAddressingMode(0x02);		  // Set Page Addressing Mode (0x00/0x01/0x02)
   \       0x44   0x2002             MOVS     R0,#+2
   \       0x46   0x....'....        BL       SetAddressingMode
    940            Set_Segment_Remap(0x01);		  // Set SEG/Column Mapping     0x00左右反置 0x01正常
   \       0x4A   0x2001             MOVS     R0,#+1
   \       0x4C   0x....'....        BL       Set_Segment_Remap
    941            Set_Common_Remap(0x08);			  // Set COM/Row Scan Direction 0x00上下反置 0x08正常
   \       0x50   0x2008             MOVS     R0,#+8
   \       0x52   0x....'....        BL       Set_Common_Remap
    942            Set_Common_Config(0x10);		  // Set Sequential Configuration (0x00/0x10)
   \       0x56   0x2010             MOVS     R0,#+16
   \       0x58   0x....'....        BL       Set_Common_Config
    943            SetContrastControl(Brightness);	// Set SEG Output Current
   \       0x5C   0x20CF             MOVS     R0,#+207
   \       0x5E   0x....'....        BL       SetContrastControl
    944            Set_Preint8ge_Period(0xF1);		// Set Pre-Charge as 15 Clocks & Disint8ge as 1 Clock
   \       0x62   0x20F1             MOVS     R0,#+241
   \       0x64   0x....'....        BL       Set_Preint8ge_Period
    945            Set_VCOMH(0x40);			        // Set VCOM Deselect Level
   \       0x68   0x2040             MOVS     R0,#+64
   \       0x6A   0x....'....        BL       Set_VCOMH
    946            Set_Entire_Display(0x00);		  // Disable Entire Display On (0x00/0x01)
   \       0x6E   0x2000             MOVS     R0,#+0
   \       0x70   0x....'....        BL       Set_Entire_Display
    947            Set_Inverse_Display(0x00);		// Disable Inverse Display On (0x00/0x01)  
   \       0x74   0x2000             MOVS     R0,#+0
   \       0x76   0x....'....        BL       Set_Inverse_Display
    948            Set_Display_On_Off(0x01);		  // Display On (0x00/0x01)
   \       0x7A   0x2001             MOVS     R0,#+1
   \       0x7C   0x....'....        BL       Set_Display_On_Off
    949            LCD_Fill(0x00);  //初始清屏
   \       0x80   0x2000             MOVS     R0,#+0
   \       0x82   0x....'....        BL       LCD_Fill
    950            LCD_Set_Pos(0,0);  
   \       0x86   0x2100             MOVS     R1,#+0
   \       0x88   0x2000             MOVS     R0,#+0
   \       0x8A   0x....'....        BL       LCD_Set_Pos
    951          	
    952          } 
   \       0x8E   0xBD10             POP      {R4,PC}          ;; return
    953          //==============================================================
    954          //函数名： void LCD_PutPixel(uint8 x,uint8 y)
    955          //功能描述：绘制一个点（x,y）
    956          //参数：真实坐标值(x,y),x的范围0～127，y的范围0～64
    957          //返回：无
    958          //==============================================================

   \                                 In section .text, align 2, keep-with-next
    959          void LCD_PutPixel(uint8 x,uint8 y)
    960          {
   \                     LCD_PutPixel: (+1)
   \        0x0   0xB570             PUSH     {R4-R6,LR}
   \        0x2   0x0004             MOVS     R4,R0
   \        0x4   0x000D             MOVS     R5,R1
    961          	uint8 data1;  //data1当前点的数据 
    962          
    963          	LCD_Set_Pos(x,(uint8)(y>>3)); 
   \        0x6   0x0029             MOVS     R1,R5
   \        0x8   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \        0xA   0x08C9             LSRS     R1,R1,#+3
   \        0xC   0x0020             MOVS     R0,R4
   \        0xE   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \       0x10   0x....'....        BL       LCD_Set_Pos
    964          	data1 =(uint8)(0x01<<(y%8)); 	
   \       0x14   0x0028             MOVS     R0,R5
   \       0x16   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \       0x18   0x2108             MOVS     R1,#+8
   \       0x1A   0x2201             MOVS     R2,#+1
   \       0x1C   0xFB90 0xF6F1      SDIV     R6,R0,R1
   \       0x20   0xFB01 0x0616      MLS      R6,R1,R6,R0
   \       0x24   0xFA12 0xF606      LSLS     R6,R2,R6
    965          	LCD_WrCmd((uint8)(0xb0+(y>>3)));
   \       0x28   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \       0x2A   0x08ED             LSRS     R5,R5,#+3
   \       0x2C   0xF1B5 0x0050      SUBS     R0,R5,#+80
   \       0x30   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \       0x32   0x....'....        BL       LCD_WrCmd
    966          	LCD_WrCmd((uint8)(((x&0xf0)>>4)|0x10));
   \       0x36   0x0020             MOVS     R0,R4
   \       0x38   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \       0x3A   0x0900             LSRS     R0,R0,#+4
   \       0x3C   0xF050 0x0010      ORRS     R0,R0,#0x10
   \       0x40   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \       0x42   0x....'....        BL       LCD_WrCmd
    967          	LCD_WrCmd((uint8)((x&0x0f)|0x00));
   \       0x46   0xF014 0x040F      ANDS     R4,R4,#0xF
   \       0x4A   0x0020             MOVS     R0,R4
   \       0x4C   0x....'....        BL       LCD_WrCmd
    968          	LCD_WrDat(data1); 	 	
   \       0x50   0x0030             MOVS     R0,R6
   \       0x52   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \       0x54   0x....'....        BL       LCD_WrDat
    969          }
   \       0x58   0xBD70             POP      {R4-R6,PC}       ;; return
    970          
    971          //==============================================================
    972          //函数名：LCD_P6x8Str(uint8 x,uint8 y,uint8 *p)
    973          //功能描述：写入一组标准ASCII字符串
    974          //参数：显示的位置（x,y），y为页范围0～7，要显示的字符串
    975          //返回：无
    976          //==============================================================  

   \                                 In section .text, align 2, keep-with-next
    977          void LCD_P6x8Str(uint8 x,uint8 y,uint8 ch[])
    978          {
   \                     LCD_P6x8Str: (+1)
   \        0x0   0xE92D 0x43F8      PUSH     {R3-R9,LR}
   \        0x4   0x0004             MOVS     R4,R0
   \        0x6   0x000D             MOVS     R5,R1
   \        0x8   0x0016             MOVS     R6,R2
    979            uint8 c=0,i=0,j=0;      
   \        0xA   0x2000             MOVS     R0,#+0
   \        0xC   0x2000             MOVS     R0,#+0
   \        0xE   0x2700             MOVS     R7,#+0
   \       0x10   0xE014             B.N      ??LCD_P6x8Str_0
    980            while (ch[j]!='\0')
    981            {    
    982              c =ch[j]-32;
    983              if(x>126){x=0;y++;}
    984              LCD_Set_Pos(x,y);    
    985            	for(i=0;i<6;i++)     
    986            	  LCD_WrDat(F6x8[c][i]);  
   \                     ??LCD_P6x8Str_1: (+1)
   \       0x12   0x....'....        LDR.W    R1,??DataTable12_6
   \       0x16   0x464A             MOV      R2,R9
   \       0x18   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \       0x1A   0x2006             MOVS     R0,#+6
   \       0x1C   0x4342             MULS     R2,R0,R2
   \       0x1E   0xEB01 0x0002      ADD      R0,R1,R2
   \       0x22   0x4641             MOV      R1,R8
   \       0x24   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \       0x26   0x5C40             LDRB     R0,[R0, R1]
   \       0x28   0x....'....        BL       LCD_WrDat
   \       0x2C   0xF118 0x0801      ADDS     R8,R8,#+1
   \                     ??LCD_P6x8Str_2: (+1)
   \       0x30   0x4640             MOV      R0,R8
   \       0x32   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \       0x34   0x2806             CMP      R0,#+6
   \       0x36   0xDBEC             BLT.N    ??LCD_P6x8Str_1
    987            	x+=6;
   \       0x38   0x1DA4             ADDS     R4,R4,#+6
    988            	j++;
   \       0x3A   0x1C7F             ADDS     R7,R7,#+1
   \                     ??LCD_P6x8Str_0: (+1)
   \       0x3C   0x0038             MOVS     R0,R7
   \       0x3E   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \       0x40   0x5C30             LDRB     R0,[R6, R0]
   \       0x42   0x2800             CMP      R0,#+0
   \       0x44   0xD013             BEQ.N    ??LCD_P6x8Str_3
   \       0x46   0x0038             MOVS     R0,R7
   \       0x48   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \       0x4A   0x5C30             LDRB     R0,[R6, R0]
   \       0x4C   0xF1B0 0x0920      SUBS     R9,R0,#+32
   \       0x50   0x0020             MOVS     R0,R4
   \       0x52   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \       0x54   0x287F             CMP      R0,#+127
   \       0x56   0xDB01             BLT.N    ??LCD_P6x8Str_4
   \       0x58   0x2400             MOVS     R4,#+0
   \       0x5A   0x1C6D             ADDS     R5,R5,#+1
   \                     ??LCD_P6x8Str_4: (+1)
   \       0x5C   0x0029             MOVS     R1,R5
   \       0x5E   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \       0x60   0x0020             MOVS     R0,R4
   \       0x62   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \       0x64   0x....'....        BL       LCD_Set_Pos
   \       0x68   0xF05F 0x0800      MOVS     R8,#+0
   \       0x6C   0xE7E0             B.N      ??LCD_P6x8Str_2
    989            }
    990          }
   \                     ??LCD_P6x8Str_3: (+1)
   \       0x6E   0xE8BD 0x83F1      POP      {R0,R4-R9,PC}    ;; return
    991          //==============================================================
    992          //函数名：LCD_P8x16Str(uint8 x,uint8 y,uint8 *p)
    993          //功能描述：写入一组标准ASCII字符串
    994          //参数：显示的位置（x,y），y为页范围0～7，要显示的字符串
    995          //返回：无
    996          //==============================================================  

   \                                 In section .text, align 2, keep-with-next
    997          void LCD_P8x16Str(uint8 x,uint8 y,uint8 ch[])
    998          {
   \                     LCD_P8x16Str: (+1)
   \        0x0   0xE92D 0x43F8      PUSH     {R3-R9,LR}
   \        0x4   0x0004             MOVS     R4,R0
   \        0x6   0x000D             MOVS     R5,R1
   \        0x8   0x0016             MOVS     R6,R2
    999            uint8 c=0,i=0,j=0;
   \        0xA   0x2000             MOVS     R0,#+0
   \        0xC   0x2000             MOVS     R0,#+0
   \        0xE   0x2700             MOVS     R7,#+0
   \       0x10   0xE012             B.N      ??LCD_P8x16Str_0
   1000                  
   1001            while (ch[j]!='\0')
   1002            {    
   1003              c =ch[j]-32;
   1004              if(x>120){x=0;y++;}
   1005              LCD_Set_Pos(x,y);    
   1006            	for(i=0;i<8;i++)     
   1007            	  LCD_WrDat(F8X16[c*16+i]);
   1008            	LCD_Set_Pos(x,y+1);    
   1009            	for(i=0;i<8;i++)     
   1010            	  LCD_WrDat(F8X16[c*16+i+8]);  
   \                     ??LCD_P8x16Str_1: (+1)
   \       0x12   0x....'....        LDR.W    R0,??DataTable12_7
   \       0x16   0x4641             MOV      R1,R8
   \       0x18   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \       0x1A   0x0109             LSLS     R1,R1,#+4
   \       0x1C   0xFA51 0xF189      UXTAB    R1,R1,R9
   \       0x20   0x4408             ADD      R0,R0,R1
   \       0x22   0x7A00             LDRB     R0,[R0, #+8]
   \       0x24   0x....'....        BL       LCD_WrDat
   \       0x28   0xF119 0x0901      ADDS     R9,R9,#+1
   \                     ??LCD_P8x16Str_2: (+1)
   \       0x2C   0x4648             MOV      R0,R9
   \       0x2E   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \       0x30   0x2808             CMP      R0,#+8
   \       0x32   0xDBEE             BLT.N    ??LCD_P8x16Str_1
   1011            	x+=8;
   \       0x34   0x3408             ADDS     R4,R4,#+8
   1012            	j++;
   \       0x36   0x1C7F             ADDS     R7,R7,#+1
   \                     ??LCD_P8x16Str_0: (+1)
   \       0x38   0x0038             MOVS     R0,R7
   \       0x3A   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \       0x3C   0x5C30             LDRB     R0,[R6, R0]
   \       0x3E   0x2800             CMP      R0,#+0
   \       0x40   0xD02C             BEQ.N    ??LCD_P8x16Str_3
   \       0x42   0x0038             MOVS     R0,R7
   \       0x44   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \       0x46   0x5C30             LDRB     R0,[R6, R0]
   \       0x48   0xF1B0 0x0820      SUBS     R8,R0,#+32
   \       0x4C   0x0020             MOVS     R0,R4
   \       0x4E   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \       0x50   0x2879             CMP      R0,#+121
   \       0x52   0xDB01             BLT.N    ??LCD_P8x16Str_4
   \       0x54   0x2400             MOVS     R4,#+0
   \       0x56   0x1C6D             ADDS     R5,R5,#+1
   \                     ??LCD_P8x16Str_4: (+1)
   \       0x58   0x0029             MOVS     R1,R5
   \       0x5A   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \       0x5C   0x0020             MOVS     R0,R4
   \       0x5E   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \       0x60   0x....'....        BL       LCD_Set_Pos
   \       0x64   0xF05F 0x0900      MOVS     R9,#+0
   \       0x68   0xE00B             B.N      ??LCD_P8x16Str_5
   \                     ??LCD_P8x16Str_6: (+1)
   \       0x6A   0x....'....        LDR.W    R0,??DataTable12_7
   \       0x6E   0x4641             MOV      R1,R8
   \       0x70   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \       0x72   0x0109             LSLS     R1,R1,#+4
   \       0x74   0xFA51 0xF189      UXTAB    R1,R1,R9
   \       0x78   0x5C40             LDRB     R0,[R0, R1]
   \       0x7A   0x....'....        BL       LCD_WrDat
   \       0x7E   0xF119 0x0901      ADDS     R9,R9,#+1
   \                     ??LCD_P8x16Str_5: (+1)
   \       0x82   0x4648             MOV      R0,R9
   \       0x84   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \       0x86   0x2808             CMP      R0,#+8
   \       0x88   0xDBEF             BLT.N    ??LCD_P8x16Str_6
   \       0x8A   0x1C69             ADDS     R1,R5,#+1
   \       0x8C   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \       0x8E   0x0020             MOVS     R0,R4
   \       0x90   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \       0x92   0x....'....        BL       LCD_Set_Pos
   \       0x96   0xF05F 0x0900      MOVS     R9,#+0
   \       0x9A   0xE7C7             B.N      ??LCD_P8x16Str_2
   1013            }
   1014          }
   \                     ??LCD_P8x16Str_3: (+1)
   \       0x9C   0xE8BD 0x83F1      POP      {R0,R4-R9,PC}    ;; return
   1015          
   1016          //输出汉字字符串

   \                                 In section .text, align 2, keep-with-next
   1017          void LCD_P14x16Str(uint8 x,uint8 y,uint8 ch[])
   1018          {
   \                     LCD_P14x16Str: (+1)
   \        0x0   0xE92D 0x43F8      PUSH     {R3-R9,LR}
   \        0x4   0x0004             MOVS     R4,R0
   \        0x6   0x000D             MOVS     R5,R1
   \        0x8   0x0016             MOVS     R6,R2
   1019          	uint8 wm=0,ii = 0;
   \        0xA   0x2000             MOVS     R0,#+0
   \        0xC   0x2700             MOVS     R7,#+0
   1020          	uint32 adder=1; 
   \        0xE   0x2001             MOVS     R0,#+1
   \       0x10   0xE00A             B.N      ??LCD_P14x16Str_0
   1021          	
   1022          	while(ch[ii] != '\0')
   1023          	{
   1024            	wm = 0;
   1025            	adder = 1;
   1026            	while(F14x16_Idx[wm] > 127)
   1027            	{
   1028            		if(F14x16_Idx[wm] == ch[ii])
   1029            		{
   1030            			if(F14x16_Idx[wm + 1] == ch[ii + 1])
   1031            			{
   1032            				adder = wm * 14;
   1033            				break;
   1034            			}
   1035            		}
   1036            		wm += 2;			
   1037            	}
   1038            	if(x>118){x=0;y++;}
   1039            	LCD_Set_Pos(x , y); 
   1040            	if(adder != 1)// 显示汉字					
   1041            	{
   1042            		LCD_Set_Pos(x , y);
   1043            		for(wm = 0;wm < 14;wm++)               
   1044            		{
   1045            			LCD_WrDat(F14x16[adder]);	
   1046            			adder += 1;
   1047            		}      
   1048            		LCD_Set_Pos(x,y + 1); 
   1049            		for(wm = 0;wm < 14;wm++)          
   1050            		{
   1051            			LCD_WrDat(F14x16[adder]);
   1052            			adder += 1;
   1053            		}   		
   1054            	}
   1055            	else			  //显示空白字符			
   1056            	{
   1057            		ii += 1;
   1058                LCD_Set_Pos(x,y);
   1059            		for(wm = 0;wm < 16;wm++)
   1060            		{
   1061            				LCD_WrDat(0);
   1062            		}
   1063            		LCD_Set_Pos(x,y + 1);
   1064            		for(wm = 0;wm < 16;wm++)
   1065            		{   		
   1066            				LCD_WrDat(0);	
   \                     ??LCD_P14x16Str_1: (+1)
   \       0x12   0x2000             MOVS     R0,#+0
   \       0x14   0x....'....        BL       LCD_WrDat
   1067            		}
   \       0x18   0xF118 0x0801      ADDS     R8,R8,#+1
   \                     ??LCD_P14x16Str_2: (+1)
   \       0x1C   0x4640             MOV      R0,R8
   \       0x1E   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \       0x20   0x2810             CMP      R0,#+16
   \       0x22   0xDBF6             BLT.N    ??LCD_P14x16Str_1
   1068            	}
   1069            	x += 14;
   \                     ??LCD_P14x16Str_3: (+1)
   \       0x24   0x340E             ADDS     R4,R4,#+14
   1070            	ii += 2;
   \       0x26   0x1CBF             ADDS     R7,R7,#+2
   \                     ??LCD_P14x16Str_0: (+1)
   \       0x28   0x0038             MOVS     R0,R7
   \       0x2A   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \       0x2C   0x5C30             LDRB     R0,[R6, R0]
   \       0x2E   0x2800             CMP      R0,#+0
   \       0x30   0xD07A             BEQ.N    ??LCD_P14x16Str_4
   \       0x32   0x2100             MOVS     R1,#+0
   \       0x34   0xF05F 0x0801      MOVS     R8,#+1
   \       0x38   0xE000             B.N      ??LCD_P14x16Str_5
   \                     ??LCD_P14x16Str_6: (+1)
   \       0x3A   0x1C89             ADDS     R1,R1,#+2
   \                     ??LCD_P14x16Str_5: (+1)
   \       0x3C   0x....'....        LDR.W    R0,??DataTable12_8
   \       0x40   0x000A             MOVS     R2,R1
   \       0x42   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \       0x44   0x5C82             LDRB     R2,[R0, R2]
   \       0x46   0x2A80             CMP      R2,#+128
   \       0x48   0xDB15             BLT.N    ??LCD_P14x16Str_7
   \       0x4A   0x000A             MOVS     R2,R1
   \       0x4C   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \       0x4E   0x5C82             LDRB     R2,[R0, R2]
   \       0x50   0x003B             MOVS     R3,R7
   \       0x52   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \       0x54   0x5CF3             LDRB     R3,[R6, R3]
   \       0x56   0x429A             CMP      R2,R3
   \       0x58   0xD1EF             BNE.N    ??LCD_P14x16Str_6
   \       0x5A   0x000A             MOVS     R2,R1
   \       0x5C   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \       0x5E   0x4410             ADD      R0,R0,R2
   \       0x60   0x7840             LDRB     R0,[R0, #+1]
   \       0x62   0x003A             MOVS     R2,R7
   \       0x64   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \       0x66   0x4432             ADD      R2,R6,R2
   \       0x68   0x7852             LDRB     R2,[R2, #+1]
   \       0x6A   0x4290             CMP      R0,R2
   \       0x6C   0xD1E5             BNE.N    ??LCD_P14x16Str_6
   \       0x6E   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \       0x70   0x200E             MOVS     R0,#+14
   \       0x72   0x4341             MULS     R1,R0,R1
   \       0x74   0x4688             MOV      R8,R1
   \                     ??LCD_P14x16Str_7: (+1)
   \       0x76   0x0020             MOVS     R0,R4
   \       0x78   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \       0x7A   0x2877             CMP      R0,#+119
   \       0x7C   0xDB01             BLT.N    ??LCD_P14x16Str_8
   \       0x7E   0x2400             MOVS     R4,#+0
   \       0x80   0x1C6D             ADDS     R5,R5,#+1
   \                     ??LCD_P14x16Str_8: (+1)
   \       0x82   0x0029             MOVS     R1,R5
   \       0x84   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \       0x86   0x0020             MOVS     R0,R4
   \       0x88   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \       0x8A   0x....'....        BL       LCD_Set_Pos
   \       0x8E   0xF1B8 0x0F01      CMP      R8,#+1
   \       0x92   0xD02D             BEQ.N    ??LCD_P14x16Str_9
   \       0x94   0x0029             MOVS     R1,R5
   \       0x96   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \       0x98   0x0020             MOVS     R0,R4
   \       0x9A   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \       0x9C   0x....'....        BL       LCD_Set_Pos
   \       0xA0   0xF05F 0x0900      MOVS     R9,#+0
   \       0xA4   0xE009             B.N      ??LCD_P14x16Str_10
   \                     ??LCD_P14x16Str_11: (+1)
   \       0xA6   0x....'....        LDR.W    R0,??DataTable12_9
   \       0xAA   0xF810 0x0008      LDRB     R0,[R0, R8]
   \       0xAE   0x....'....        BL       LCD_WrDat
   \       0xB2   0xF118 0x0801      ADDS     R8,R8,#+1
   \       0xB6   0xF119 0x0901      ADDS     R9,R9,#+1
   \                     ??LCD_P14x16Str_10: (+1)
   \       0xBA   0x4648             MOV      R0,R9
   \       0xBC   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \       0xBE   0x280E             CMP      R0,#+14
   \       0xC0   0xDBF1             BLT.N    ??LCD_P14x16Str_11
   \       0xC2   0x1C69             ADDS     R1,R5,#+1
   \       0xC4   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \       0xC6   0x0020             MOVS     R0,R4
   \       0xC8   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \       0xCA   0x....'....        BL       LCD_Set_Pos
   \       0xCE   0xF05F 0x0900      MOVS     R9,#+0
   \                     ??LCD_P14x16Str_12: (+1)
   \       0xD2   0x4648             MOV      R0,R9
   \       0xD4   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \       0xD6   0x280E             CMP      R0,#+14
   \       0xD8   0xDAA4             BGE.N    ??LCD_P14x16Str_3
   \       0xDA   0x....'....        LDR.W    R0,??DataTable12_9
   \       0xDE   0xF810 0x0008      LDRB     R0,[R0, R8]
   \       0xE2   0x....'....        BL       LCD_WrDat
   \       0xE6   0xF118 0x0801      ADDS     R8,R8,#+1
   \       0xEA   0xF119 0x0901      ADDS     R9,R9,#+1
   \       0xEE   0xE7F0             B.N      ??LCD_P14x16Str_12
   \                     ??LCD_P14x16Str_9: (+1)
   \       0xF0   0x1C7F             ADDS     R7,R7,#+1
   \       0xF2   0x0029             MOVS     R1,R5
   \       0xF4   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \       0xF6   0x0020             MOVS     R0,R4
   \       0xF8   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \       0xFA   0x....'....        BL       LCD_Set_Pos
   \       0xFE   0xF05F 0x0800      MOVS     R8,#+0
   \      0x102   0xE004             B.N      ??LCD_P14x16Str_13
   \                     ??LCD_P14x16Str_14: (+1)
   \      0x104   0x2000             MOVS     R0,#+0
   \      0x106   0x....'....        BL       LCD_WrDat
   \      0x10A   0xF118 0x0801      ADDS     R8,R8,#+1
   \                     ??LCD_P14x16Str_13: (+1)
   \      0x10E   0x4640             MOV      R0,R8
   \      0x110   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \      0x112   0x2810             CMP      R0,#+16
   \      0x114   0xDBF6             BLT.N    ??LCD_P14x16Str_14
   \      0x116   0x1C69             ADDS     R1,R5,#+1
   \      0x118   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \      0x11A   0x0020             MOVS     R0,R4
   \      0x11C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \      0x11E   0x....'....        BL       LCD_Set_Pos
   \      0x122   0xF05F 0x0800      MOVS     R8,#+0
   \      0x126   0xE779             B.N      ??LCD_P14x16Str_2
   1071          	}
   1072          }
   \                     ??LCD_P14x16Str_4: (+1)
   \      0x128   0xE8BD 0x83F1      POP      {R0,R4-R9,PC}    ;; return
   1073          
   1074          //输出汉字和字符混合字符串

   \                                 In section .text, align 2, keep-with-next
   1075          void LCD_Print(uint8 x, uint8 y, uint8 ch[])
   1076          {
   \                     LCD_Print: (+1)
   \        0x0   0xB5F8             PUSH     {R3-R7,LR}
   \        0x2   0x0004             MOVS     R4,R0
   \        0x4   0x000D             MOVS     R5,R1
   \        0x6   0x0016             MOVS     R6,R2
   1077          	uint8 ch2[3];
   1078          	uint8 ii=0;        
   \        0x8   0x2700             MOVS     R7,#+0
   \        0xA   0xE015             B.N      ??LCD_Print_0
   1079          	while(ch[ii] != '\0')
   1080          	{
   1081          		if(ch[ii] > 127)
   1082          		{
   1083          			ch2[0] = ch[ii];
   \                     ??LCD_Print_1: (+1)
   \        0xC   0x0038             MOVS     R0,R7
   \        0xE   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \       0x10   0x5C30             LDRB     R0,[R6, R0]
   \       0x12   0xF88D 0x0000      STRB     R0,[SP, #+0]
   1084          	 		ch2[1] = ch[ii + 1];
   \       0x16   0x4668             MOV      R0,SP
   \       0x18   0x0039             MOVS     R1,R7
   \       0x1A   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \       0x1C   0x4431             ADD      R1,R6,R1
   \       0x1E   0x7849             LDRB     R1,[R1, #+1]
   \       0x20   0x7041             STRB     R1,[R0, #+1]
   1085          			ch2[2] = '\0';			//汉字为两个字节
   \       0x22   0x2100             MOVS     R1,#+0
   \       0x24   0x7081             STRB     R1,[R0, #+2]
   1086          			LCD_P14x16Str(x , y, ch2);	//显示汉字
   \       0x26   0x466A             MOV      R2,SP
   \       0x28   0x0029             MOVS     R1,R5
   \       0x2A   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \       0x2C   0x0020             MOVS     R0,R4
   \       0x2E   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \       0x30   0x....'....        BL       LCD_P14x16Str
   1087          			x += 14;
   \       0x34   0x340E             ADDS     R4,R4,#+14
   1088          			ii += 2;
   \       0x36   0x1CBF             ADDS     R7,R7,#+2
   1089          		}
   \                     ??LCD_Print_0: (+1)
   \       0x38   0x0038             MOVS     R0,R7
   \       0x3A   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \       0x3C   0x5C30             LDRB     R0,[R6, R0]
   \       0x3E   0x2800             CMP      R0,#+0
   \       0x40   0xD016             BEQ.N    ??LCD_Print_2
   \       0x42   0x0038             MOVS     R0,R7
   \       0x44   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \       0x46   0x5C30             LDRB     R0,[R6, R0]
   \       0x48   0x2880             CMP      R0,#+128
   \       0x4A   0xDADF             BGE.N    ??LCD_Print_1
   1090          		else
   1091          		{
   1092          			ch2[0] = ch[ii];	
   \       0x4C   0x0038             MOVS     R0,R7
   \       0x4E   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \       0x50   0x5C30             LDRB     R0,[R6, R0]
   \       0x52   0xF88D 0x0000      STRB     R0,[SP, #+0]
   1093          			ch2[1] = '\0';			//字母占一个字节
   \       0x56   0x2000             MOVS     R0,#+0
   \       0x58   0xF88D 0x0001      STRB     R0,[SP, #+1]
   1094          			LCD_P8x16Str(x , y , ch2);	//显示字母
   \       0x5C   0x466A             MOV      R2,SP
   \       0x5E   0x0029             MOVS     R1,R5
   \       0x60   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \       0x62   0x0020             MOVS     R0,R4
   \       0x64   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \       0x66   0x....'....        BL       LCD_P8x16Str
   1095          			x += 8;
   \       0x6A   0x3408             ADDS     R4,R4,#+8
   1096          			ii+= 1;
   \       0x6C   0x1C7F             ADDS     R7,R7,#+1
   \       0x6E   0xE7E3             B.N      ??LCD_Print_0
   1097          		}
   1098          	}
   1099          } 
   \                     ??LCD_Print_2: (+1)
   \       0x70   0xBDF1             POP      {R0,R4-R7,PC}    ;; return
   1100          
   1101          //==============================================================
   1102          //函数名： void Draw_BMP(uint8 x,uint8 y)
   1103          //功能描述：显示BMP图片128×64
   1104          //参数：起始点坐标(x,y),x的范围0～127，y为页的范围0～7
   1105          //返回：无
   1106          //==============================================================

   \                                 In section .text, align 2, keep-with-next
   1107          void Draw_BMP(uint8 x0,uint8 y0,uint8 x1,uint8 y1,uint8 bmp[])
   1108          { 	
   \                     Draw_BMP: (+1)
   \        0x0   0xE92D 0x47F0      PUSH     {R4-R10,LR}
   \        0x4   0x001E             MOVS     R6,R3
   1109            uint32 ii=0;
   \        0x6   0x2700             MOVS     R7,#+0
   1110            uint8 x,y;
   1111            
   1112            if(y1%8==0) y=y1/8;      
   \        0x8   0x0033             MOVS     R3,R6
   \        0xA   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \        0xC   0x2408             MOVS     R4,#+8
   \        0xE   0xFB93 0xF5F4      SDIV     R5,R3,R4
   \       0x12   0xFB04 0x3315      MLS      R3,R4,R5,R3
   \       0x16   0x2B00             CMP      R3,#+0
   \       0x18   0xD105             BNE.N    ??Draw_BMP_0
   \       0x1A   0x0033             MOVS     R3,R6
   \       0x1C   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \       0x1E   0x2408             MOVS     R4,#+8
   \       0x20   0xFB93 0xF3F4      SDIV     R3,R3,R4
   \       0x24   0xE005             B.N      ??Draw_BMP_1
   1113            else y=y1/8+1;
   \                     ??Draw_BMP_0: (+1)
   \       0x26   0x0033             MOVS     R3,R6
   \       0x28   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \       0x2A   0x2408             MOVS     R4,#+8
   \       0x2C   0xFB93 0xF3F4      SDIV     R3,R3,R4
   \       0x30   0x1C5B             ADDS     R3,R3,#+1
   1114          	for(y=y0;y<=y1;y++)
   \                     ??Draw_BMP_1: (+1)
   \       0x32   0x000C             MOVS     R4,R1
   \       0x34   0x0005             MOVS     R5,R0
   \       0x36   0x4690             MOV      R8,R2
   \       0x38   0xF8DD 0x9020      LDR      R9,[SP, #+32]
   \       0x3C   0xE00D             B.N      ??Draw_BMP_2
   1115          	{
   1116          		LCD_Set_Pos(x0,y);				
   1117              for(x=x0;x<x1;x++)
   1118          	    {      
   1119          	    	LCD_WrDat(bmp[ii++]);	    	
   \                     ??Draw_BMP_3: (+1)
   \       0x3E   0xF819 0x0007      LDRB     R0,[R9, R7]
   \       0x42   0x....'....        BL       LCD_WrDat
   \       0x46   0x1C7F             ADDS     R7,R7,#+1
   1120          	    }
   \       0x48   0xF11A 0x0A01      ADDS     R10,R10,#+1
   \                     ??Draw_BMP_4: (+1)
   \       0x4C   0x4650             MOV      R0,R10
   \       0x4E   0x4641             MOV      R1,R8
   \       0x50   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \       0x52   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \       0x54   0x4288             CMP      R0,R1
   \       0x56   0xD3F2             BCC.N    ??Draw_BMP_3
   \       0x58   0x1C64             ADDS     R4,R4,#+1
   \                     ??Draw_BMP_2: (+1)
   \       0x5A   0x0030             MOVS     R0,R6
   \       0x5C   0x0021             MOVS     R1,R4
   \       0x5E   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \       0x60   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \       0x62   0x4288             CMP      R0,R1
   \       0x64   0xD307             BCC.N    ??Draw_BMP_5
   \       0x66   0x0021             MOVS     R1,R4
   \       0x68   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \       0x6A   0x0028             MOVS     R0,R5
   \       0x6C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \       0x6E   0x....'....        BL       LCD_Set_Pos
   \       0x72   0x46AA             MOV      R10,R5
   \       0x74   0xE7EA             B.N      ??Draw_BMP_4
   1121          	}
   1122          }
   \                     ??Draw_BMP_5: (+1)
   \       0x76   0xE8BD 0x87F0      POP      {R4-R10,PC}      ;; return
   1123          /*****************************************************************************
   1124           函 数 名  : LED_PrintImage
   1125           功能描述  : 将图像显示出来
   1126           输入参数  : UCHAR8 *pucTable     二维图像数组的地址
   1127                       USHORT16 usRowNum    二维图像的行数1~64
   1128                       USHORT16 usColumnNum 二维图像的列数1~128
   1129           输出参数  : none
   1130           返 回 值  : none
   1131          *****************************************************************************/

   \                                 In section .text, align 2, keep-with-next
   1132          void LED_PrintImage(uint8 *pucTable,uint16 usRowNum, uint16 usColumnNum)
   1133          {
   \                     LED_PrintImage: (+1)
   \        0x0   0xE92D 0x47F0      PUSH     {R4-R10,LR}
   \        0x4   0x0004             MOVS     R4,R0
   \        0x6   0x4692             MOV      R10,R2
   1134              uint8 ucData;
   1135              uint16 i,j,k,m,n;
   1136             uint16 usRowTmp;
   1137          
   1138              m = usRowNum >> 3;   //计算图片行数以8位为一组完整的组数
   \        0x8   0x000D             MOVS     R5,R1
   \        0xA   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \        0xC   0x08ED             LSRS     R5,R5,#+3
   1139              n = usRowNum % 8;    //计算分完组后剩下的行数
   \        0xE   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \       0x10   0x2008             MOVS     R0,#+8
   \       0x12   0xFB91 0xF2F0      SDIV     R2,R1,R0
   \       0x16   0xFB00 0x1112      MLS      R1,R0,R2,R1
   \       0x1A   0x000E             MOVS     R6,R1
   1140              
   1141              for(i = 0; i < m; i++) //完整组行扫描
   \       0x1C   0x2700             MOVS     R7,#+0
   \       0x1E   0xE000             B.N      ??LED_PrintImage_0
   \                     ??LED_PrintImage_1: (+1)
   \       0x20   0x1C7F             ADDS     R7,R7,#+1
   \                     ??LED_PrintImage_0: (+1)
   \       0x22   0x0038             MOVS     R0,R7
   \       0x24   0x0029             MOVS     R1,R5
   \       0x26   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \       0x28   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \       0x2A   0x4288             CMP      R0,R1
   \       0x2C   0xD22E             BCS.N    ??LED_PrintImage_2
   1142              {
   1143                  LCD_Set_Pos(0,(uint8)i);
   \       0x2E   0x0039             MOVS     R1,R7
   \       0x30   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \       0x32   0x2000             MOVS     R0,#+0
   \       0x34   0x....'....        BL       LCD_Set_Pos
   1144                  usRowTmp = i << 3;    //计算当前所在行的下标                  
   \       0x38   0xEA5F 0x08C7      LSLS     R8,R7,#+3
   1145                  for(j = 0; j < usColumnNum; j++) //列扫描        
   \       0x3C   0xF05F 0x0900      MOVS     R9,#+0
   \       0x40   0xE01B             B.N      ??LED_PrintImage_3
   1146                  {
   1147                      ucData = 0;
   1148                      for(k = 0; k < 8; k++) //在i组中对这8行扫描
   1149                      {
   1150                          ucData = ucData >> 1;
   \                     ??LED_PrintImage_4: (+1)
   \       0x42   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \       0x44   0x0840             LSRS     R0,R0,#+1
   1151                              if((pucTable + (usRowTmp + k) * usColumnNum)[j] == WHITE)
   \       0x46   0x0011             MOVS     R1,R2
   \       0x48   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \       0x4A   0xFA11 0xF388      UXTAH    R3,R1,R8
   \       0x4E   0x4651             MOV      R1,R10
   \       0x50   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \       0x52   0x434B             MULS     R3,R1,R3
   \       0x54   0xEB04 0x0103      ADD      R1,R4,R3
   \       0x58   0x464B             MOV      R3,R9
   \       0x5A   0xB29B             UXTH     R3,R3            ;; ZeroExt  R3,R3,#+16,#+16
   \       0x5C   0x5CC9             LDRB     R1,[R1, R3]
   \       0x5E   0x29FF             CMP      R1,#+255
   \       0x60   0xD101             BNE.N    ??LED_PrintImage_5
   1152                              {
   1153                                 ucData = ucData | 0x80;
   \       0x62   0xF050 0x0080      ORRS     R0,R0,#0x80
   1154                              }
   1155                      }
   \                     ??LED_PrintImage_5: (+1)
   \       0x66   0x1C52             ADDS     R2,R2,#+1
   \                     ??LED_PrintImage_6: (+1)
   \       0x68   0x0011             MOVS     R1,R2
   \       0x6A   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \       0x6C   0x2908             CMP      R1,#+8
   \       0x6E   0xDBE8             BLT.N    ??LED_PrintImage_4
   1156                      LCD_WrDat(ucData);
   \       0x70   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \       0x72   0x....'....        BL       LCD_WrDat
   \       0x76   0xF119 0x0901      ADDS     R9,R9,#+1
   \                     ??LED_PrintImage_3: (+1)
   \       0x7A   0x4648             MOV      R0,R9
   \       0x7C   0x4651             MOV      R1,R10
   \       0x7E   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \       0x80   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \       0x82   0x4288             CMP      R0,R1
   \       0x84   0xD2CC             BCS.N    ??LED_PrintImage_1
   \       0x86   0x2000             MOVS     R0,#+0
   \       0x88   0x2200             MOVS     R2,#+0
   \       0x8A   0xE7ED             B.N      ??LED_PrintImage_6
   1157                  }
   1158              }
   1159              
   1160              LCD_Set_Pos(0,(uint8)i); //设置剩下的行显示的起始坐标
   \                     ??LED_PrintImage_2: (+1)
   \       0x8C   0x0039             MOVS     R1,R7
   \       0x8E   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \       0x90   0x2000             MOVS     R0,#+0
   \       0x92   0x....'....        BL       LCD_Set_Pos
   1161              usRowTmp = i << 3;       //计算当前所在行的下标                  
   \       0x96   0x00FF             LSLS     R7,R7,#+3
   1162              for(j = 0; j < usColumnNum; j++) //列扫描        
   \       0x98   0x2500             MOVS     R5,#+0
   \       0x9A   0xE020             B.N      ??LED_PrintImage_7
   1163              {
   1164                  ucData = 0;
   1165                  for(k = 0; k < n; k++) //对剩下的行扫描
   1166                  {
   1167                      ucData = ucData >> 1;
   \                     ??LED_PrintImage_8: (+1)
   \       0x9C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \       0x9E   0x0840             LSRS     R0,R0,#+1
   1168                      
   1169                      if((pucTable + (usRowTmp + k) * usColumnNum)[j] == 255)
   \       0xA0   0x0011             MOVS     R1,R2
   \       0xA2   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \       0xA4   0xFA11 0xF387      UXTAH    R3,R1,R7
   \       0xA8   0x4651             MOV      R1,R10
   \       0xAA   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \       0xAC   0x434B             MULS     R3,R1,R3
   \       0xAE   0xEB04 0x0103      ADD      R1,R4,R3
   \       0xB2   0x002B             MOVS     R3,R5
   \       0xB4   0xB29B             UXTH     R3,R3            ;; ZeroExt  R3,R3,#+16,#+16
   \       0xB6   0x5CC9             LDRB     R1,[R1, R3]
   \       0xB8   0x29FF             CMP      R1,#+255
   \       0xBA   0xD101             BNE.N    ??LED_PrintImage_9
   1170                      {
   1171                          ucData = ucData | 0x80;
   \       0xBC   0xF050 0x0080      ORRS     R0,R0,#0x80
   1172                      }      
   1173                  }
   \                     ??LED_PrintImage_9: (+1)
   \       0xC0   0x1C52             ADDS     R2,R2,#+1
   \                     ??LED_PrintImage_10: (+1)
   \       0xC2   0x0011             MOVS     R1,R2
   \       0xC4   0x0033             MOVS     R3,R6
   \       0xC6   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \       0xC8   0xB29B             UXTH     R3,R3            ;; ZeroExt  R3,R3,#+16,#+16
   \       0xCA   0x4299             CMP      R1,R3
   \       0xCC   0xD3E6             BCC.N    ??LED_PrintImage_8
   1174                  ucData = ucData >> (8 - n);
   \       0xCE   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \       0xD0   0xF1D6 0x0108      RSBS     R1,R6,#+8
   \       0xD4   0x4108             ASRS     R0,R0,R1
   1175                  LCD_WrDat(ucData);
   \       0xD6   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \       0xD8   0x....'....        BL       LCD_WrDat
   \       0xDC   0x1C6D             ADDS     R5,R5,#+1
   \                     ??LED_PrintImage_7: (+1)
   \       0xDE   0x0028             MOVS     R0,R5
   \       0xE0   0x4651             MOV      R1,R10
   \       0xE2   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \       0xE4   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \       0xE6   0x4288             CMP      R0,R1
   \       0xE8   0xD202             BCS.N    ??LED_PrintImage_11
   \       0xEA   0x2000             MOVS     R0,#+0
   \       0xEC   0x2200             MOVS     R2,#+0
   \       0xEE   0xE7E8             B.N      ??LED_PrintImage_10
   1176              }
   1177          
   1178              return;
   \                     ??LED_PrintImage_11: (+1)
   \       0xF0   0xE8BD 0x87F0      POP      {R4-R10,PC}      ;; return
   1179          }
   1180          
   1181          
   1182          /*---------------------*列表移动*---------------------*/      

   \                                 In section .data, align 4
   1183          int8 Change_To_Bit[8]=
   \                     Change_To_Bit:
   \        0x0   0x80 0x40          DC8 -128, 64, 32, 16, 8, 4, 2, 1
   \              0x20 0x10    
   \              0x08 0x04    
   \              0x02 0x01    
   1184          {
   1185            0x80,0x40,0x20,0x10,0x08,0x04,0x02,0x01
   1186          };

   \                                 In section .bss, align 4
   1187          int8 Temp_List[120];
   \                     Temp_List:
   \        0x0                      DS8 120

   \                                 In section .text, align 4, keep-with-next
   1188          void OLED_Write_Data(uint8 Data)
   1189          {
   \                     OLED_Write_Data: (+1)
   \        0x0   0xB410             PUSH     {R4}
   1190          	uint8 Temp_i=8;
   \        0x2   0x2208             MOVS     R2,#+8
   1191          	LCD_DC=1;;
   \        0x4   0x2101             MOVS     R1,#+1
   \        0x6   0x....             LDR.N    R3,??DataTable12_2  ;; 0x43fe1024
   \        0x8   0x6019             STR      R1,[R3, #+0]
   1192            LCD_SCL=0;;
   \        0xA   0x....             LDR.N    R3,??DataTable12_3  ;; 0x43fe1020
   \        0xC   0x2100             MOVS     R1,#+0
   \        0xE   0x6019             STR      R1,[R3, #+0]
   \       0x10   0xE00E             B.N      ??OLED_Write_Data_0
   1193            while(Temp_i--)
   1194            {
   1195              if(Data&0x80){LCD_SDA=1;}
   1196              else{LCD_SDA=0;}
   \                     ??OLED_Write_Data_1: (+1)
   \       0x12   0x2100             MOVS     R1,#+0
   \       0x14   0x....             LDR.N    R4,??DataTable12_4  ;; 0x43fe101c
   \       0x16   0x6021             STR      R1,[R4, #+0]
   \       0x18   0xE004             B.N      ??OLED_Write_Data_2
   \                     ??OLED_Write_Data_3: (+1)
   \       0x1A   0x0601             LSLS     R1,R0,#+24
   \       0x1C   0xD5F9             BPL.N    ??OLED_Write_Data_1
   \       0x1E   0x2101             MOVS     R1,#+1
   \       0x20   0x....             LDR.N    R4,??DataTable12_4  ;; 0x43fe101c
   \       0x22   0x6021             STR      R1,[R4, #+0]
   1197              LCD_SCL=1; 
   \                     ??OLED_Write_Data_2: (+1)
   \       0x24   0x2101             MOVS     R1,#+1
   \       0x26   0x6019             STR      R1,[R3, #+0]
   1198              asm("nop");;
   \       0x28   0xBF00             nop
   1199              LCD_SCL=0;;    
   \       0x2A   0x2100             MOVS     R1,#+0
   \       0x2C   0x6019             STR      R1,[R3, #+0]
   1200              Data<<=1;    
   \       0x2E   0x0040             LSLS     R0,R0,#+1
   1201            }
   \                     ??OLED_Write_Data_0: (+1)
   \       0x30   0x0011             MOVS     R1,R2
   \       0x32   0x1E4A             SUBS     R2,R1,#+1
   \       0x34   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \       0x36   0x2900             CMP      R1,#+0
   \       0x38   0xD1EF             BNE.N    ??OLED_Write_Data_3
   1202          }
   \                     ??OLED_Write_Data_4: (+1)
   \       0x3A   0xBC10             POP      {R4}
   \       0x3C   0x4770             BX       LR               ;; return

   \                                 In section .text, align 2, keep-with-next
   1203          void List_Move(int8 New_Data)
   1204          // 对数组进行移位
   1205          {
   \                     List_Move: (+1)
   \        0x0   0xB410             PUSH     {R4}
   1206            static int32 Temp_i;
   1207            int32 Temp_j;
   1208            if(Temp_i<120)
   \        0x2   0x....             LDR.N    R2,??DataTable12_10
   \        0x4   0x6811             LDR      R1,[R2, #+0]
   \        0x6   0x2978             CMP      R1,#+120
   \        0x8   0xDA03             BGE.N    ??List_Move_0
   1209              Temp_List[Temp_i]=New_Data;
   \        0xA   0x....             LDR.N    R1,??DataTable12_11
   \        0xC   0x6813             LDR      R3,[R2, #+0]
   \        0xE   0x54C8             STRB     R0,[R1, R3]
   \       0x10   0xE00C             B.N      ??List_Move_1
   1210            else
   1211            {
   1212              for(Temp_j=0;Temp_j<119;Temp_j++)
   \                     ??List_Move_0: (+1)
   \       0x12   0x2100             MOVS     R1,#+0
   \       0x14   0xE005             B.N      ??List_Move_2
   1213                Temp_List[Temp_j]=Temp_List[Temp_j+1];  
   \                     ??List_Move_3: (+1)
   \       0x16   0x....             LDR.N    R3,??DataTable12_11
   \       0x18   0xEB03 0x0401      ADD      R4,R3,R1
   \       0x1C   0x7864             LDRB     R4,[R4, #+1]
   \       0x1E   0x545C             STRB     R4,[R3, R1]
   \       0x20   0x1C49             ADDS     R1,R1,#+1
   \                     ??List_Move_2: (+1)
   \       0x22   0x2977             CMP      R1,#+119
   \       0x24   0xDBF7             BLT.N    ??List_Move_3
   1214              Temp_List[119]=New_Data;  
   \       0x26   0x....             LDR.N    R1,??DataTable12_11
   \       0x28   0xF881 0x0077      STRB     R0,[R1, #+119]
   1215            }
   1216          
   1217            if(Temp_i>=120)
   \                     ??List_Move_1: (+1)
   \       0x2C   0x6810             LDR      R0,[R2, #+0]
   \       0x2E   0x2878             CMP      R0,#+120
   \       0x30   0xDB02             BLT.N    ??List_Move_4
   1218              Temp_i=120;
   \       0x32   0x2078             MOVS     R0,#+120
   \       0x34   0x6010             STR      R0,[R2, #+0]
   \       0x36   0xE002             B.N      ??List_Move_5
   1219            else
   1220              Temp_i++; 
   \                     ??List_Move_4: (+1)
   \       0x38   0x6810             LDR      R0,[R2, #+0]
   \       0x3A   0x1C40             ADDS     R0,R0,#+1
   \       0x3C   0x6010             STR      R0,[R2, #+0]
   1221          }
   \                     ??List_Move_5: (+1)
   \       0x3E   0xBC10             POP      {R4}
   \       0x40   0x4770             BX       LR               ;; return

   \                                 In section .bss, align 4
   \                     `List_Move::Temp_i`:
   \        0x0                      DS8 4
   1222          /*-------------------*显示列表图形*-------------------*/      

   \                                 In section .text, align 2, keep-with-next
   1223          void Delay_temp(int32 x)
   1224          {
   1225            int32 Temp_i,Temp_j;
   1226            for(Temp_i=0;Temp_i<1000;Temp_i++)
   \                     Delay_temp: (+1)
   \        0x0   0x2100             MOVS     R1,#+0
   \        0x2   0xE003             B.N      ??Delay_temp_0
   1227              for(Temp_j=0;Temp_j<x;Temp_j++);
   \                     ??Delay_temp_1: (+1)
   \        0x4   0x1C52             ADDS     R2,R2,#+1
   \                     ??Delay_temp_2: (+1)
   \        0x6   0x4282             CMP      R2,R0
   \        0x8   0xDBFC             BLT.N    ??Delay_temp_1
   \        0xA   0x1C49             ADDS     R1,R1,#+1
   \                     ??Delay_temp_0: (+1)
   \        0xC   0xF5B1 0x7F7A      CMP      R1,#+1000
   \       0x10   0xDA01             BGE.N    ??Delay_temp_3
   \       0x12   0x2200             MOVS     R2,#+0
   \       0x14   0xE7F7             B.N      ??Delay_temp_2
   1228          }
   \                     ??Delay_temp_3: (+1)
   \       0x16   0x4770             BX       LR               ;; return
   1229          

   \                                 In section .text, align 2, keep-with-next
   1230          void List_Paint(void)
   1231          // 将Temp_List列表里面的数据用一整幅图画出来
   1232          {
   \                     List_Paint: (+1)
   \        0x0   0xB538             PUSH     {R3-R5,LR}
   1233            uint8 Temp_i;
   1234            uint8 Cross;  
   1235          
   1236            for(Cross=0;Cross<6;Cross++)
   \        0x2   0x2400             MOVS     R4,#+0
   \        0x4   0xE000             B.N      ??List_Paint_0
   \                     ??List_Paint_1: (+1)
   \        0x6   0x1C64             ADDS     R4,R4,#+1
   \                     ??List_Paint_0: (+1)
   \        0x8   0x0020             MOVS     R0,R4
   \        0xA   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \        0xC   0x2806             CMP      R0,#+6
   \        0xE   0xDA23             BGE.N    ??List_Paint_2
   1237            {
   1238              LCD_Set_Pos(4,7-Cross);         //这边应该是设置图像起始的行数
   \       0x10   0xF1D4 0x0107      RSBS     R1,R4,#+7
   \       0x14   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \       0x16   0x2004             MOVS     R0,#+4
   \       0x18   0x....'....        BL       LCD_Set_Pos
   1239              for(Temp_i=0;Temp_i<120;Temp_i++) 
   \       0x1C   0x2500             MOVS     R5,#+0
   \                     ??List_Paint_3: (+1)
   \       0x1E   0x0028             MOVS     R0,R5
   \       0x20   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \       0x22   0x2878             CMP      R0,#+120
   \       0x24   0xDAEF             BGE.N    ??List_Paint_1
   1240              {
   1241                if(Temp_List[Temp_i]>>3==Cross)
   \       0x26   0x....             LDR.N    R0,??DataTable12_11
   \       0x28   0x0029             MOVS     R1,R5
   \       0x2A   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \       0x2C   0x5641             LDRSB    R1,[R0, R1]
   \       0x2E   0x10C9             ASRS     R1,R1,#+3
   \       0x30   0x0022             MOVS     R2,R4
   \       0x32   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \       0x34   0x4291             CMP      R1,R2
   \       0x36   0xD003             BEQ.N    ??List_Paint_4
   1242                {
   1243                  OLED_Write_Data(Change_To_Bit[ Temp_List[Temp_i]&0x07 ]);   
   1244                }
   1245                else 
   1246                {
   1247                  OLED_Write_Data(0x00);
   \                     ??List_Paint_5: (+1)
   \       0x38   0x2000             MOVS     R0,#+0
   \       0x3A   0x....'....        BL       OLED_Write_Data
   \       0x3E   0xE009             B.N      ??List_Paint_6
   1248                }     
   \                     ??List_Paint_4: (+1)
   \       0x40   0x....             LDR.N    R1,??DataTable12_12
   \       0x42   0x002A             MOVS     R2,R5
   \       0x44   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \       0x46   0x5C80             LDRB     R0,[R0, R2]
   \       0x48   0xF010 0x0007      ANDS     R0,R0,#0x7
   \       0x4C   0x5C08             LDRB     R0,[R1, R0]
   \       0x4E   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \       0x50   0x....'....        BL       OLED_Write_Data
   1249              }    
   \                     ??List_Paint_6: (+1)
   \       0x54   0x1C6D             ADDS     R5,R5,#+1
   \       0x56   0xE7E2             B.N      ??List_Paint_3
   1250            }
   1251          }
   \                     ??List_Paint_2: (+1)
   \       0x58   0xBD31             POP      {R0,R4,R5,PC}    ;; return

   \                                 In section .text, align 2, keep-with-next
   1252          void Paint_List(float New_Data,float Paint_Ave,float Paint_Margin)
   1253          // 将某个数据以列表刷新的形式显示出来
   1254          {
   \                     Paint_List: (+1)
   \        0x0   0xB5F8             PUSH     {R3-R7,LR}
   \        0x2   0x0007             MOVS     R7,R0
   \        0x4   0x000E             MOVS     R6,R1
   1255            uint8 Temp_Data;
   1256            
   1257            Temp_Data=(int8)(22.0/Paint_Margin*(New_Data-Paint_Ave)+26);
   \        0x6   0x0010             MOVS     R0,R2
   \        0x8   0x....'....        BL       __aeabi_f2d
   \        0xC   0x0002             MOVS     R2,R0
   \        0xE   0x000B             MOVS     R3,R1
   \       0x10   0x2000             MOVS     R0,#+0
   \       0x12   0x....             LDR.N    R1,??DataTable12_13  ;; 0x40360000
   \       0x14   0x....'....        BL       __aeabi_ddiv
   \       0x18   0x0004             MOVS     R4,R0
   \       0x1A   0x000D             MOVS     R5,R1
   \       0x1C   0x0038             MOVS     R0,R7
   \       0x1E   0x0031             MOVS     R1,R6
   \       0x20   0x....'....        BL       __aeabi_fsub
   \       0x24   0x....'....        BL       __aeabi_f2d
   \       0x28   0x0022             MOVS     R2,R4
   \       0x2A   0x002B             MOVS     R3,R5
   \       0x2C   0x....'....        BL       __aeabi_dmul
   \       0x30   0x2200             MOVS     R2,#+0
   \       0x32   0x....             LDR.N    R3,??DataTable12_14  ;; 0x403a0000
   \       0x34   0x....'....        BL       __aeabi_dadd
   \       0x38   0x....'....        BL       __aeabi_d2iz
   1258            List_Move(Temp_Data);
   \       0x3C   0xB240             SXTB     R0,R0            ;; SignExt  R0,R0,#+24,#+24
   \       0x3E   0x....'....        BL       List_Move
   1259            List_Paint();
   \       0x42   0x....'....        BL       List_Paint
   1260          }
   \       0x46   0xBDF1             POP      {R0,R4-R7,PC}    ;; return

   \                                 In section .text, align 2, keep-with-next
   1261          void Paint_Angle(float Angle)
   1262          {
   \                     Paint_Angle: (+1)
   \        0x0   0xB570             PUSH     {R4-R6,LR}
   1263            static int32 Temp_Count;
   1264            Temp_Count=(int)(Angle);
   \        0x2   0x....             LDR.N    R4,??DataTable12_15
   \        0x4   0x....'....        BL       __aeabi_f2iz
   \        0x8   0x6020             STR      R0,[R4, #+0]
   1265           // Temp_Count=(int)(Angle);
   1266            Paint_List(Temp_Count,0,25);    //已更改为80，原为25   80为显示范围
   \        0xA   0x....             LDR.N    R2,??DataTable12_16  ;; 0x41c80000
   \        0xC   0x2100             MOVS     R1,#+0
   \        0xE   0x000D             MOVS     R5,R1
   \       0x10   0x0016             MOVS     R6,R2
   \       0x12   0x6820             LDR      R0,[R4, #+0]
   \       0x14   0x....'....        BL       __aeabi_i2f
   \       0x18   0x0032             MOVS     R2,R6
   \       0x1A   0x0029             MOVS     R1,R5
   \       0x1C   0x....'....        BL       Paint_List
   1267            Delay_temp(56);                 //原来是200
   \       0x20   0x2038             MOVS     R0,#+56
   \       0x22   0x....'....        BL       Delay_temp
   1268          }
   \       0x26   0xBD70             POP      {R4-R6,PC}       ;; return

   \                                 In section .bss, align 4
   \                     `Paint_Angle::Temp_Count`:
   \        0x0                      DS8 4
   1269          
   1270          /************将浮点型数据转换为字符串************/
   1271          //fNum待变换浮点数
   1272          //str[]存储转换后数组
   1273          //dotsize 保留几位小数

   \                                 In section .text, align 2, keep-with-next
   1274          int Float_To_String(float fNum,uint8 str[],int dotsize)
   1275          {
   \                     Float_To_String: (+1)
   \        0x0   0xE92D 0x47F0      PUSH     {R4-R10,LR}
   \        0x4   0x4682             MOV      R10,R0
   \        0x6   0x000E             MOVS     R6,R1
   \        0x8   0x0015             MOVS     R5,R2
   1276          	// 定义变量
   1277          	int iSize = 0;//记录字符串长度的数
   \        0xA   0xF05F 0x0900      MOVS     R9,#+0
   1278          	int n = 0;//用作循环的临时变量
   \        0xE   0x2000             MOVS     R0,#+0
   1279          	uint8 *p = str;//做换向时用的指针
   \       0x10   0x0030             MOVS     R0,R6
   1280          	uint8 *s = str;//做换向时用的指针
   \       0x12   0x0037             MOVS     R7,R6
   1281          	int8 isnegative = 0;//负数标志
   \       0x14   0xF05F 0x0800      MOVS     R8,#+0
   1282          	uint32 i_predot;//小数点前的数
   1283          	uint32 i_afterdot;//小数点后的数
   1284          	float f_afterdot;//实数型的小数部分
   1285          
   1286          	//判断是否为负数     
   1287          	if(fNum < 0)
   \       0x18   0x4650             MOV      R0,R10
   \       0x1A   0x2100             MOVS     R1,#+0
   \       0x1C   0x....'....        BL       __aeabi_cfcmple
   \       0x20   0xD203             BCS.N    ??Float_To_String_0
   1288          	{
   1289          		isnegative = 1;//设置负数标志
   \       0x22   0xF05F 0x0801      MOVS     R8,#+1
   1290          		fNum = 0 - fNum;//将负数变为正数
   \       0x26   0xF09A 0x4A00      EORS     R10,R10,#0x80000000
   1291          	}
   1292          
   1293          	i_predot = (uint32)fNum;//将小数点之前的数变为整数
   \                     ??Float_To_String_0: (+1)
   \       0x2A   0x4650             MOV      R0,R10
   \       0x2C   0x....'....        BL       __aeabi_f2uiz
   \       0x30   0x0004             MOVS     R4,R0
   1294          	f_afterdot = fNum - i_predot;//单独取出小数点之后的数
   \       0x32   0x0020             MOVS     R0,R4
   \       0x34   0x....'....        BL       __aeabi_ui2f
   \       0x38   0x0001             MOVS     R1,R0
   \       0x3A   0x4650             MOV      R0,R10
   \       0x3C   0x....'....        BL       __aeabi_fsub
   \       0x40   0x0001             MOVS     R1,R0
   1295          	//根据设定的要保存的小数点后的位数，将小数点后相应的位数变到小数点之前
   1296          	for(n = dotsize;n > 0;n--)
   \       0x42   0x46AA             MOV      R10,R5
   \       0x44   0xE005             B.N      ??Float_To_String_1
   1297          	{
   1298          	        f_afterdot = f_afterdot*10;
   \                     ??Float_To_String_2: (+1)
   \       0x46   0x....             LDR.N    R0,??DataTable12_17  ;; 0x41200000
   \       0x48   0x....'....        BL       __aeabi_fmul
   \       0x4C   0x0001             MOVS     R1,R0
   1299          	}
   \       0x4E   0xF1BA 0x0A01      SUBS     R10,R10,#+1
   \                     ??Float_To_String_1: (+1)
   \       0x52   0xF1BA 0x0F01      CMP      R10,#+1
   \       0x56   0xDAF6             BGE.N    ??Float_To_String_2
   1300          	i_afterdot = (uint32)f_afterdot;//将小数点后相应位数的数字变为整数
   \       0x58   0x0008             MOVS     R0,R1
   \       0x5A   0x....'....        BL       __aeabi_f2uiz
   1301          
   1302          	//先将小数点后的数转换为字符串
   1303          	n=dotsize;
   \       0x5E   0x002A             MOVS     R2,R5
   \       0x60   0xE00D             B.N      ??Float_To_String_3
   1304          	while(i_afterdot > 0 |n > 0)
   1305          	{
   1306          		n--;
   \                     ??Float_To_String_4: (+1)
   \       0x62   0x1E52             SUBS     R2,R2,#+1
   1307          	 	str[iSize++] = i_afterdot % 10 + '0';//对10取余并变为ASCII码
   \       0x64   0x210A             MOVS     R1,#+10
   \       0x66   0xFBB0 0xF3F1      UDIV     R3,R0,R1
   \       0x6A   0xFB01 0x0113      MLS      R1,R1,R3,R0
   \       0x6E   0x3130             ADDS     R1,R1,#+48
   \       0x70   0xF806 0x1009      STRB     R1,[R6, R9]
   \       0x74   0xF119 0x0901      ADDS     R9,R9,#+1
   1308          	 	i_afterdot = i_afterdot / 10;//对10取商
   \       0x78   0x210A             MOVS     R1,#+10
   \       0x7A   0xFBB0 0xF0F1      UDIV     R0,R0,R1
   1309          	}
   \                     ??Float_To_String_3: (+1)
   \       0x7E   0x2800             CMP      R0,#+0
   \       0x80   0xD001             BEQ.N    ??Float_To_String_5
   \       0x82   0x2101             MOVS     R1,#+1
   \       0x84   0xE000             B.N      ??Float_To_String_6
   \                     ??Float_To_String_5: (+1)
   \       0x86   0x2100             MOVS     R1,#+0
   \                     ??Float_To_String_6: (+1)
   \       0x88   0x2A01             CMP      R2,#+1
   \       0x8A   0xDB01             BLT.N    ??Float_To_String_7
   \       0x8C   0x2301             MOVS     R3,#+1
   \       0x8E   0xE000             B.N      ??Float_To_String_8
   \                     ??Float_To_String_7: (+1)
   \       0x90   0x2300             MOVS     R3,#+0
   \                     ??Float_To_String_8: (+1)
   \       0x92   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \       0x94   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \       0x96   0x4319             ORRS     R1,R3,R1
   \       0x98   0x2900             CMP      R1,#+0
   \       0x9A   0xD1E2             BNE.N    ??Float_To_String_4
   1310                  if(dotsize==0)
   \       0x9C   0x2D00             CMP      R5,#+0
   \       0x9E   0xD105             BNE.N    ??Float_To_String_9
   1311                  {
   1312                    str[iSize++] = ' ';//小数点是0的时候，用空格替代
   \       0xA0   0x2020             MOVS     R0,#+32
   \       0xA2   0xF806 0x0009      STRB     R0,[R6, R9]
   \       0xA6   0xF119 0x0901      ADDS     R9,R9,#+1
   \       0xAA   0xE004             B.N      ??Float_To_String_10
   1313                  }
   1314                  else
   1315                  {
   1316          	str[iSize++] = '.';//加上小数点
   \                     ??Float_To_String_9: (+1)
   \       0xAC   0x202E             MOVS     R0,#+46
   \       0xAE   0xF806 0x0009      STRB     R0,[R6, R9]
   \       0xB2   0xF119 0x0901      ADDS     R9,R9,#+1
   1317                  }
   1318              //处理小数点前为0的情况。
   1319          	if(i_predot == 0)
   \                     ??Float_To_String_10: (+1)
   \       0xB6   0x2C00             CMP      R4,#+0
   \       0xB8   0xD112             BNE.N    ??Float_To_String_11
   1320          		str[iSize++] = '0';
   \       0xBA   0x2030             MOVS     R0,#+48
   \       0xBC   0xF806 0x0009      STRB     R0,[R6, R9]
   \       0xC0   0xF119 0x0901      ADDS     R9,R9,#+1
   \       0xC4   0xE00C             B.N      ??Float_To_String_11
   1321          	//再将小数点前的数转换为字符串
   1322          	while(i_predot > 0)
   1323          	{
   1324          	 	str[iSize++] = i_predot%10 + '0';//对10取余并变为ASCII码
   \                     ??Float_To_String_12: (+1)
   \       0xC6   0x200A             MOVS     R0,#+10
   \       0xC8   0xFBB4 0xF1F0      UDIV     R1,R4,R0
   \       0xCC   0xFB00 0x4011      MLS      R0,R0,R1,R4
   \       0xD0   0x3030             ADDS     R0,R0,#+48
   \       0xD2   0xF806 0x0009      STRB     R0,[R6, R9]
   \       0xD6   0xF119 0x0901      ADDS     R9,R9,#+1
   1325          	 	i_predot = i_predot / 10;//对10取商
   \       0xDA   0x200A             MOVS     R0,#+10
   \       0xDC   0xFBB4 0xF4F0      UDIV     R4,R4,R0
   1326          	}
   \                     ??Float_To_String_11: (+1)
   \       0xE0   0x2C00             CMP      R4,#+0
   \       0xE2   0xD1F0             BNE.N    ??Float_To_String_12
   1327          
   1328          	if(isnegative == 1)
   \       0xE4   0xFA4F 0xF888      SXTB     R8,R8            ;; SignExt  R8,R8,#+24,#+24
   \       0xE8   0xF1B8 0x0F01      CMP      R8,#+1
   \       0xEC   0xD104             BNE.N    ??Float_To_String_13
   1329          	str[iSize++] = '-';//如果是负数，则在最后加上负号
   \       0xEE   0x202D             MOVS     R0,#+45
   \       0xF0   0xF806 0x0009      STRB     R0,[R6, R9]
   \       0xF4   0xF119 0x0901      ADDS     R9,R9,#+1
   1330          	str[iSize] = '\0';//加上字符串结束标志
   \                     ??Float_To_String_13: (+1)
   \       0xF8   0x2000             MOVS     R0,#+0
   \       0xFA   0xF806 0x0009      STRB     R0,[R6, R9]
   1331          	
   1332          	p = str + iSize - 1;//将P指针指向字符串结束标志之前
   \       0xFE   0xEB06 0x0009      ADD      R0,R6,R9
   \      0x102   0x1E41             SUBS     R1,R0,#+1
   \      0x104   0xE00D             B.N      ??Float_To_String_14
   1333          
   1334          	for( ;p - s > 0;p--,s++)//将字符串中存储的数调头   
   1335          	{   
   1336          		*s^=*p;   
   \                     ??Float_To_String_15: (+1)
   \      0x106   0x783A             LDRB     R2,[R7, #+0]
   \      0x108   0x7808             LDRB     R0,[R1, #+0]
   \      0x10A   0x4042             EORS     R2,R0,R2
   \      0x10C   0x703A             STRB     R2,[R7, #+0]
   1337          		*p^=*s;   
   \      0x10E   0x780A             LDRB     R2,[R1, #+0]
   \      0x110   0x7838             LDRB     R0,[R7, #+0]
   \      0x112   0x4042             EORS     R2,R0,R2
   \      0x114   0x700A             STRB     R2,[R1, #+0]
   1338          		*s^=*p;   
   \      0x116   0x783A             LDRB     R2,[R7, #+0]
   \      0x118   0x7808             LDRB     R0,[R1, #+0]
   \      0x11A   0x4042             EORS     R2,R0,R2
   \      0x11C   0x703A             STRB     R2,[R7, #+0]
   1339          	}   
   \      0x11E   0x1E49             SUBS     R1,R1,#+1
   \      0x120   0x1C7F             ADDS     R7,R7,#+1
   \                     ??Float_To_String_14: (+1)
   \      0x122   0x1BC8             SUBS     R0,R1,R7
   \      0x124   0x2801             CMP      R0,#+1
   \      0x126   0xDAEE             BGE.N    ??Float_To_String_15
   1340          	// 返回指针字符串大小 
   1341          	return iSize;
   \      0x128   0x4648             MOV      R0,R9
   \      0x12A   0xE8BD 0x87F0      POP      {R4-R10,PC}      ;; return
   1342          }
   1343          

   \                                 In section .text, align 2, keep-with-next
   1344          void LCD_Write_Float(uint8 x,uint8 y,float Number)
   1345          {
   \                     LCD_Write_Float: (+1)
   \        0x0   0xB530             PUSH     {R4,R5,LR}
   \        0x2   0xB085             SUB      SP,SP,#+20
   \        0x4   0x0004             MOVS     R4,R0
   \        0x6   0x000D             MOVS     R5,R1
   \        0x8   0x0010             MOVS     R0,R2
   1346            int8 Temp_Buf[17];
   1347            Float_To_String(Number,(uint8 *)Temp_Buf,3);
   \        0xA   0x2203             MOVS     R2,#+3
   \        0xC   0x4669             MOV      R1,SP
   \        0xE   0x....'....        BL       Float_To_String
   1348            LCD_P6x8Str(x,y,(uint8 *)Temp_Buf);
   \       0x12   0x466A             MOV      R2,SP
   \       0x14   0x0029             MOVS     R1,R5
   \       0x16   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \       0x18   0x0020             MOVS     R0,R4
   \       0x1A   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \       0x1C   0x....'....        BL       LCD_P6x8Str
   1349          }
   \       0x20   0xB005             ADD      SP,SP,#+20
   \       0x22   0xBD30             POP      {R4,R5,PC}       ;; return
   1350          

   \                                 In section .text, align 2, keep-with-next
   1351          void LCD_Write_Int(uint8 x,uint8 y,int16 Number)
   1352          {
   \                     LCD_Write_Int: (+1)
   \        0x0   0xB5F0             PUSH     {R4-R7,LR}
   \        0x2   0xB085             SUB      SP,SP,#+20
   \        0x4   0x0004             MOVS     R4,R0
   \        0x6   0x000D             MOVS     R5,R1
   \        0x8   0x0010             MOVS     R0,R2
   1353            int8 Temp_Buf[17];
   1354            Float_To_String((float)Number,(uint8 *)Temp_Buf,0);
   \        0xA   0x2200             MOVS     R2,#+0
   \        0xC   0x4669             MOV      R1,SP
   \        0xE   0x000E             MOVS     R6,R1
   \       0x10   0x0017             MOVS     R7,R2
   \       0x12   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \       0x14   0x....'....        BL       __aeabi_i2f
   \       0x18   0x003A             MOVS     R2,R7
   \       0x1A   0x0031             MOVS     R1,R6
   \       0x1C   0x....'....        BL       Float_To_String
   1355            LCD_P6x8Str(x,y,(uint8 *)Temp_Buf);
   \       0x20   0x466A             MOV      R2,SP
   \       0x22   0x0029             MOVS     R1,R5
   \       0x24   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \       0x26   0x0020             MOVS     R0,R4
   \       0x28   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \       0x2A   0x....'....        BL       LCD_P6x8Str
   1356          }
   \       0x2E   0xB005             ADD      SP,SP,#+20
   \       0x30   0xBDF0             POP      {R4-R7,PC}       ;; return
   1357          

   \                                 In section .text, align 2, keep-with-next
   1358          void LCD_Write_Float_Dot(uint8 x,uint8 y,float Number,int dotNumber)
   1359          {
   \                     LCD_Write_Float_Dot: (+1)
   \        0x0   0xB530             PUSH     {R4,R5,LR}
   \        0x2   0xB085             SUB      SP,SP,#+20
   \        0x4   0x0004             MOVS     R4,R0
   \        0x6   0x000D             MOVS     R5,R1
   \        0x8   0x0010             MOVS     R0,R2
   1360            int8 Temp_Buf[17];
   1361            Float_To_String(Number,(uint8 *)Temp_Buf,dotNumber);
   \        0xA   0x001A             MOVS     R2,R3
   \        0xC   0x4669             MOV      R1,SP
   \        0xE   0x....'....        BL       Float_To_String
   1362            LCD_P6x8Str(x,y,(uint8 *)Temp_Buf);
   \       0x12   0x466A             MOV      R2,SP
   \       0x14   0x0029             MOVS     R1,R5
   \       0x16   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \       0x18   0x0020             MOVS     R0,R4
   \       0x1A   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \       0x1C   0x....'....        BL       LCD_P6x8Str
   1363          }
   \       0x20   0xB005             ADD      SP,SP,#+20
   \       0x22   0xBD30             POP      {R4,R5,PC}       ;; return
   1364          
   1365          

   \                                 In section .text, align 2, keep-with-next
   1366          void LCD_Write_Float_Dot_Chinese(uint8 x,uint8 y,float Number,int dotNumber)
   1367          {
   \                     LCD_Write_Float_Dot_Chinese: (+1)
   \        0x0   0xB530             PUSH     {R4,R5,LR}
   \        0x2   0xB085             SUB      SP,SP,#+20
   \        0x4   0x0004             MOVS     R4,R0
   \        0x6   0x000D             MOVS     R5,R1
   \        0x8   0x0010             MOVS     R0,R2
   1368            int8 Temp_Buf[17];
   1369            Float_To_String(Number,(uint8 *)Temp_Buf,dotNumber);
   \        0xA   0x001A             MOVS     R2,R3
   \        0xC   0x4669             MOV      R1,SP
   \        0xE   0x....'....        BL       Float_To_String
   1370            LCD_P8x16Str(x,y,(uint8 *)Temp_Buf);
   \       0x12   0x466A             MOV      R2,SP
   \       0x14   0x0029             MOVS     R1,R5
   \       0x16   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \       0x18   0x0020             MOVS     R0,R4
   \       0x1A   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \       0x1C   0x....'....        BL       LCD_P8x16Str
   1371          }
   \       0x20   0xB005             ADD      SP,SP,#+20
   \       0x22   0xBD30             POP      {R4,R5,PC}       ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12:
   \        0x0   0x....'....        DC32     gpio_init_struct_OLED

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_1:
   \        0x0   0x400F'F080        DC32     0x400ff080

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_2:
   \        0x0   0x43FE'1024        DC32     0x43fe1024

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_3:
   \        0x0   0x43FE'1020        DC32     0x43fe1020

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_4:
   \        0x0   0x43FE'101C        DC32     0x43fe101c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_5:
   \        0x0   0x43FE'1028        DC32     0x43fe1028

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_6:
   \        0x0   0x....'....        DC32     F6x8

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_7:
   \        0x0   0x....'....        DC32     F8X16

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_8:
   \        0x0   0x....'....        DC32     F14x16_Idx

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_9:
   \        0x0   0x....'....        DC32     F14x16

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_10:
   \        0x0   0x....'....        DC32     `List_Move::Temp_i`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_11:
   \        0x0   0x....'....        DC32     Temp_List

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_12:
   \        0x0   0x....'....        DC32     Change_To_Bit

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_13:
   \        0x0   0x4036'0000        DC32     0x40360000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_14:
   \        0x0   0x403A'0000        DC32     0x403a0000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_15:
   \        0x0   0x....'....        DC32     `Paint_Angle::Temp_Count`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_16:
   \        0x0   0x41C8'0000        DC32     0x41c80000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_17:
   \        0x0   0x4120'0000        DC32     0x41200000

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   Delay_temp
      32   Draw_BMP
        32   -> LCD_Set_Pos
        32   -> LCD_WrDat
      32   Float_To_String
        32   -> __aeabi_f2uiz
        32   -> __aeabi_fmul
        32   -> __aeabi_fsub
        32   -> __aeabi_ui2f
        32 __aeabi_cfcmple
      16   LCD_CLS
        16   -> LCD_WrCmd
        16   -> LCD_WrDat
       0   LCD_DLY_ms
      16   LCD_Fill
        16   -> LCD_WrCmd
        16   -> LCD_WrDat
      16   LCD_Fill_Line
        16   -> LCD_WrCmd
        16   -> LCD_WrDat
       8   LCD_Init
         8   -> LCD_DLY_ms
         8   -> LCD_Fill
         8   -> LCD_Set_Pos
         8   -> SetAddressingMode
         8   -> SetContrastControl
         8   -> SetStartLine
         8   -> Set_Charge_Pump
         8   -> Set_Common_Config
         8   -> Set_Common_Remap
         8   -> Set_Display_Clock
         8   -> Set_Display_Offset
         8   -> Set_Display_On_Off
         8   -> Set_Entire_Display
         8   -> Set_Inverse_Display
         8   -> Set_Multiplex_Ratio
         8   -> Set_Preint8ge_Period
         8   -> Set_Segment_Remap
         8   -> Set_VCOMH
         8   -> init_gpio_OLED
      32   LCD_P14x16Str
        32   -> LCD_Set_Pos
        32   -> LCD_WrDat
      32   LCD_P6x8Str
        32   -> LCD_Set_Pos
        32   -> LCD_WrDat
      32   LCD_P8x16Str
        32   -> LCD_Set_Pos
        32   -> LCD_WrDat
      24   LCD_Print
        24   -> LCD_P14x16Str
        24   -> LCD_P8x16Str
      16   LCD_PutPixel
        16   -> LCD_Set_Pos
        16   -> LCD_WrCmd
        16   -> LCD_WrDat
       8   LCD_Set_Pos
         8   -> LCD_WrCmd
       4   LCD_WrCmd
       4   LCD_WrDat
      32   LCD_Write_Float
        32   -> Float_To_String
        32   -> LCD_P6x8Str
      32   LCD_Write_Float_Dot
        32   -> Float_To_String
        32   -> LCD_P6x8Str
      32   LCD_Write_Float_Dot_Chinese
        32   -> Float_To_String
        32   -> LCD_P8x16Str
      40   LCD_Write_Int
        40   -> Float_To_String
        40   -> LCD_P6x8Str
        40   -> __aeabi_i2f
      32   LED_PrintImage
        32   -> LCD_Set_Pos
        32   -> LCD_WrDat
       4   List_Move
      16   List_Paint
        16   -> LCD_Set_Pos
        16   -> OLED_Write_Data
       4   OLED_Write_Data
      16   Paint_Angle
        16   -> Delay_temp
        16   -> Paint_List
        16   -> __aeabi_f2iz
        16   -> __aeabi_i2f
      24   Paint_List
        24   -> List_Move
        24   -> List_Paint
        24   -> __aeabi_d2iz
        24   -> __aeabi_dadd
        24   -> __aeabi_ddiv
        24   -> __aeabi_dmul
        24   -> __aeabi_f2d
        24   -> __aeabi_fsub
       8   SetAddressingMode
         8   -> LCD_WrCmd
      16   SetColumnAddress
        16   -> LCD_WrCmd
       8   SetContrastControl
         8   -> LCD_WrCmd
      16   SetPageAddress
        16   -> LCD_WrCmd
       8   SetStartColumn
         8   -> LCD_WrCmd
       8   SetStartLine
         8   -> LCD_WrCmd
       8   SetStartPage
         8   -> LCD_WrCmd
       8   Set_Charge_Pump
         8   -> LCD_WrCmd
       8   Set_Common_Config
         8   -> LCD_WrCmd
       8   Set_Common_Remap
         8   -> LCD_WrCmd
       8   Set_Display_Clock
         8   -> LCD_WrCmd
       8   Set_Display_Offset
         8   -> LCD_WrCmd
       8   Set_Display_On_Off
         8   -> LCD_WrCmd
       8   Set_Entire_Display
         8   -> LCD_WrCmd
       8   Set_Inverse_Display
         8   -> LCD_WrCmd
       8   Set_Multiplex_Ratio
         8   -> LCD_WrCmd
       8   Set_NOP
         8   -> LCD_WrCmd
       8   Set_Preint8ge_Period
         8   -> LCD_WrCmd
       8   Set_Segment_Remap
         8   -> LCD_WrCmd
       8   Set_VCOMH
         8   -> LCD_WrCmd
       8   adjust
         8   -> LCD_WrCmd
      32   init_gpio_OLED
        16   -> LPLD_GPIO_Init
        32   -> __aeabi_memcpy4


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable12
       4  ??DataTable12_1
       4  ??DataTable12_10
       4  ??DataTable12_11
       4  ??DataTable12_12
       4  ??DataTable12_13
       4  ??DataTable12_14
       4  ??DataTable12_15
       4  ??DataTable12_16
       4  ??DataTable12_17
       4  ??DataTable12_2
       4  ??DataTable12_3
       4  ??DataTable12_4
       4  ??DataTable12_5
       4  ??DataTable12_6
       4  ??DataTable12_7
       4  ??DataTable12_8
       4  ??DataTable12_9
       8  Change_To_Bit
      24  Delay_temp
     122  Draw_BMP
    2604  F14x16
       1  F14x16_Idx
     552  F6x8
    1520  F8X16
     302  Float_To_String
      60  LCD_CLS
      22  LCD_DLY_ms
      64  LCD_Fill
      48  LCD_Fill_Line
     144  LCD_Init
     300  LCD_P14x16Str
     114  LCD_P6x8Str
     160  LCD_P8x16Str
     114  LCD_Print
      90  LCD_PutPixel
      48  LCD_Set_Pos
      70  LCD_WrCmd
      70  LCD_WrDat
      36  LCD_Write_Float
      36  LCD_Write_Float_Dot
      36  LCD_Write_Float_Dot_Chinese
      50  LCD_Write_Int
     244  LED_PrintImage
     480  LIBLOGO60x58
      66  List_Move
      90  List_Paint
      62  OLED_Write_Data
      40  Paint_Angle
      72  Paint_List
      20  SetAddressingMode
      30  SetColumnAddress
      20  SetContrastControl
      30  SetPageAddress
      42  SetStartColumn
      14  SetStartLine
      14  SetStartPage
      24  Set_Charge_Pump
      24  Set_Common_Config
      14  Set_Common_Remap
      20  Set_Display_Clock
      20  Set_Display_Offset
      14  Set_Display_On_Off
      14  Set_Entire_Display
      14  Set_Inverse_Display
      20  Set_Multiplex_Ratio
      10  Set_NOP
      20  Set_Preint8ge_Period
      14  Set_Segment_Remap
      20  Set_VCOMH
       4  Temp_Count
     120  Temp_List
       4  Temp_i
      10  adjust
      20  gpio_init_struct_OLED
      76  init_gpio_OLED
     768  longqiu96x64
       8  str1
       8  str2
       8  str3
       8  str4
       8  str5
       8  str6

 
   196 bytes in section .bss
 1 256 bytes in section .data
 4 677 bytes in section .rodata
 3 040 bytes in section .text
 
 3 040 bytes of CODE  memory
 4 677 bytes of CONST memory
 1 452 bytes of DATA  memory

Errors: none
Warnings: 1
