###############################################################################
#
# IAR ANSI C/C++ Compiler V8.32.1.169/W32 for ARM         21/May/2019  22:07:17
# Copyright 1999-2018 IAR Systems AB.
#
#    Cpu mode     =  
#    Endian       =  little
#    Source file  =  C:\Users\que\Desktop\AAA_xinbiao\xiugai\lib\Jay\Img.c
#    Command line =  
#        -f C:\Users\TEMPLA~1.000\AppData\Local\Temp\EW3308.tmp
#        (C:\Users\que\Desktop\AAA_xinbiao\xiugai\lib\Jay\Img.c -D LPLD_K60
#        -lCN
#        "C:\Users\que\Desktop\AAA_xinbiao\xiugai\project\28-(SDHC)LPLD_SdCard\iar\RAM\List"
#        -lB
#        "C:\Users\que\Desktop\AAA_xinbiao\xiugai\project\28-(SDHC)LPLD_SdCard\iar\RAM\List"
#        -o
#        "C:\Users\que\Desktop\AAA_xinbiao\xiugai\project\28-(SDHC)LPLD_SdCard\iar\RAM\Obj"
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M4 -e --fpu=None --dlib_config "D:\@@\605110 IAR for
#        ARM 8.30\arm\inc\c\DLib_Config_Normal.h" -I
#        "C:\Users\que\Desktop\AAA_xinbiao\xiugai\project\28-(SDHC)LPLD_SdCard\iar\..\app\"
#        -I
#        "C:\Users\que\Desktop\AAA_xinbiao\xiugai\project\28-(SDHC)LPLD_SdCard\iar\..\..\..\lib\CPU\"
#        -I
#        "C:\Users\que\Desktop\AAA_xinbiao\xiugai\project\28-(SDHC)LPLD_SdCard\iar\..\..\..\lib\common\"
#        -I
#        "C:\Users\que\Desktop\AAA_xinbiao\xiugai\project\28-(SDHC)LPLD_SdCard\iar\..\..\..\lib\LPLD\"
#        -I
#        "C:\Users\que\Desktop\AAA_xinbiao\xiugai\project\28-(SDHC)LPLD_SdCard\iar\..\..\..\lib\LPLD\HW\"
#        -I
#        "C:\Users\que\Desktop\AAA_xinbiao\xiugai\project\28-(SDHC)LPLD_SdCard\iar\..\..\..\lib\LPLD\DEV\"
#        -I
#        "C:\Users\que\Desktop\AAA_xinbiao\xiugai\project\28-(SDHC)LPLD_SdCard\iar\..\..\..\lib\uCOS-II\Ports\"
#        -I
#        "C:\Users\que\Desktop\AAA_xinbiao\xiugai\project\28-(SDHC)LPLD_SdCard\iar\..\..\..\lib\uCOS-II\Source\"
#        -I
#        "C:\Users\que\Desktop\AAA_xinbiao\xiugai\project\28-(SDHC)LPLD_SdCard\iar\..\..\..\lib\FatFs\"
#        -I
#        "C:\Users\que\Desktop\AAA_xinbiao\xiugai\project\28-(SDHC)LPLD_SdCard\iar\..\..\..\lib\FatFs\option\"
#        -I
#        "C:\Users\que\Desktop\AAA_xinbiao\xiugai\project\28-(SDHC)LPLD_SdCard\iar\..\..\..\lib\USB\common\"
#        -I
#        "C:\Users\que\Desktop\AAA_xinbiao\xiugai\project\28-(SDHC)LPLD_SdCard\iar\..\..\..\lib\USB\driver\"
#        -I
#        "C:\Users\que\Desktop\AAA_xinbiao\xiugai\project\28-(SDHC)LPLD_SdCard\iar\..\..\..\lib\USB\descriptor\"
#        -I
#        "C:\Users\que\Desktop\AAA_xinbiao\xiugai\project\28-(SDHC)LPLD_SdCard\iar\..\..\..\lib\USB\class\"
#        -I
#        "C:\Users\que\Desktop\AAA_xinbiao\xiugai\project\28-(SDHC)LPLD_SdCard\iar\..\..\..\lib\Me\"
#        -I
#        "C:\Users\que\Desktop\AAA_xinbiao\xiugai\project\28-(SDHC)LPLD_SdCard\iar\..\app\"
#        -I
#        "C:\Users\que\Desktop\AAA_xinbiao\xiugai\project\28-(SDHC)LPLD_SdCard\iar\..\app\"
#        -I
#        "C:\Users\que\Desktop\AAA_xinbiao\xiugai\project\28-(SDHC)LPLD_SdCard\iar\..\..\..\lib\"
#        -I
#        "C:\Users\que\Desktop\AAA_xinbiao\xiugai\project\28-(SDHC)LPLD_SdCard\iar\..\..\..\lib\common\"
#        -I
#        "C:\Users\que\Desktop\AAA_xinbiao\xiugai\project\28-(SDHC)LPLD_SdCard\iar\..\..\..\lib\CPU\"
#        -I
#        "C:\Users\que\Desktop\AAA_xinbiao\xiugai\project\28-(SDHC)LPLD_SdCard\iar\..\..\..\lib\Jay\"
#        -Ol -I "D:\@@\605110 IAR for ARM 8.30\arm\CMSIS\Core\Include\" -I
#        "D:\@@\605110 IAR for ARM 8.30\arm\CMSIS\DSP\Include\" -D
#        ARM_MATH_CM4)
#    Locale       =  C
#    List file    =  
#        C:\Users\que\Desktop\AAA_xinbiao\xiugai\project\28-(SDHC)LPLD_SdCard\iar\RAM\List\Img.lst
#    Object file  =  
#        C:\Users\que\Desktop\AAA_xinbiao\xiugai\project\28-(SDHC)LPLD_SdCard\iar\RAM\Obj\Img.o
#
###############################################################################

C:\Users\que\Desktop\AAA_xinbiao\xiugai\lib\Jay\Img.c
      1          /*
      2           *  
      3           *  
      4           *  @JayLin林杰 @厦门大学嘉庚学院 @博学队
      5           */
      6          #include  "common.h"
      7          #include "include.h"
      8          
      9          
     10          //===========================================参数定义===========================================//
     11          
     12          //图像

   \                                 In section .data, align 2
     13          int16 fstpoint = IMG_COL_CENTER;
   \                     fstpoint:
   \        0x0   0x004F             DC16 79

   \                                 In section .data, align 2
     14          int16 row_end_center = IMG_TOP;
   \                     row_end_center:
   \        0x0   0x000A             DC16 10

   \                                 In section .bss, align 2
     15          int16 leftFold = 0x00;
   \                     leftFold:
   \        0x0                      DS8 2

   \                                 In section .bss, align 2
     16          int16 rightFold = 0x00;
   \                     rightFold:
   \        0x0                      DS8 2

   \                                 In section .bss, align 4
     17          int16 leftEdge[IMG_ROWS];
   \                     leftEdge:
   \        0x0                      DS8 120

   \                                 In section .bss, align 4
     18          int16 rightEdge[IMG_ROWS];
   \                     rightEdge:
   \        0x0                      DS8 120

   \                                 In section .bss, align 4
     19          int16 img_centers[IMG_ROWS];
   \                     img_centers:
   \        0x0                      DS8 120

   \                                 In section .data, align 2
     20          int16 row_left_begin = IMG_BOTTOM;
   \                     row_left_begin:
   \        0x0   0x0045             DC16 69

   \                                 In section .data, align 2
     21          int16 row_right_begin = IMG_BOTTOM;
   \                     row_right_begin:
   \        0x0   0x0045             DC16 69

   \                                 In section .data, align 2
     22          int16 row_left_end = IMG_TOP;
   \                     row_left_end:
   \        0x0   0x000A             DC16 10

   \                                 In section .data, align 2
     23          int16 row_right_end = IMG_TOP;
   \                     row_right_end:
   \        0x0   0x000A             DC16 10
     24          
     25          //标志位
     26          

   \                                 In section .bss, align 2
     27          int16 FastVal = 0;
   \                     FastVal:
   \        0x0                      DS8 2
     28          
     29          
     30          
     31          
     32          //===========================================定义结束===========================================//
     33          
     34          
     35          
     36          
     37          
     38          
     39          
     40          //===========================================创建模板===========================================//

   \                                 In section .rodata, align 4
     41          const int16 CAR_JOIN_templ[] =
   \                     CAR_JOIN_templ:
   \        0x0   0x0003 0x0003      DC16 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3
   \               0x0003 0x000
   \              3 0x0003 0x00
   \              03 0x0003 0x0
   \              003 0x0003 0x
   \              0003 0x0003 0
   \              x0003 0x0003 
   \              0x0003 0x0003
   \               0x0003 0x000
   \              3 0x0003 0x00
   \              03 0x0003 0x0
   \              003 0x0003   
   \       0x2C   0x0003 0x0003      DC16 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5
   \               0x0003 0x000
   \              3 0x0003 0x00
   \              03 0x0003 0x0
   \              003 0x0004 0x
   \              0004 0x0004 0
   \              x0004 0x0004 
   \              0x0004 0x0004
   \               0x0004 0x000
   \              4 0x0004 0x00
   \              05 0x0005 0x0
   \              005 0x0005   
   \       0x58   0x0005 0x0005      DC16 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6
   \               0x0005 0x000
   \              5 0x0005 0x00
   \              05 0x0005 0x0
   \              005 0x0005 0x
   \              0005 0x0005 0
   \              x0005 0x0005 
   \              0x0005 0x0005
   \               0x0005 0x000
   \              6 0x0006 0x00
   \              06 0x0006 0x0
   \              006 0x0006   
   \       0x84   0x0006 0x0006      DC16 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7
   \               0x0006 0x000
   \              6 0x0007 0x00
   \              07 0x0007 0x0
   \              007 0x0007 0x
   \              0007 0x0007 0
   \              x0007 0x0007 
   \              0x0007 0x0007
   \               0x0007 0x000
   \              7 0x0007 0x00
   \              07 0x0007 0x0
   \              007 0x0007   
   \       0xB0   0x0007 0x0007      DC16 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8
   \               0x0008 0x000
   \              8 0x0008 0x00
   \              08 0x0008 0x0
   \              008 0x0008 0x
   \              0008 0x0008 0
   \              x0008 0x0008 
   \              0x0008 0x0008
   \               0x0008 0x000
   \              8 0x0008 0x00
   \              08 0x0008 0x0
   \              008 0x0008   
   \       0xDC   0x0008 0x0008      DC16 8, 8, 8, 8, 8, 8, 8, 8, 8, 8
   \               0x0008 0x000
   \              8 0x0008 0x00
   \              08 0x0008 0x0
   \              008 0x0008 0x
   \              0008         
     42          {
     43            3,3,3,3,3,3,3,3,3,3,// 0 - 9
     44            3,3,3,3,3,3,3,3,3,3,//10 - 19
     45            3,3,3,3,3,3,3,3,3,3,//20 - 29
     46            4,4,4,4,4,4,4,4,4,4,//30 - 39
     47            5,5,5,5,5,5,5,5,5,5,//40 - 49
     48            5,5,5,5,5,5,5,5,5,5,//50 - 59
     49            6,6,6,6,6,6,6,6,6,6,//60 - 69
     50            7,7,7,7,7,7,7,7,7,7,//70 - 79
     51            7,7,7,7,7,7,7,7,7,7,//80 - 89
     52            8,8,8,8,8,8,8,8,8,8,//90 - 99
     53            8,8,8,8,8,8,8,8,8,8,//100 -109
     54            8,8,8,8,8,8,8,8,8,8 //110 -119
     55              
     56          };
     57          

   \                                 In section .rodata, align 4
     58          const int16 width_templ[] =
   \                     width_templ:
   \        0x0   0x001A 0x001A      DC16 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 29, 32, 35
   \               0x001A 0x001
   \              A 0x001A 0x00
   \              1A 0x001A 0x0
   \              01A 0x001A 0x
   \              001A 0x001A 0
   \              x001A 0x001A 
   \              0x001A 0x001D
   \               0x0020 0x002
   \              3            
   \       0x22   0x0025 0x0029      DC16 37, 41, 44, 47, 49, 53, 55, 59, 61, 65, 67, 71, 73, 77, 79, 82, 85
   \               0x002C 0x002
   \              F 0x0031 0x00
   \              35 0x0037 0x0
   \              03B 0x003D 0x
   \              0041 0x0043 0
   \              x0047 0x0049 
   \              0x004D 0x004F
   \               0x0052 0x005
   \              5            
   \       0x44   0x0058 0x005B      DC16 88, 91, 94, 97, 99, 103, 105, 108, 111, 113, 115, 119, 121, 123
   \               0x005E 0x006
   \              1 0x0063 0x00
   \              67 0x0069 0x0
   \              06C 0x006F 0x
   \              0071 0x0073 0
   \              x0077 0x0079 
   \              0x007B       
   \       0x60   0x007E 0x0081      DC16 126, 129, 131, 134, 136, 138, 140, 143, 145, 148, 150, 152, 154
   \               0x0083 0x008
   \              6 0x0088 0x00
   \              8A 0x008C 0x0
   \              08F 0x0091 0x
   \              0094 0x0096 0
   \              x0098 0x009A 
   \       0x7A   0x009B 0x009C      DC16 155, 156, 157, 157, 157, 157, 157, 157, 157, 157, 157, 157, 157
   \               0x009D 0x009
   \              D 0x009D 0x00
   \              9D 0x009D 0x0
   \              09D 0x009D 0x
   \              009D 0x009D 0
   \              x009D 0x009D 
   \       0x94   0x009D 0x009D      DC16 157, 157, 157, 157, 157, 157, 157, 157, 157, 157, 157, 157, 157
   \               0x009D 0x009
   \              D 0x009D 0x00
   \              9D 0x009D 0x0
   \              09D 0x009D 0x
   \              009D 0x009D 0
   \              x009D 0x009D 
   \       0xAE   0x009D 0x009D      DC16 157, 157, 157, 157, 157, 157, 157, 157, 157, 157, 157, 157, 157
   \               0x009D 0x009
   \              D 0x009D 0x00
   \              9D 0x009D 0x0
   \              09D 0x009D 0x
   \              009D 0x009D 0
   \              x009D 0x009D 
   \       0xC8   0x009D 0x009D      DC16 157, 157, 157, 157, 157, 157, 157, 157, 157, 157, 157, 157, 157
   \               0x009D 0x009
   \              D 0x009D 0x00
   \              9D 0x009D 0x0
   \              09D 0x009D 0x
   \              009D 0x009D 0
   \              x009D 0x009D 
   \       0xE2   0x009D 0x009D      DC16 157, 157, 157, 157, 157, 157, 157
   \               0x009D 0x009
   \              D 0x009D 0x00
   \              9D 0x009D    
     59          {
     60            26,26,26,26,26,26,26,26,26,26,26,26,26,
     61            26,29,32,35,37,41,44,47,49,53,
     62            55,59,61,65,67,71,73,77,79,82,
     63            85,88,91,94,97,99,103,105,108,
     64            111,113,115,119,121,123,126,129,
     65            131,134,136,138,140,143,145,148,
     66            150,152,154,155,156,157,157,157,
     67            157,157,157,157,157,157,157,157,157,157,157,157,
     68            157,157,157,157,157,157,157,157,157,157,157,157,
     69            157,157,157,157,157,157,157,157,157,157,157,157,
     70            157,157,157,157,157,157,157,157,157,157,157,157,
     71            157,157,157,157,157,157
     72          };
     73          

   \                                 In section .rodata, align 4
     74          const int16 ramp_width[] =
   \                     ramp_width:
   \        0x0   0x0047 0x0047      DC16 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 72, 73, 74, 75, 77, 77
   \               0x0047 0x004
   \              7 0x0047 0x00
   \              47 0x0047 0x0
   \              047 0x0047 0x
   \              0047 0x0047 0
   \              x0048 0x0049 
   \              0x004A 0x004B
   \               0x004D 0x004
   \              D            
   \       0x22   0x004F 0x0051      DC16 79, 81, 81, 83, 84, 85, 87, 88, 89, 91, 92, 93, 95, 96, 97, 98
   \               0x0051 0x005
   \              3 0x0054 0x00
   \              55 0x0057 0x0
   \              058 0x0059 0x
   \              005B 0x005C 0
   \              x005D 0x005F 
   \              0x0060 0x0061
   \               0x0062      
   \       0x42   0x0064 0x0066      DC16 100, 102, 102, 104, 104, 106, 108, 109, 110, 112, 113, 115, 117
   \               0x0066 0x006
   \              8 0x0068 0x00
   \              6A 0x006C 0x0
   \              06D 0x006E 0x
   \              0070 0x0071 0
   \              x0073 0x0075 
   \       0x5C   0x0077 0x0079      DC16 119, 121, 124, 126, 128, 130, 134, 136, 138, 140, 142, 143, 145
   \               0x007C 0x007
   \              E 0x0080 0x00
   \              82 0x0086 0x0
   \              088 0x008A 0x
   \              008C 0x008E 0
   \              x008F 0x0091 
   \       0x76   0x0092 0x0093      DC16 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 156, 158
   \               0x0094 0x009
   \              5 0x0096 0x00
   \              97 0x0098 0x0
   \              099 0x009A 0x
   \              009B 0x009C 0
   \              x009C 0x009E 
   \       0x90   0x009E 0x009E      DC16 158, 158, 158, 158, 158, 158, 158, 158, 158, 158, 158, 158, 158
   \               0x009E 0x009
   \              E 0x009E 0x00
   \              9E 0x009E 0x0
   \              09E 0x009E 0x
   \              009E 0x009E 0
   \              x009E 0x009E 
   \       0xAA   0x009E 0x009E      DC16 158, 158, 158, 158, 158, 158, 158, 158, 158, 158, 158, 158, 158
   \               0x009E 0x009
   \              E 0x009E 0x00
   \              9E 0x009E 0x0
   \              09E 0x009E 0x
   \              009E 0x009E 0
   \              x009E 0x009E 
   \       0xC4   0x009E 0x009E      DC16 158, 158, 158, 158, 158, 158, 158, 158, 158, 158, 158, 158, 158
   \               0x009E 0x009
   \              E 0x009E 0x00
   \              9E 0x009E 0x0
   \              09E 0x009E 0x
   \              009E 0x009E 0
   \              x009E 0x009E 
   \       0xDE   0x009E 0x009E      DC16 158, 158, 158, 158, 158, 158, 158, 158, 158
   \               0x009E 0x009
   \              E 0x009E 0x00
   \              9E 0x009E 0x0
   \              09E 0x009E   
     75          {
     76            71,71,71,71,71,71,71,71,71,71,71,72,
     77            73,74,75,77,77,79,81,81,83,84,85,87,
     78            88,89,91,92,93,95,96,97,98,
     79            100,102,102,104,104,106,108,109,110,
     80            112,113,115,117,119,121,124,126,128,
     81            130,134,136,138,140,142,143,145,146,
     82            147,148,149,150,151,152,153,154,155,
     83            156,156,158,158,158,158,158,158,158,
     84            158,158,158,158,158,158,158,158,158,
     85            158,158,158,158,158,158,158,158,158,
     86            158,158,158,158,158,158,158,158,158,
     87            158,158,158,158,158,158,158,158,158,
     88            158,158,158,158,158,158
     89          };

   \                                 In section .rodata, align 4
     90          const int16 left_templ[] = 
   \                     left_templ:
   \        0x0   0x0042 0x0042      DC16 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 64, 63, 61
   \               0x0042 0x004
   \              2 0x0042 0x00
   \              42 0x0042 0x0
   \              042 0x0042 0x
   \              0042 0x0042 0
   \              x0042 0x0042 
   \              0x0042 0x0040
   \               0x003F 0x003
   \              D            
   \       0x22   0x003C 0x003A      DC16 60, 58, 57, 55, 54, 52, 51, 49, 48, 46, 45, 43, 42, 40, 39, 37, 36
   \               0x0039 0x003
   \              7 0x0036 0x00
   \              34 0x0033 0x0
   \              031 0x0030 0x
   \              002E 0x002D 0
   \              x002B 0x002A 
   \              0x0028 0x0027
   \               0x0025 0x002
   \              4            
   \       0x44   0x0022 0x0021      DC16 34, 33, 31, 30, 29, 27, 26, 24, 23, 22, 21, 19, 18, 17, 15, 14, 13
   \               0x001F 0x001
   \              E 0x001D 0x00
   \              1B 0x001A 0x0
   \              018 0x0017 0x
   \              0016 0x0015 0
   \              x0013 0x0012 
   \              0x0011 0x000F
   \               0x000E 0x000
   \              D            
   \       0x66   0x000B 0x000A      DC16 11, 10, 9, 8, 7, 5, 4, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1
   \               0x0009 0x000
   \              8 0x0007 0x00
   \              05 0x0004 0x0
   \              003 0x0002 0x
   \              0001 0x0001 0
   \              x0001 0x0001 
   \              0x0001 0x0001
   \               0x0001 0x000
   \              1 0x0001 0x00
   \              01 0x0001 0x0
   \              001 0x0001   
   \       0x92   0x0001 0x0001      DC16 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1
   \               0x0001 0x000
   \              1 0x0001 0x00
   \              01 0x0001 0x0
   \              001 0x0001 0x
   \              0001 0x0001 0
   \              x0001 0x0001 
   \              0x0001 0x0001
   \               0x0001 0x000
   \              1 0x0001 0x00
   \              01 0x0001 0x0
   \              001 0x0001   
   \       0xBE   0x0001 0x0001      DC16 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1
   \               0x0001 0x000
   \              1 0x0001 0x00
   \              01 0x0001 0x0
   \              001 0x0001 0x
   \              0001 0x0001 0
   \              x0001 0x0001 
   \              0x0001 0x0001
   \               0x0001 0x000
   \              1 0x0001 0x00
   \              01 0x0001 0x0
   \              001 0x0001   
   \       0xEA   0x0001 0x0001      DC16 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1
   \               0x0001 0x000
   \              1 0x0001 0x00
   \              01 0x0001 0x0
   \              001 0x0001 0x
   \              0001 0x0001 0
   \              x0001 0x0001 
   \              0x0001 0x0001
   \               0x0001 0x000
   \              1 0x0001 0x00
   \              01           
     91          {
     92            66,66,66,66,66,66,66,66,66,66,66,66,66,
     93            66,64,63,61,60,58,57,55,54,
     94            52,51,49,48,46,45,43,42,40,
     95            39,37,36,34,33,31,30,29,27,
     96            26,24,23,22,21,19,18,17,15,
     97            14,13,11,10,9,8,7,5,4,3,2,
     98            1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
     99            1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
    100            1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
    101            1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
    102          };
    103          

   \                                 In section .rodata, align 4
    104          const int16 right_templ[] = 
   \                     right_templ:
   \        0x0   0x005C 0x005C      DC16 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 93, 95, 96
   \               0x005C 0x005
   \              C 0x005C 0x00
   \              5C 0x005C 0x0
   \              05C 0x005C 0x
   \              005C 0x005C 0
   \              x005C 0x005C 
   \              0x005C 0x005D
   \               0x005F 0x006
   \              0            
   \       0x22   0x0061 0x0063      DC16 97, 99, 101, 102, 103, 105, 106, 108, 109, 111, 112, 114, 115, 117
   \               0x0065 0x006
   \              6 0x0067 0x00
   \              69 0x006A 0x0
   \              06C 0x006D 0x
   \              006F 0x0070 0
   \              x0072 0x0073 
   \              0x0075       
   \       0x3E   0x0076 0x0077      DC16 118, 119, 121, 122, 124, 125, 127, 128, 130, 131, 132, 134, 135
   \               0x0079 0x007
   \              A 0x007C 0x00
   \              7D 0x007F 0x0
   \              080 0x0082 0x
   \              0083 0x0084 0
   \              x0086 0x0087 
   \       0x58   0x0088 0x008A      DC16 136, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 150, 150
   \               0x008B 0x008
   \              C 0x008D 0x00
   \              8F 0x0090 0x0
   \              091 0x0092 0x
   \              0093 0x0094 0
   \              x0096 0x0096 
   \       0x72   0x0098 0x0099      DC16 152, 153, 154, 155, 156, 157, 158, 158, 158, 158, 158, 158, 158
   \               0x009A 0x009
   \              B 0x009C 0x00
   \              9D 0x009E 0x0
   \              09E 0x009E 0x
   \              009E 0x009E 0
   \              x009E 0x009E 
   \       0x8C   0x009E 0x009E      DC16 158, 158, 158, 158, 158, 158, 158, 158, 158, 158, 158, 158, 158
   \               0x009E 0x009
   \              E 0x009E 0x00
   \              9E 0x009E 0x0
   \              09E 0x009E 0x
   \              009E 0x009E 0
   \              x009E 0x009E 
   \       0xA6   0x009E 0x009E      DC16 158, 158, 158, 158, 158, 158, 158, 158, 158, 158, 158, 158, 158
   \               0x009E 0x009
   \              E 0x009E 0x00
   \              9E 0x009E 0x0
   \              09E 0x009E 0x
   \              009E 0x009E 0
   \              x009E 0x009E 
   \       0xC0   0x009E 0x009E      DC16 158, 158, 158, 158, 158, 158, 158, 158, 158, 158, 158, 158, 158
   \               0x009E 0x009
   \              E 0x009E 0x00
   \              9E 0x009E 0x0
   \              09E 0x009E 0x
   \              009E 0x009E 0
   \              x009E 0x009E 
   \       0xDA   0x009E 0x009E      DC16 158, 158, 158, 158, 158, 158, 158, 158, 158
   \               0x009E 0x009
   \              E 0x009E 0x00
   \              9E 0x009E 0x0
   \              09E 0x009E   
    105          {
    106            92,92,92,92,92,92,92,92,92,92,92,92,92,
    107            92,93,95,96,97,99,101,102,103,105,
    108            106,108,109,111,112,114,115,117,118,
    109            119,121,122,124,125,127,128,130,131,
    110            132,134,135,136,138,139,140,141,143,
    111            144,145,146,147,148,150,150,152,153,
    112            154,155,156,157,158,158,158,158,158,
    113            158,158,158,158,158,158,158,158,158,158,
    114            158,158,158,158,158,158,158,158,158,158,
    115            158,158,158,158,158,158,158,158,158,158,
    116            158,158,158,158,158,158,158,158,158,158,
    117            158,158,158,158,158,158,158,158,158,158
    118          };
    119          
    120          //===========================================创建结束===========================================//
    121          
    122          /*
    123           * 图像模板用于 模板匹配识别
    124           */
    125          
    126          
    127          
    128          //======================================================================================定义函数======================================================================================//
    129          
    130          //标志位初始化

   \                                 In section .text, align 2, keep-with-next
    131          void ImageParamInit(void)
    132          {
    133                  FastVal = FWD_45CM;
   \                     ImageParamInit: (+1)
   \        0x0   0x201A             MOVS     R0,#+26
   \        0x2   0x....'....        LDR.W    R1,??DataTable10
   \        0x6   0x8008             STRH     R0,[R1, #+0]
    134                  fstpoint = IMG_COL_CENTER;
   \        0x8   0x204F             MOVS     R0,#+79
   \        0xA   0x....'....        LDR.W    R1,??DataTable10_1
   \        0xE   0x8008             STRH     R0,[R1, #+0]
    135                  leftFold = 0x00;
   \       0x10   0x2000             MOVS     R0,#+0
   \       0x12   0x....'....        LDR.W    R1,??DataTable10_2
   \       0x16   0x8008             STRH     R0,[R1, #+0]
    136                  rightFold = 0x00;
   \       0x18   0x2000             MOVS     R0,#+0
   \       0x1A   0x....'....        LDR.W    R1,??DataTable11
   \       0x1E   0x8008             STRH     R0,[R1, #+0]
    137          	row_end_center = IMG_TOP;
   \       0x20   0x200A             MOVS     R0,#+10
   \       0x22   0x....'....        LDR.W    R1,??DataTable11_1
   \       0x26   0x8008             STRH     R0,[R1, #+0]
    138          	row_left_begin = IMG_BOTTOM;
   \       0x28   0x2045             MOVS     R0,#+69
   \       0x2A   0x....'....        LDR.W    R1,??DataTable11_2
   \       0x2E   0x8008             STRH     R0,[R1, #+0]
    139          	row_left_end = IMG_TOP;
   \       0x30   0x200A             MOVS     R0,#+10
   \       0x32   0x....'....        LDR.W    R1,??DataTable11_3
   \       0x36   0x8008             STRH     R0,[R1, #+0]
    140          	row_right_begin = IMG_BOTTOM;
   \       0x38   0x2045             MOVS     R0,#+69
   \       0x3A   0x....'....        LDR.W    R1,??DataTable11_4
   \       0x3E   0x8008             STRH     R0,[R1, #+0]
    141          	row_right_end = IMG_TOP;
   \       0x40   0x200A             MOVS     R0,#+10
   \       0x42   0x....'....        LDR.W    R1,??DataTable11_5
   \       0x46   0x8008             STRH     R0,[R1, #+0]
    142          }
   \       0x48   0x4770             BX       LR               ;; return
    143          /*
    144           * 计算两点斜率
    145           */

   \                                 In section .text, align 2, keep-with-next
    146          float GetTanAlpha(int16 row1, int16 col1, int16 row2, int16 col2)
    147          {
   \                     GetTanAlpha: (+1)
   \        0x0   0xB570             PUSH     {R4-R6,LR}
   \        0x2   0x0004             MOVS     R4,R0
   \        0x4   0x0015             MOVS     R5,R2
    148          	if (row1 == row2)
   \        0x6   0x0020             MOVS     R0,R4
   \        0x8   0x002A             MOVS     R2,R5
   \        0xA   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \        0xC   0xB212             SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
   \        0xE   0x4290             CMP      R0,R2
   \       0x10   0xD101             BNE.N    ??GetTanAlpha_0
    149          	{
    150          		return 0;
   \       0x12   0x2000             MOVS     R0,#+0
   \       0x14   0xE01C             B.N      ??GetTanAlpha_1
    151          	}
    152          	else if (col1 == col2)
   \                     ??GetTanAlpha_0: (+1)
   \       0x16   0x0008             MOVS     R0,R1
   \       0x18   0x001A             MOVS     R2,R3
   \       0x1A   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \       0x1C   0xB212             SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
   \       0x1E   0x4290             CMP      R0,R2
   \       0x20   0xD101             BNE.N    ??GetTanAlpha_2
    153          	{
    154          		return 0;
   \       0x22   0x2000             MOVS     R0,#+0
   \       0x24   0xE014             B.N      ??GetTanAlpha_1
    155          	}
    156          	return (col1 - col2) * 1.0f / (row1 - row2);
   \                     ??GetTanAlpha_2: (+1)
   \       0x26   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \       0x28   0xB21B             SXTH     R3,R3            ;; SignExt  R3,R3,#+16,#+16
   \       0x2A   0x1AC9             SUBS     R1,R1,R3
   \       0x2C   0x0008             MOVS     R0,R1
   \       0x2E   0x....'....        BL       __aeabi_i2f
   \       0x32   0xF05F 0x517E      MOVS     R1,#+1065353216
   \       0x36   0x....'....        BL       __aeabi_fmul
   \       0x3A   0x0006             MOVS     R6,R0
   \       0x3C   0xB224             SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
   \       0x3E   0xB22D             SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
   \       0x40   0x1B64             SUBS     R4,R4,R5
   \       0x42   0x0020             MOVS     R0,R4
   \       0x44   0x....'....        BL       __aeabi_i2f
   \       0x48   0x0001             MOVS     R1,R0
   \       0x4A   0x0030             MOVS     R0,R6
   \       0x4C   0x....'....        BL       __aeabi_fdiv
   \                     ??GetTanAlpha_1: (+1)
   \       0x50   0xBD70             POP      {R4-R6,PC}       ;; return
    157          }
    158          /*
    159           * 拟合直线
    160           */

   \                                 In section .text, align 2, keep-with-next
    161          void AlterParam_Line(int16 beginrow, int16 endrow, int16 row1, int16 col1, int16 row2, int16 col2, int16 *p)
    162          {
   \                     AlterParam_Line: (+1)
   \        0x0   0xE92D 0x47F0      PUSH     {R4-R10,LR}
   \        0x4   0x0004             MOVS     R4,R0
   \        0x6   0x000D             MOVS     R5,R1
   \        0x8   0x0016             MOVS     R6,R2
   \        0xA   0x001F             MOVS     R7,R3
   \        0xC   0xF9BD 0x2020      LDRSH    R2,[SP, #+32]
   \       0x10   0xF9BD 0x3024      LDRSH    R3,[SP, #+36]
   \       0x14   0xF8DD 0x8028      LDR      R8,[SP, #+40]
    163          	float k = GetTanAlpha(row1, col1, row2, col2);
   \       0x18   0xB21B             SXTH     R3,R3            ;; SignExt  R3,R3,#+16,#+16
   \       0x1A   0xB212             SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
   \       0x1C   0x0039             MOVS     R1,R7
   \       0x1E   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \       0x20   0x0030             MOVS     R0,R6
   \       0x22   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \       0x24   0x....'....        BL       GetTanAlpha
   \       0x28   0x4681             MOV      R9,R0
   \       0x2A   0xE031             B.N      ??AlterParam_Line_0
    164          	for (; beginrow >= endrow; beginrow--)
    165          	{
    166          		*(p + beginrow) = (int16)((beginrow - row1) * k + col1);
    167          		if (*(p + beginrow) >= IMG_RIGHT)
    168                          {
    169                              *(p + beginrow) = IMG_RIGHT;
    170                          }
    171                          else if (*(p + beginrow) <= IMG_LEFT)
   \                     ??AlterParam_Line_1: (+1)
   \       0x2C   0x0020             MOVS     R0,R4
   \       0x2E   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \       0x30   0xF938 0x0010      LDRSH    R0,[R8, R0, LSL #+1]
   \       0x34   0x2802             CMP      R0,#+2
   \       0x36   0xDA2A             BGE.N    ??AlterParam_Line_2
    172                          {
    173                              *(p + beginrow) = IMG_LEFT;
   \       0x38   0x2001             MOVS     R0,#+1
   \       0x3A   0x0021             MOVS     R1,R4
   \       0x3C   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \       0x3E   0xF828 0x0011      STRH     R0,[R8, R1, LSL #+1]
   \       0x42   0xE024             B.N      ??AlterParam_Line_2
    174                          }
   \                     ??AlterParam_Line_3: (+1)
   \       0x44   0x0020             MOVS     R0,R4
   \       0x46   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \       0x48   0x0031             MOVS     R1,R6
   \       0x4A   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \       0x4C   0x1A40             SUBS     R0,R0,R1
   \       0x4E   0x....'....        BL       __aeabi_i2f
   \       0x52   0x0001             MOVS     R1,R0
   \       0x54   0x4648             MOV      R0,R9
   \       0x56   0x....'....        BL       __aeabi_fmul
   \       0x5A   0x4682             MOV      R10,R0
   \       0x5C   0x0038             MOVS     R0,R7
   \       0x5E   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \       0x60   0x....'....        BL       __aeabi_i2f
   \       0x64   0x0001             MOVS     R1,R0
   \       0x66   0x4650             MOV      R0,R10
   \       0x68   0x....'....        BL       __aeabi_fadd
   \       0x6C   0x....'....        BL       __aeabi_f2iz
   \       0x70   0x0021             MOVS     R1,R4
   \       0x72   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \       0x74   0xF828 0x0011      STRH     R0,[R8, R1, LSL #+1]
   \       0x78   0x0020             MOVS     R0,R4
   \       0x7A   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \       0x7C   0xF938 0x0010      LDRSH    R0,[R8, R0, LSL #+1]
   \       0x80   0x289E             CMP      R0,#+158
   \       0x82   0xDBD3             BLT.N    ??AlterParam_Line_1
   \       0x84   0x209E             MOVS     R0,#+158
   \       0x86   0x0021             MOVS     R1,R4
   \       0x88   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \       0x8A   0xF828 0x0011      STRH     R0,[R8, R1, LSL #+1]
    175          	}
   \                     ??AlterParam_Line_2: (+1)
   \       0x8E   0x1E64             SUBS     R4,R4,#+1
   \                     ??AlterParam_Line_0: (+1)
   \       0x90   0x0020             MOVS     R0,R4
   \       0x92   0x0029             MOVS     R1,R5
   \       0x94   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \       0x96   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \       0x98   0x4288             CMP      R0,R1
   \       0x9A   0xDAD3             BGE.N    ??AlterParam_Line_3
    176          }
   \                     ??AlterParam_Line_4: (+1)
   \       0x9C   0xE8BD 0x87F0      POP      {R4-R10,PC}      ;; return
    177          
    178          //图像上升沿

   \                                 In section .text, align 2, keep-with-next
    179          uint8 img_posedge(int16 beginrow,int16 endrow,int16 begincol,int16 endcol)//上升沿
    180          {
   \                     img_posedge: (+1)
   \        0x0   0xB430             PUSH     {R4,R5}
   \        0x2   0x0004             MOVS     R4,R0
    181          	if(beginrow == endrow && begincol == endcol)//检测一个点的亮度值
   \        0x4   0x0020             MOVS     R0,R4
   \        0x6   0x000D             MOVS     R5,R1
   \        0x8   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \        0xA   0xB22D             SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
   \        0xC   0x42A8             CMP      R0,R5
   \        0xE   0xD113             BNE.N    ??img_posedge_0
   \       0x10   0x0010             MOVS     R0,R2
   \       0x12   0x001D             MOVS     R5,R3
   \       0x14   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \       0x16   0xB22D             SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
   \       0x18   0x42A8             CMP      R0,R5
   \       0x1A   0xD10D             BNE.N    ??img_posedge_0
    182          	{
    183          		if(imgbuff[beginrow][begincol]) { return 1;}
   \       0x1C   0x....'....        LDR.W    R0,??DataTable11_6
   \       0x20   0x2150             MOVS     R1,#+80
   \       0x22   0xFB14 0xF101      SMULBB   R1,R4,R1
   \       0x26   0x4408             ADD      R0,R0,R1
   \       0x28   0xB212             SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
   \       0x2A   0x5C80             LDRB     R0,[R0, R2]
   \       0x2C   0x2800             CMP      R0,#+0
   \       0x2E   0xD001             BEQ.N    ??img_posedge_1
   \       0x30   0x2001             MOVS     R0,#+1
   \       0x32   0xE073             B.N      ??img_posedge_2
    184          		return 0;
   \                     ??img_posedge_1: (+1)
   \       0x34   0x2000             MOVS     R0,#+0
   \       0x36   0xE071             B.N      ??img_posedge_2
    185          	}
    186          	else if(beginrow == endrow)//检测纵向行坐标亮度
   \                     ??img_posedge_0: (+1)
   \       0x38   0x0020             MOVS     R0,R4
   \       0x3A   0x000D             MOVS     R5,R1
   \       0x3C   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \       0x3E   0xB22D             SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
   \       0x40   0x42A8             CMP      R0,R5
   \       0x42   0xD132             BNE.N    ??img_posedge_3
    187          	{
    188          		if(begincol > endcol)
   \       0x44   0x0018             MOVS     R0,R3
   \       0x46   0x0011             MOVS     R1,R2
   \       0x48   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \       0x4A   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \       0x4C   0x4288             CMP      R0,R1
   \       0x4E   0xDA17             BGE.N    ??img_posedge_4
   \       0x50   0xE000             B.N      ??img_posedge_5
    189          		{
    190          			for( ;endcol <= begincol; endcol++)
   \                     ??img_posedge_6: (+1)
   \       0x52   0x1C5B             ADDS     R3,R3,#+1
   \                     ??img_posedge_5: (+1)
   \       0x54   0x0010             MOVS     R0,R2
   \       0x56   0x0019             MOVS     R1,R3
   \       0x58   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \       0x5A   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \       0x5C   0x4288             CMP      R0,R1
   \       0x5E   0xDB0C             BLT.N    ??img_posedge_7
    191          			{
    192          				if(!imgbuff[beginrow][endcol]) { return 0;}
   \       0x60   0x....'....        LDR.W    R0,??DataTable11_6
   \       0x64   0x2150             MOVS     R1,#+80
   \       0x66   0xFB14 0xF101      SMULBB   R1,R4,R1
   \       0x6A   0x4408             ADD      R0,R0,R1
   \       0x6C   0x0019             MOVS     R1,R3
   \       0x6E   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \       0x70   0x5C40             LDRB     R0,[R0, R1]
   \       0x72   0x2800             CMP      R0,#+0
   \       0x74   0xD1ED             BNE.N    ??img_posedge_6
   \       0x76   0x2000             MOVS     R0,#+0
   \       0x78   0xE050             B.N      ??img_posedge_2
    193          			}
    194          			return 1;
   \                     ??img_posedge_7: (+1)
   \       0x7A   0x2001             MOVS     R0,#+1
   \       0x7C   0xE04E             B.N      ??img_posedge_2
    195          		}
    196          		else
    197          		{
    198          			for( ;begincol <= endcol ; begincol++)
   \                     ??img_posedge_8: (+1)
   \       0x7E   0x1C52             ADDS     R2,R2,#+1
   \                     ??img_posedge_4: (+1)
   \       0x80   0x0018             MOVS     R0,R3
   \       0x82   0x0011             MOVS     R1,R2
   \       0x84   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \       0x86   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \       0x88   0x4288             CMP      R0,R1
   \       0x8A   0xDB0C             BLT.N    ??img_posedge_9
    199          			{
    200          				if(!imgbuff[beginrow][begincol]) { return 0;}
   \       0x8C   0x....'....        LDR.W    R0,??DataTable11_6
   \       0x90   0x2150             MOVS     R1,#+80
   \       0x92   0xFB14 0xF101      SMULBB   R1,R4,R1
   \       0x96   0x4408             ADD      R0,R0,R1
   \       0x98   0x0011             MOVS     R1,R2
   \       0x9A   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \       0x9C   0x5C40             LDRB     R0,[R0, R1]
   \       0x9E   0x2800             CMP      R0,#+0
   \       0xA0   0xD1ED             BNE.N    ??img_posedge_8
   \       0xA2   0x2000             MOVS     R0,#+0
   \       0xA4   0xE03A             B.N      ??img_posedge_2
    201          			}
    202          			return 1;
   \                     ??img_posedge_9: (+1)
   \       0xA6   0x2001             MOVS     R0,#+1
   \       0xA8   0xE038             B.N      ??img_posedge_2
    203          		}
    204          	}
    205          	else if(begincol == endcol)//检测横向列坐标亮度
   \                     ??img_posedge_3: (+1)
   \       0xAA   0x0010             MOVS     R0,R2
   \       0xAC   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \       0xAE   0xB21B             SXTH     R3,R3            ;; SignExt  R3,R3,#+16,#+16
   \       0xB0   0x4298             CMP      R0,R3
   \       0xB2   0xD132             BNE.N    ??img_posedge_10
    206          	{
    207          		if(beginrow > endrow)
   \       0xB4   0x0008             MOVS     R0,R1
   \       0xB6   0x0023             MOVS     R3,R4
   \       0xB8   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \       0xBA   0xB21B             SXTH     R3,R3            ;; SignExt  R3,R3,#+16,#+16
   \       0xBC   0x4298             CMP      R0,R3
   \       0xBE   0xDA17             BGE.N    ??img_posedge_11
   \       0xC0   0xE000             B.N      ??img_posedge_12
    208          		{
    209          			for( ;beginrow >= endrow;beginrow--)
   \                     ??img_posedge_13: (+1)
   \       0xC2   0x1E64             SUBS     R4,R4,#+1
   \                     ??img_posedge_12: (+1)
   \       0xC4   0x0020             MOVS     R0,R4
   \       0xC6   0x000B             MOVS     R3,R1
   \       0xC8   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \       0xCA   0xB21B             SXTH     R3,R3            ;; SignExt  R3,R3,#+16,#+16
   \       0xCC   0x4298             CMP      R0,R3
   \       0xCE   0xDB0C             BLT.N    ??img_posedge_14
    210          			{
    211          				if(!imgbuff[beginrow][begincol]) { return 0;}
   \       0xD0   0x....'....        LDR.W    R0,??DataTable11_6
   \       0xD4   0x2350             MOVS     R3,#+80
   \       0xD6   0xFB14 0xF303      SMULBB   R3,R4,R3
   \       0xDA   0x4418             ADD      R0,R0,R3
   \       0xDC   0x0013             MOVS     R3,R2
   \       0xDE   0xB21B             SXTH     R3,R3            ;; SignExt  R3,R3,#+16,#+16
   \       0xE0   0x5CC0             LDRB     R0,[R0, R3]
   \       0xE2   0x2800             CMP      R0,#+0
   \       0xE4   0xD1ED             BNE.N    ??img_posedge_13
   \       0xE6   0x2000             MOVS     R0,#+0
   \       0xE8   0xE018             B.N      ??img_posedge_2
    212          			}
    213          			return 1;
   \                     ??img_posedge_14: (+1)
   \       0xEA   0x2001             MOVS     R0,#+1
   \       0xEC   0xE016             B.N      ??img_posedge_2
    214          		}
    215          		else
    216          		{
    217          			for( ;endrow >= beginrow;endrow--)
   \                     ??img_posedge_15: (+1)
   \       0xEE   0x1E49             SUBS     R1,R1,#+1
   \                     ??img_posedge_11: (+1)
   \       0xF0   0x0008             MOVS     R0,R1
   \       0xF2   0x0023             MOVS     R3,R4
   \       0xF4   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \       0xF6   0xB21B             SXTH     R3,R3            ;; SignExt  R3,R3,#+16,#+16
   \       0xF8   0x4298             CMP      R0,R3
   \       0xFA   0xDB0C             BLT.N    ??img_posedge_16
    218          			{
    219          				if(!imgbuff[endrow][begincol]) { return 0;}
   \       0xFC   0x....'....        LDR.W    R0,??DataTable11_6
   \      0x100   0x2350             MOVS     R3,#+80
   \      0x102   0xFB11 0xF303      SMULBB   R3,R1,R3
   \      0x106   0x4418             ADD      R0,R0,R3
   \      0x108   0x0013             MOVS     R3,R2
   \      0x10A   0xB21B             SXTH     R3,R3            ;; SignExt  R3,R3,#+16,#+16
   \      0x10C   0x5CC0             LDRB     R0,[R0, R3]
   \      0x10E   0x2800             CMP      R0,#+0
   \      0x110   0xD1ED             BNE.N    ??img_posedge_15
   \      0x112   0x2000             MOVS     R0,#+0
   \      0x114   0xE002             B.N      ??img_posedge_2
    220          			}
    221          			return 1;
   \                     ??img_posedge_16: (+1)
   \      0x116   0x2001             MOVS     R0,#+1
   \      0x118   0xE000             B.N      ??img_posedge_2
    222          		}
    223          	}
    224          	return 0;
   \                     ??img_posedge_10: (+1)
   \      0x11A   0x2000             MOVS     R0,#+0
   \                     ??img_posedge_2: (+1)
   \      0x11C   0xBC30             POP      {R4,R5}
   \      0x11E   0x4770             BX       LR               ;; return
    225          }
    226          //图像下降沿

   \                                 In section .text, align 2, keep-with-next
    227          uint8 img_negedge(int16 beginrow,int16 endrow,int16 begincol,int16 endcol)//下降沿
    228          {
   \                     img_negedge: (+1)
   \        0x0   0xB430             PUSH     {R4,R5}
   \        0x2   0x0004             MOVS     R4,R0
    229          	if(beginrow == endrow && begincol == endcol)//检测一个点的亮度值
   \        0x4   0x0020             MOVS     R0,R4
   \        0x6   0x000D             MOVS     R5,R1
   \        0x8   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \        0xA   0xB22D             SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
   \        0xC   0x42A8             CMP      R0,R5
   \        0xE   0xD113             BNE.N    ??img_negedge_0
   \       0x10   0x0010             MOVS     R0,R2
   \       0x12   0x001D             MOVS     R5,R3
   \       0x14   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \       0x16   0xB22D             SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
   \       0x18   0x42A8             CMP      R0,R5
   \       0x1A   0xD10D             BNE.N    ??img_negedge_0
    230          	{
    231          		if(!imgbuff[beginrow][begincol]) { return 1; } 
   \       0x1C   0x....'....        LDR.W    R0,??DataTable11_6
   \       0x20   0x2150             MOVS     R1,#+80
   \       0x22   0xFB14 0xF101      SMULBB   R1,R4,R1
   \       0x26   0x4408             ADD      R0,R0,R1
   \       0x28   0xB212             SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
   \       0x2A   0x5C80             LDRB     R0,[R0, R2]
   \       0x2C   0x2800             CMP      R0,#+0
   \       0x2E   0xD101             BNE.N    ??img_negedge_1
   \       0x30   0x2001             MOVS     R0,#+1
   \       0x32   0xE073             B.N      ??img_negedge_2
    232          		return 0;
   \                     ??img_negedge_1: (+1)
   \       0x34   0x2000             MOVS     R0,#+0
   \       0x36   0xE071             B.N      ??img_negedge_2
    233          	}
    234          	else if(beginrow == endrow)//检测纵向行坐标亮度
   \                     ??img_negedge_0: (+1)
   \       0x38   0x0020             MOVS     R0,R4
   \       0x3A   0x000D             MOVS     R5,R1
   \       0x3C   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \       0x3E   0xB22D             SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
   \       0x40   0x42A8             CMP      R0,R5
   \       0x42   0xD132             BNE.N    ??img_negedge_3
    235          	{
    236          		if(begincol > endcol)
   \       0x44   0x0018             MOVS     R0,R3
   \       0x46   0x0011             MOVS     R1,R2
   \       0x48   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \       0x4A   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \       0x4C   0x4288             CMP      R0,R1
   \       0x4E   0xDA17             BGE.N    ??img_negedge_4
   \       0x50   0xE000             B.N      ??img_negedge_5
    237          		{
    238          			for( ;endcol <= begincol; endcol++)
   \                     ??img_negedge_6: (+1)
   \       0x52   0x1C5B             ADDS     R3,R3,#+1
   \                     ??img_negedge_5: (+1)
   \       0x54   0x0010             MOVS     R0,R2
   \       0x56   0x0019             MOVS     R1,R3
   \       0x58   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \       0x5A   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \       0x5C   0x4288             CMP      R0,R1
   \       0x5E   0xDB0C             BLT.N    ??img_negedge_7
    239          			{
    240          				if(imgbuff[beginrow][endcol]) { return 0;}
   \       0x60   0x....'....        LDR.W    R0,??DataTable11_6
   \       0x64   0x2150             MOVS     R1,#+80
   \       0x66   0xFB14 0xF101      SMULBB   R1,R4,R1
   \       0x6A   0x4408             ADD      R0,R0,R1
   \       0x6C   0x0019             MOVS     R1,R3
   \       0x6E   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \       0x70   0x5C40             LDRB     R0,[R0, R1]
   \       0x72   0x2800             CMP      R0,#+0
   \       0x74   0xD0ED             BEQ.N    ??img_negedge_6
   \       0x76   0x2000             MOVS     R0,#+0
   \       0x78   0xE050             B.N      ??img_negedge_2
    241          			}
    242          			return 1;
   \                     ??img_negedge_7: (+1)
   \       0x7A   0x2001             MOVS     R0,#+1
   \       0x7C   0xE04E             B.N      ??img_negedge_2
    243          		}
    244          		else
    245          		{
    246          			for( ;begincol <= endcol ; begincol++)
   \                     ??img_negedge_8: (+1)
   \       0x7E   0x1C52             ADDS     R2,R2,#+1
   \                     ??img_negedge_4: (+1)
   \       0x80   0x0018             MOVS     R0,R3
   \       0x82   0x0011             MOVS     R1,R2
   \       0x84   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \       0x86   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \       0x88   0x4288             CMP      R0,R1
   \       0x8A   0xDB0C             BLT.N    ??img_negedge_9
    247          			{
    248          				if(imgbuff[beginrow][begincol]) { return 0;}
   \       0x8C   0x....'....        LDR.W    R0,??DataTable11_6
   \       0x90   0x2150             MOVS     R1,#+80
   \       0x92   0xFB14 0xF101      SMULBB   R1,R4,R1
   \       0x96   0x4408             ADD      R0,R0,R1
   \       0x98   0x0011             MOVS     R1,R2
   \       0x9A   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \       0x9C   0x5C40             LDRB     R0,[R0, R1]
   \       0x9E   0x2800             CMP      R0,#+0
   \       0xA0   0xD0ED             BEQ.N    ??img_negedge_8
   \       0xA2   0x2000             MOVS     R0,#+0
   \       0xA4   0xE03A             B.N      ??img_negedge_2
    249          			}
    250          			return 1;
   \                     ??img_negedge_9: (+1)
   \       0xA6   0x2001             MOVS     R0,#+1
   \       0xA8   0xE038             B.N      ??img_negedge_2
    251          		}
    252          	}
    253          	else if(begincol == endcol)//检测横向列坐标亮度
   \                     ??img_negedge_3: (+1)
   \       0xAA   0x0010             MOVS     R0,R2
   \       0xAC   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \       0xAE   0xB21B             SXTH     R3,R3            ;; SignExt  R3,R3,#+16,#+16
   \       0xB0   0x4298             CMP      R0,R3
   \       0xB2   0xD132             BNE.N    ??img_negedge_10
    254          	{
    255          		if(beginrow > endrow)
   \       0xB4   0x0008             MOVS     R0,R1
   \       0xB6   0x0023             MOVS     R3,R4
   \       0xB8   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \       0xBA   0xB21B             SXTH     R3,R3            ;; SignExt  R3,R3,#+16,#+16
   \       0xBC   0x4298             CMP      R0,R3
   \       0xBE   0xDA17             BGE.N    ??img_negedge_11
   \       0xC0   0xE000             B.N      ??img_negedge_12
    256          		{
    257          			for( ;beginrow >= endrow;beginrow--)
   \                     ??img_negedge_13: (+1)
   \       0xC2   0x1E64             SUBS     R4,R4,#+1
   \                     ??img_negedge_12: (+1)
   \       0xC4   0x0020             MOVS     R0,R4
   \       0xC6   0x000B             MOVS     R3,R1
   \       0xC8   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \       0xCA   0xB21B             SXTH     R3,R3            ;; SignExt  R3,R3,#+16,#+16
   \       0xCC   0x4298             CMP      R0,R3
   \       0xCE   0xDB0C             BLT.N    ??img_negedge_14
    258          			{
    259          				if(imgbuff[beginrow][begincol]) { return 0;}
   \       0xD0   0x....'....        LDR.W    R0,??DataTable11_6
   \       0xD4   0x2350             MOVS     R3,#+80
   \       0xD6   0xFB14 0xF303      SMULBB   R3,R4,R3
   \       0xDA   0x4418             ADD      R0,R0,R3
   \       0xDC   0x0013             MOVS     R3,R2
   \       0xDE   0xB21B             SXTH     R3,R3            ;; SignExt  R3,R3,#+16,#+16
   \       0xE0   0x5CC0             LDRB     R0,[R0, R3]
   \       0xE2   0x2800             CMP      R0,#+0
   \       0xE4   0xD0ED             BEQ.N    ??img_negedge_13
   \       0xE6   0x2000             MOVS     R0,#+0
   \       0xE8   0xE018             B.N      ??img_negedge_2
    260          			}
    261          			return 1;
   \                     ??img_negedge_14: (+1)
   \       0xEA   0x2001             MOVS     R0,#+1
   \       0xEC   0xE016             B.N      ??img_negedge_2
    262          		}
    263          		else
    264          		{
    265          			for( ;endrow >= beginrow;endrow--)
   \                     ??img_negedge_15: (+1)
   \       0xEE   0x1E49             SUBS     R1,R1,#+1
   \                     ??img_negedge_11: (+1)
   \       0xF0   0x0008             MOVS     R0,R1
   \       0xF2   0x0023             MOVS     R3,R4
   \       0xF4   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \       0xF6   0xB21B             SXTH     R3,R3            ;; SignExt  R3,R3,#+16,#+16
   \       0xF8   0x4298             CMP      R0,R3
   \       0xFA   0xDB0C             BLT.N    ??img_negedge_16
    266          			{
    267          				if(imgbuff[endrow][begincol]) { return 0;}
   \       0xFC   0x....'....        LDR.W    R0,??DataTable11_6
   \      0x100   0x2350             MOVS     R3,#+80
   \      0x102   0xFB11 0xF303      SMULBB   R3,R1,R3
   \      0x106   0x4418             ADD      R0,R0,R3
   \      0x108   0x0013             MOVS     R3,R2
   \      0x10A   0xB21B             SXTH     R3,R3            ;; SignExt  R3,R3,#+16,#+16
   \      0x10C   0x5CC0             LDRB     R0,[R0, R3]
   \      0x10E   0x2800             CMP      R0,#+0
   \      0x110   0xD0ED             BEQ.N    ??img_negedge_15
   \      0x112   0x2000             MOVS     R0,#+0
   \      0x114   0xE002             B.N      ??img_negedge_2
    268          			}
    269          			return 1;
   \                     ??img_negedge_16: (+1)
   \      0x116   0x2001             MOVS     R0,#+1
   \      0x118   0xE000             B.N      ??img_negedge_2
    270          		}
    271          	}
    272          	return 0;
   \                     ??img_negedge_10: (+1)
   \      0x11A   0x2000             MOVS     R0,#+0
   \                     ??img_negedge_2: (+1)
   \      0x11C   0xBC30             POP      {R4,R5}
   \      0x11E   0x4770             BX       LR               ;; return
    273          }
    274          /*  
    275           *  初始行中点定位  返回值 非负数 定位成功
    276           *         -1 ：定位失败，底行丢线
    277           *         -2 ：确认为斑马线则从两边搜索初始点
    278           */    

   \                                 In section .text, align 2, keep-with-next
    279          int16 GetFirstCenter()
    280          {
   \                     GetFirstCenter: (+1)
   \        0x0   0xB57F             PUSH     {R0-R6,LR}
    281          	int16 i,j;
    282          	int16 edge = 0;
   \        0x2   0x2100             MOVS     R1,#+0
    283          	//首行检测斑马线
    284          	for (i = IMG_BOTTOM; i >= IMG_BOTTOM - 3; i--)
   \        0x4   0x2245             MOVS     R2,#+69
   \        0x6   0xE02B             B.N      ??GetFirstCenter_0
    285          	{
    286          		for (j = IMG_LEFT; j < IMG_RIGHT; j++)
    287          		{
    288          			if ((WHITE == imgbuff[i][j] && BLACK == imgbuff[i][j + 1]) || (BLACK == imgbuff[i][j] && WHITE == imgbuff[i][j + 1]))
   \                     ??GetFirstCenter_1: (+1)
   \        0x8   0x2450             MOVS     R4,#+80
   \        0xA   0x....'....        LDR.W    R5,??DataTable11_6
   \        0xE   0xFB12 0xF004      SMULBB   R0,R2,R4
   \       0x12   0x4428             ADD      R0,R5,R0
   \       0x14   0x001E             MOVS     R6,R3
   \       0x16   0xB236             SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
   \       0x18   0x5D80             LDRB     R0,[R0, R6]
   \       0x1A   0x28FF             CMP      R0,#+255
   \       0x1C   0xD108             BNE.N    ??GetFirstCenter_2
   \       0x1E   0xFB12 0xF004      SMULBB   R0,R2,R4
   \       0x22   0x4428             ADD      R0,R5,R0
   \       0x24   0x001E             MOVS     R6,R3
   \       0x26   0xB236             SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
   \       0x28   0x4430             ADD      R0,R0,R6
   \       0x2A   0x7840             LDRB     R0,[R0, #+1]
   \       0x2C   0x2800             CMP      R0,#+0
   \       0x2E   0xD010             BEQ.N    ??GetFirstCenter_3
   \                     ??GetFirstCenter_2: (+1)
   \       0x30   0xFB12 0xF004      SMULBB   R0,R2,R4
   \       0x34   0x4428             ADD      R0,R5,R0
   \       0x36   0x001E             MOVS     R6,R3
   \       0x38   0xB236             SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
   \       0x3A   0x5D80             LDRB     R0,[R0, R6]
   \       0x3C   0x2800             CMP      R0,#+0
   \       0x3E   0xD109             BNE.N    ??GetFirstCenter_4
   \       0x40   0xFB12 0xF004      SMULBB   R0,R2,R4
   \       0x44   0x4428             ADD      R0,R5,R0
   \       0x46   0x001C             MOVS     R4,R3
   \       0x48   0xB224             SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
   \       0x4A   0x4420             ADD      R0,R0,R4
   \       0x4C   0x7840             LDRB     R0,[R0, #+1]
   \       0x4E   0x28FF             CMP      R0,#+255
   \       0x50   0xD100             BNE.N    ??GetFirstCenter_4
    289          			{
    290          				edge++;
   \                     ??GetFirstCenter_3: (+1)
   \       0x52   0x1C49             ADDS     R1,R1,#+1
    291          			}
    292          		}
   \                     ??GetFirstCenter_4: (+1)
   \       0x54   0x1C5B             ADDS     R3,R3,#+1
   \                     ??GetFirstCenter_5: (+1)
   \       0x56   0x0018             MOVS     R0,R3
   \       0x58   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \       0x5A   0x289E             CMP      R0,#+158
   \       0x5C   0xDBD4             BLT.N    ??GetFirstCenter_1
   \       0x5E   0x1E52             SUBS     R2,R2,#+1
   \                     ??GetFirstCenter_0: (+1)
   \       0x60   0x0010             MOVS     R0,R2
   \       0x62   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \       0x64   0x2842             CMP      R0,#+66
   \       0x66   0xDB01             BLT.N    ??GetFirstCenter_6
   \       0x68   0x2301             MOVS     R3,#+1
   \       0x6A   0xE7F4             B.N      ??GetFirstCenter_5
    293          	}
    294          
    295          	if (edge >= 25)
   \                     ??GetFirstCenter_6: (+1)
   \       0x6C   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \       0x6E   0x2919             CMP      R1,#+25
   \       0x70   0xDB02             BLT.N    ??GetFirstCenter_7
    296          	{
    297          		return -2;
   \       0x72   0xF07F 0x0001      MVNS     R0,#+1
   \       0x76   0xE02E             B.N      ??GetFirstCenter_8
    298          	}
    299          
    300          	const int16 sub[] = {59,99,39,119,19,139,IMG_LEFT,IMG_RIGHT};
   \                     ??GetFirstCenter_7: (+1)
   \       0x78   0x4668             MOV      R0,SP
   \       0x7A   0x....'....        LDR.W    R1,??DataTable13
   \       0x7E   0x2210             MOVS     R2,#+16
   \       0x80   0x....'....        BL       __aeabi_memcpy4
    301                  
    302          	for (i = IMG_BOTTOM; i >= IMG_BOTTOM - 3; i--)
   \       0x84   0x2045             MOVS     R0,#+69
   \       0x86   0xE000             B.N      ??GetFirstCenter_9
   \                     ??GetFirstCenter_10: (+1)
   \       0x88   0x1E40             SUBS     R0,R0,#+1
   \                     ??GetFirstCenter_9: (+1)
   \       0x8A   0x0001             MOVS     R1,R0
   \       0x8C   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \       0x8E   0x2942             CMP      R1,#+66
   \       0x90   0xDB1F             BLT.N    ??GetFirstCenter_11
    303          	{
    304          		if (WHITE == imgbuff[IMG_BOTTOM][IMG_COL_CENTER])
   \       0x92   0x....'....        LDR.W    R2,??DataTable11_6
   \       0x96   0xF241 0x51DF      MOVW     R1,#+5599
   \       0x9A   0x5C51             LDRB     R1,[R2, R1]
   \       0x9C   0x29FF             CMP      R1,#+255
   \       0x9E   0xD001             BEQ.N    ??GetFirstCenter_12
    305          		{ return IMG_COL_CENTER; }
    306          		else
    307          		{
    308          			for (j = 0; j < 8; j++)
   \                     ??GetFirstCenter_13: (+1)
   \       0xA0   0x2100             MOVS     R1,#+0
   \       0xA2   0xE002             B.N      ??GetFirstCenter_14
   \                     ??GetFirstCenter_12: (+1)
   \       0xA4   0x204F             MOVS     R0,#+79
   \       0xA6   0xE016             B.N      ??GetFirstCenter_8
   \                     ??GetFirstCenter_15: (+1)
   \       0xA8   0x1C49             ADDS     R1,R1,#+1
   \                     ??GetFirstCenter_14: (+1)
   \       0xAA   0x000B             MOVS     R3,R1
   \       0xAC   0xB21B             SXTH     R3,R3            ;; SignExt  R3,R3,#+16,#+16
   \       0xAE   0x2B08             CMP      R3,#+8
   \       0xB0   0xDAEA             BGE.N    ??GetFirstCenter_10
    309          			{
    310          				if (WHITE == imgbuff[i][sub[j]])
   \       0xB2   0x466B             MOV      R3,SP
   \       0xB4   0x2450             MOVS     R4,#+80
   \       0xB6   0xFB10 0xF404      SMULBB   R4,R0,R4
   \       0xBA   0x4414             ADD      R4,R2,R4
   \       0xBC   0x000D             MOVS     R5,R1
   \       0xBE   0xB22D             SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
   \       0xC0   0xF933 0x5015      LDRSH    R5,[R3, R5, LSL #+1]
   \       0xC4   0x5D64             LDRB     R4,[R4, R5]
   \       0xC6   0x2CFF             CMP      R4,#+255
   \       0xC8   0xD1EE             BNE.N    ??GetFirstCenter_15
    311          				{ return sub[j]; }
   \       0xCA   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \       0xCC   0xF933 0x0011      LDRSH    R0,[R3, R1, LSL #+1]
   \       0xD0   0xE001             B.N      ??GetFirstCenter_8
    312          			}
    313          		}
    314          	}
    315          	
    316          	return -1;
   \                     ??GetFirstCenter_11: (+1)
   \       0xD2   0xF05F 0x30FF      MOVS     R0,#-1
   \                     ??GetFirstCenter_8: (+1)
   \       0xD6   0xB004             ADD      SP,SP,#+16
   \       0xD8   0xBD70             POP      {R4-R6,PC}       ;; return
    317          }
    318          
    319          
    320          //横向扫描，得到列值，方向：左

   \                                 In section .text, align 2, keep-with-next
    321          int16 get_left(int16 row, int16 col, int16 range)
    322          {
   \                     get_left: (+1)
   \        0x0   0xE92D 0x41F0      PUSH     {R4-R8,LR}
   \        0x4   0x0004             MOVS     R4,R0
   \        0x6   0x000D             MOVS     R5,R1
   \        0x8   0x0017             MOVS     R7,R2
    323          	const int16 SearchPixels = 2;
   \        0xA   0x2602             MOVS     R6,#+2
    324          	if (WHITE == imgbuff[row][col])//寻找下降沿
   \        0xC   0x....'....        LDR.W    R0,??DataTable11_6
   \       0x10   0x2150             MOVS     R1,#+80
   \       0x12   0xFB14 0xF101      SMULBB   R1,R4,R1
   \       0x16   0x4408             ADD      R0,R0,R1
   \       0x18   0x0029             MOVS     R1,R5
   \       0x1A   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \       0x1C   0x5C40             LDRB     R0,[R0, R1]
   \       0x1E   0x28FF             CMP      R0,#+255
   \       0x20   0xD122             BNE.N    ??get_left_0
   \       0x22   0xE000             B.N      ??get_left_1
    325          	{
    326          		for (; col >= IMG_LEFT; col--)
   \                     ??get_left_2: (+1)
   \       0x24   0x1E6D             SUBS     R5,R5,#+1
   \                     ??get_left_1: (+1)
   \       0x26   0x0028             MOVS     R0,R5
   \       0x28   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \       0x2A   0x2801             CMP      R0,#+1
   \       0x2C   0xDB19             BLT.N    ??get_left_3
    327          		{
    328          			if (1 == img_negedge(row, row, Max(col - 1, IMG_LEFT), Max(col - SearchPixels, IMG_LEFT)))
   \       0x2E   0x2101             MOVS     R1,#+1
   \       0x30   0x1BA8             SUBS     R0,R5,R6
   \       0x32   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \       0x34   0x....'....        BL       Max
   \       0x38   0x0007             MOVS     R7,R0
   \       0x3A   0x2101             MOVS     R1,#+1
   \       0x3C   0x1E68             SUBS     R0,R5,#+1
   \       0x3E   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \       0x40   0x....'....        BL       Max
   \       0x44   0x003B             MOVS     R3,R7
   \       0x46   0xB21B             SXTH     R3,R3            ;; SignExt  R3,R3,#+16,#+16
   \       0x48   0x0002             MOVS     R2,R0
   \       0x4A   0xB212             SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
   \       0x4C   0x0021             MOVS     R1,R4
   \       0x4E   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \       0x50   0x0020             MOVS     R0,R4
   \       0x52   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \       0x54   0x....'....        BL       img_negedge
   \       0x58   0x2801             CMP      R0,#+1
   \       0x5A   0xD1E3             BNE.N    ??get_left_2
    329          			{ return col; }
   \       0x5C   0x0028             MOVS     R0,R5
   \       0x5E   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \       0x60   0xE02B             B.N      ??get_left_4
    330          		}
    331          		return IMG_LEFT;
   \                     ??get_left_3: (+1)
   \       0x62   0x2001             MOVS     R0,#+1
   \       0x64   0xE029             B.N      ??get_left_4
    332          	}
    333          	else//寻找上升沿
    334          	{
    335          		for (; col <= Min(range, IMG_RIGHT); col++)
   \                     ??get_left_5: (+1)
   \       0x66   0x1C6D             ADDS     R5,R5,#+1
   \                     ??get_left_0: (+1)
   \       0x68   0x219E             MOVS     R1,#+158
   \       0x6A   0x0038             MOVS     R0,R7
   \       0x6C   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \       0x6E   0x....'....        BL       Min
   \       0x72   0x0029             MOVS     R1,R5
   \       0x74   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \       0x76   0x4288             CMP      R0,R1
   \       0x78   0xDB1D             BLT.N    ??get_left_6
    336          		{
    337          			if (1 == img_posedge(row, row, Min(col + 1, IMG_RIGHT), Min(col + SearchPixels, IMG_RIGHT)))
   \       0x7A   0x219E             MOVS     R1,#+158
   \       0x7C   0x1970             ADDS     R0,R6,R5
   \       0x7E   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \       0x80   0x....'....        BL       Min
   \       0x84   0x4680             MOV      R8,R0
   \       0x86   0x219E             MOVS     R1,#+158
   \       0x88   0x1C68             ADDS     R0,R5,#+1
   \       0x8A   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \       0x8C   0x....'....        BL       Min
   \       0x90   0x4643             MOV      R3,R8
   \       0x92   0xB21B             SXTH     R3,R3            ;; SignExt  R3,R3,#+16,#+16
   \       0x94   0x0002             MOVS     R2,R0
   \       0x96   0xB212             SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
   \       0x98   0x0021             MOVS     R1,R4
   \       0x9A   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \       0x9C   0x0020             MOVS     R0,R4
   \       0x9E   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \       0xA0   0x....'....        BL       img_posedge
   \       0xA4   0x2801             CMP      R0,#+1
   \       0xA6   0xD1DE             BNE.N    ??get_left_5
    338          			{ return Min(col + 1, IMG_RIGHT); }
   \       0xA8   0x219E             MOVS     R1,#+158
   \       0xAA   0x1C6D             ADDS     R5,R5,#+1
   \       0xAC   0x0028             MOVS     R0,R5
   \       0xAE   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \       0xB0   0x....'....        BL       Min
   \       0xB4   0xE001             B.N      ??get_left_4
    339          		}
    340          	}
    341          	return -1;
   \                     ??get_left_6: (+1)
   \       0xB6   0xF05F 0x30FF      MOVS     R0,#-1
   \                     ??get_left_4: (+1)
   \       0xBA   0xE8BD 0x81F0      POP      {R4-R8,PC}       ;; return
    342          }
    343          
    344          //横向扫描，得到列值，方向：右

   \                                 In section .text, align 2, keep-with-next
    345          int16 get_right(int16 row, int16 col, int16 range)
    346          {
   \                     get_right: (+1)
   \        0x0   0xE92D 0x41F0      PUSH     {R4-R8,LR}
   \        0x4   0x0004             MOVS     R4,R0
   \        0x6   0x000D             MOVS     R5,R1
   \        0x8   0x0017             MOVS     R7,R2
    347          	const int16 SearchPixels = 2;
   \        0xA   0x2602             MOVS     R6,#+2
    348          	if (WHITE == imgbuff[row][col])//寻找下降沿
   \        0xC   0x....'....        LDR.W    R0,??DataTable11_6
   \       0x10   0x2150             MOVS     R1,#+80
   \       0x12   0xFB14 0xF101      SMULBB   R1,R4,R1
   \       0x16   0x4408             ADD      R0,R0,R1
   \       0x18   0x0029             MOVS     R1,R5
   \       0x1A   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \       0x1C   0x5C40             LDRB     R0,[R0, R1]
   \       0x1E   0x28FF             CMP      R0,#+255
   \       0x20   0xD122             BNE.N    ??get_right_0
   \       0x22   0xE000             B.N      ??get_right_1
    349          	{
    350          		for (; col <= IMG_RIGHT; col++)
   \                     ??get_right_2: (+1)
   \       0x24   0x1C6D             ADDS     R5,R5,#+1
   \                     ??get_right_1: (+1)
   \       0x26   0x0028             MOVS     R0,R5
   \       0x28   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \       0x2A   0x289F             CMP      R0,#+159
   \       0x2C   0xDA19             BGE.N    ??get_right_3
    351          		{
    352          			if (1 == img_negedge(row, row, Min(col + 1, IMG_RIGHT), Min(col + SearchPixels, IMG_RIGHT)))
   \       0x2E   0x219E             MOVS     R1,#+158
   \       0x30   0x1970             ADDS     R0,R6,R5
   \       0x32   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \       0x34   0x....'....        BL       Min
   \       0x38   0x0007             MOVS     R7,R0
   \       0x3A   0x219E             MOVS     R1,#+158
   \       0x3C   0x1C68             ADDS     R0,R5,#+1
   \       0x3E   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \       0x40   0x....'....        BL       Min
   \       0x44   0x003B             MOVS     R3,R7
   \       0x46   0xB21B             SXTH     R3,R3            ;; SignExt  R3,R3,#+16,#+16
   \       0x48   0x0002             MOVS     R2,R0
   \       0x4A   0xB212             SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
   \       0x4C   0x0021             MOVS     R1,R4
   \       0x4E   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \       0x50   0x0020             MOVS     R0,R4
   \       0x52   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \       0x54   0x....'....        BL       img_negedge
   \       0x58   0x2801             CMP      R0,#+1
   \       0x5A   0xD1E3             BNE.N    ??get_right_2
    353          			{ return col; }
   \       0x5C   0x0028             MOVS     R0,R5
   \       0x5E   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \       0x60   0xE02A             B.N      ??get_right_4
    354          		}
    355          		return IMG_RIGHT;
   \                     ??get_right_3: (+1)
   \       0x62   0x209E             MOVS     R0,#+158
   \       0x64   0xE028             B.N      ??get_right_4
    356          	}
    357          	else//寻找上升沿
    358          	{
    359          		for (; col >= Max(range, IMG_LEFT); col--)
   \                     ??get_right_5: (+1)
   \       0x66   0x1E6D             SUBS     R5,R5,#+1
   \                     ??get_right_0: (+1)
   \       0x68   0x2101             MOVS     R1,#+1
   \       0x6A   0x0038             MOVS     R0,R7
   \       0x6C   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \       0x6E   0x....'....        BL       Max
   \       0x72   0x0029             MOVS     R1,R5
   \       0x74   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \       0x76   0x4281             CMP      R1,R0
   \       0x78   0xDB1C             BLT.N    ??get_right_6
    360          		{
    361          			if (1 == img_posedge(row, row, Max(col - 1, IMG_LEFT), Max(col - SearchPixels, IMG_LEFT)))
   \       0x7A   0x2101             MOVS     R1,#+1
   \       0x7C   0x1BA8             SUBS     R0,R5,R6
   \       0x7E   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \       0x80   0x....'....        BL       Max
   \       0x84   0x4680             MOV      R8,R0
   \       0x86   0x2101             MOVS     R1,#+1
   \       0x88   0x1E68             SUBS     R0,R5,#+1
   \       0x8A   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \       0x8C   0x....'....        BL       Max
   \       0x90   0x4643             MOV      R3,R8
   \       0x92   0xB21B             SXTH     R3,R3            ;; SignExt  R3,R3,#+16,#+16
   \       0x94   0x0002             MOVS     R2,R0
   \       0x96   0xB212             SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
   \       0x98   0x0021             MOVS     R1,R4
   \       0x9A   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \       0x9C   0x0020             MOVS     R0,R4
   \       0x9E   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \       0xA0   0x....'....        BL       img_posedge
   \       0xA4   0x2801             CMP      R0,#+1
   \       0xA6   0xD1DE             BNE.N    ??get_right_5
    362          			{ return Max(col - 1, IMG_LEFT); }
   \       0xA8   0x2101             MOVS     R1,#+1
   \       0xAA   0x1E68             SUBS     R0,R5,#+1
   \       0xAC   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \       0xAE   0x....'....        BL       Max
   \       0xB2   0xE001             B.N      ??get_right_4
    363          		}
    364          	}
    365          	return -1;
   \                     ??get_right_6: (+1)
   \       0xB4   0xF05F 0x30FF      MOVS     R0,#-1
   \                     ??get_right_4: (+1)
   \       0xB8   0xE8BD 0x81F0      POP      {R4-R8,PC}       ;; return
    366          }
    367          
    368          //纵向扫描，得到行值，方向：向上

   \                                 In section .text, align 2, keep-with-next
    369          int16 get_height(int16 row, int16 col, int16 range)
    370          {
   \                     get_height: (+1)
   \        0x0   0xE92D 0x41F0      PUSH     {R4-R8,LR}
   \        0x4   0x0004             MOVS     R4,R0
   \        0x6   0x000D             MOVS     R5,R1
   \        0x8   0x0016             MOVS     R6,R2
    371          	int16 SearchPixels;
    372          	//滤除噪点
    373          	if (col == IMG_LEFT || col == IMG_RIGHT || col == IMG_COL_CENTER)
   \        0xA   0x0028             MOVS     R0,R5
   \        0xC   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \        0xE   0x2801             CMP      R0,#+1
   \       0x10   0xD007             BEQ.N    ??get_height_0
   \       0x12   0x0028             MOVS     R0,R5
   \       0x14   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \       0x16   0x289E             CMP      R0,#+158
   \       0x18   0xD003             BEQ.N    ??get_height_0
   \       0x1A   0x0028             MOVS     R0,R5
   \       0x1C   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \       0x1E   0x284F             CMP      R0,#+79
   \       0x20   0xD101             BNE.N    ??get_height_1
    374          	{ SearchPixels = 3; }
   \                     ??get_height_0: (+1)
   \       0x22   0x2703             MOVS     R7,#+3
   \       0x24   0xE000             B.N      ??get_height_2
    375          	else
    376          	{ SearchPixels = 1; }
   \                     ??get_height_1: (+1)
   \       0x26   0x2701             MOVS     R7,#+1
    377          	if (WHITE == imgbuff[row][col])//寻找下降沿
   \                     ??get_height_2: (+1)
   \       0x28   0x....'....        LDR.W    R0,??DataTable11_6
   \       0x2C   0x2150             MOVS     R1,#+80
   \       0x2E   0xFB14 0xF101      SMULBB   R1,R4,R1
   \       0x32   0x4408             ADD      R0,R0,R1
   \       0x34   0x0029             MOVS     R1,R5
   \       0x36   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \       0x38   0x5C40             LDRB     R0,[R0, R1]
   \       0x3A   0x28FF             CMP      R0,#+255
   \       0x3C   0xD126             BNE.N    ??get_height_3
   \       0x3E   0xE000             B.N      ??get_height_4
    378          	{
    379          		for (; row >= range; row--)
   \                     ??get_height_5: (+1)
   \       0x40   0x1E64             SUBS     R4,R4,#+1
   \                     ??get_height_4: (+1)
   \       0x42   0x0020             MOVS     R0,R4
   \       0x44   0x0031             MOVS     R1,R6
   \       0x46   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \       0x48   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \       0x4A   0x4288             CMP      R0,R1
   \       0x4C   0xDB1A             BLT.N    ??get_height_6
    380          		{
    381          			if (1 == img_negedge(Max(row - 1, range), Max(row - SearchPixels, range), col, col))//下降沿
   \       0x4E   0x0031             MOVS     R1,R6
   \       0x50   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \       0x52   0x1BE0             SUBS     R0,R4,R7
   \       0x54   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \       0x56   0x....'....        BL       Max
   \       0x5A   0x4680             MOV      R8,R0
   \       0x5C   0x0031             MOVS     R1,R6
   \       0x5E   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \       0x60   0x1E60             SUBS     R0,R4,#+1
   \       0x62   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \       0x64   0x....'....        BL       Max
   \       0x68   0x002B             MOVS     R3,R5
   \       0x6A   0xB21B             SXTH     R3,R3            ;; SignExt  R3,R3,#+16,#+16
   \       0x6C   0x002A             MOVS     R2,R5
   \       0x6E   0xB212             SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
   \       0x70   0x4641             MOV      R1,R8
   \       0x72   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \       0x74   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \       0x76   0x....'....        BL       img_negedge
   \       0x7A   0x2801             CMP      R0,#+1
   \       0x7C   0xD1E0             BNE.N    ??get_height_5
    382          			{ return row; }
   \       0x7E   0x0020             MOVS     R0,R4
   \       0x80   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \       0x82   0xE025             B.N      ??get_height_7
    383          		}
    384          		return range;
   \                     ??get_height_6: (+1)
   \       0x84   0x0030             MOVS     R0,R6
   \       0x86   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \       0x88   0xE022             B.N      ??get_height_7
    385          	}
    386          	else//寻找上升沿
    387          	{
    388          		for (; row <= IMG_BOTTOM; row++)
   \                     ??get_height_8: (+1)
   \       0x8A   0x1C64             ADDS     R4,R4,#+1
   \                     ??get_height_3: (+1)
   \       0x8C   0x0020             MOVS     R0,R4
   \       0x8E   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \       0x90   0x2846             CMP      R0,#+70
   \       0x92   0xDA1C             BGE.N    ??get_height_9
    389          		{
    390          			if (1 == img_posedge(Min(row + 1, IMG_BOTTOM), Min(row + SearchPixels, IMG_BOTTOM), col, col))//上升沿
   \       0x94   0x2145             MOVS     R1,#+69
   \       0x96   0x1938             ADDS     R0,R7,R4
   \       0x98   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \       0x9A   0x....'....        BL       Min
   \       0x9E   0x0006             MOVS     R6,R0
   \       0xA0   0x2145             MOVS     R1,#+69
   \       0xA2   0x1C60             ADDS     R0,R4,#+1
   \       0xA4   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \       0xA6   0x....'....        BL       Min
   \       0xAA   0x002B             MOVS     R3,R5
   \       0xAC   0xB21B             SXTH     R3,R3            ;; SignExt  R3,R3,#+16,#+16
   \       0xAE   0x002A             MOVS     R2,R5
   \       0xB0   0xB212             SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
   \       0xB2   0x0031             MOVS     R1,R6
   \       0xB4   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \       0xB6   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \       0xB8   0x....'....        BL       img_posedge
   \       0xBC   0x2801             CMP      R0,#+1
   \       0xBE   0xD1E4             BNE.N    ??get_height_8
    391          			{ return Min(row + 1, IMG_BOTTOM); }
   \       0xC0   0x2145             MOVS     R1,#+69
   \       0xC2   0x1C64             ADDS     R4,R4,#+1
   \       0xC4   0x0020             MOVS     R0,R4
   \       0xC6   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \       0xC8   0x....'....        BL       Min
   \       0xCC   0xE000             B.N      ??get_height_7
    392          		}
    393          	}
    394          	return IMG_BOTTOM;
   \                     ??get_height_9: (+1)
   \       0xCE   0x2045             MOVS     R0,#+69
   \                     ??get_height_7: (+1)
   \       0xD0   0xE8BD 0x81F0      POP      {R4-R8,PC}       ;; return
    395          }
    396          
    397          
    398          /*
    399           *  通过宽度横向搜索左边缘
    400           *  如果搜索到图像最顶端、底端则判定失败
    401           */

   \                                 In section .text, align 2, keep-with-next
    402          int16 SearchLeftEdgeByHeight(int16 row, int16 col)
    403          {
   \                     SearchLeftEdgeByHeight: (+1)
   \        0x0   0xB538             PUSH     {R3-R5,LR}
   \        0x2   0x0004             MOVS     R4,R0
   \        0x4   0x000D             MOVS     R5,R1
    404          	if (IMG_TOP == row)
   \        0x6   0x0020             MOVS     R0,R4
   \        0x8   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \        0xA   0x280A             CMP      R0,#+10
   \        0xC   0xD102             BNE.N    ??SearchLeftEdgeByHeight_0
    405          	{ return -1; }
   \        0xE   0xF05F 0x30FF      MOVS     R0,#-1
   \       0x12   0xE025             B.N      ??SearchLeftEdgeByHeight_1
    406          	int16 temp_row = row;
   \                     ??SearchLeftEdgeByHeight_0: (+1)
   \       0x14   0x0020             MOVS     R0,R4
   \       0x16   0xE008             B.N      ??SearchLeftEdgeByHeight_2
    407          	for (; col <= IMG_RIGHT; col++)
    408          	{
    409          		temp_row = get_height(temp_row, col, IMG_TOP);
    410          		if (temp_row <= row)
    411          		{ return col; }
    412          		if (IMG_TOP == temp_row)
   \                     ??SearchLeftEdgeByHeight_3: (+1)
   \       0x18   0x0001             MOVS     R1,R0
   \       0x1A   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \       0x1C   0x290A             CMP      R1,#+10
   \       0x1E   0xD017             BEQ.N    ??SearchLeftEdgeByHeight_4
    413          		{ return -1; }
    414          		if (IMG_BOTTOM == temp_row)
   \                     ??SearchLeftEdgeByHeight_5: (+1)
   \       0x20   0x0001             MOVS     R1,R0
   \       0x22   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \       0x24   0x2945             CMP      R1,#+69
   \       0x26   0xD016             BEQ.N    ??SearchLeftEdgeByHeight_6
   \                     ??SearchLeftEdgeByHeight_7: (+1)
   \       0x28   0x1C6D             ADDS     R5,R5,#+1
   \                     ??SearchLeftEdgeByHeight_2: (+1)
   \       0x2A   0x0029             MOVS     R1,R5
   \       0x2C   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \       0x2E   0x299F             CMP      R1,#+159
   \       0x30   0xDA14             BGE.N    ??SearchLeftEdgeByHeight_8
   \       0x32   0x220A             MOVS     R2,#+10
   \       0x34   0x0029             MOVS     R1,R5
   \       0x36   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \       0x38   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \       0x3A   0x....'....        BL       get_height
   \       0x3E   0x0021             MOVS     R1,R4
   \       0x40   0x0002             MOVS     R2,R0
   \       0x42   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \       0x44   0xB212             SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
   \       0x46   0x4291             CMP      R1,R2
   \       0x48   0xDBE6             BLT.N    ??SearchLeftEdgeByHeight_3
   \       0x4A   0x0028             MOVS     R0,R5
   \       0x4C   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \       0x4E   0xE007             B.N      ??SearchLeftEdgeByHeight_1
   \                     ??SearchLeftEdgeByHeight_4: (+1)
   \       0x50   0xF05F 0x30FF      MOVS     R0,#-1
   \       0x54   0xE004             B.N      ??SearchLeftEdgeByHeight_1
    415          		{ return -1; }
   \                     ??SearchLeftEdgeByHeight_6: (+1)
   \       0x56   0xF05F 0x30FF      MOVS     R0,#-1
   \       0x5A   0xE001             B.N      ??SearchLeftEdgeByHeight_1
    416          	}
    417          	return -1;
   \                     ??SearchLeftEdgeByHeight_8: (+1)
   \       0x5C   0xF05F 0x30FF      MOVS     R0,#-1
   \                     ??SearchLeftEdgeByHeight_1: (+1)
   \       0x60   0xBD32             POP      {R1,R4,R5,PC}    ;; return
    418          }
    419          /*
    420           * 通过宽度横向搜索右边缘
    421           * 如果搜索到图像最顶端、底端则判定失败
    422           */

   \                                 In section .text, align 2, keep-with-next
    423          int16 SearchRightEdgeByHeight(int16 row, int16 col)
    424          {
   \                     SearchRightEdgeByHeight: (+1)
   \        0x0   0xB538             PUSH     {R3-R5,LR}
   \        0x2   0x0004             MOVS     R4,R0
   \        0x4   0x000D             MOVS     R5,R1
    425          	if (IMG_TOP == row)
   \        0x6   0x0020             MOVS     R0,R4
   \        0x8   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \        0xA   0x280A             CMP      R0,#+10
   \        0xC   0xD102             BNE.N    ??SearchRightEdgeByHeight_0
    426          	{ return -1; }
   \        0xE   0xF05F 0x30FF      MOVS     R0,#-1
   \       0x12   0xE025             B.N      ??SearchRightEdgeByHeight_1
    427          	int16 temp_row = row;
   \                     ??SearchRightEdgeByHeight_0: (+1)
   \       0x14   0x0020             MOVS     R0,R4
   \       0x16   0xE008             B.N      ??SearchRightEdgeByHeight_2
    428          	for (; col >= IMG_LEFT; col--)
    429          	{
    430          		temp_row = get_height(temp_row, col, IMG_TOP);
    431          		if (temp_row <= row)
    432          		{ return col; }
    433          		if (IMG_TOP == temp_row)
   \                     ??SearchRightEdgeByHeight_3: (+1)
   \       0x18   0x0001             MOVS     R1,R0
   \       0x1A   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \       0x1C   0x290A             CMP      R1,#+10
   \       0x1E   0xD017             BEQ.N    ??SearchRightEdgeByHeight_4
    434          		{ return -1; }
    435          		if (IMG_BOTTOM == temp_row)
   \                     ??SearchRightEdgeByHeight_5: (+1)
   \       0x20   0x0001             MOVS     R1,R0
   \       0x22   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \       0x24   0x2945             CMP      R1,#+69
   \       0x26   0xD016             BEQ.N    ??SearchRightEdgeByHeight_6
   \                     ??SearchRightEdgeByHeight_7: (+1)
   \       0x28   0x1E6D             SUBS     R5,R5,#+1
   \                     ??SearchRightEdgeByHeight_2: (+1)
   \       0x2A   0x0029             MOVS     R1,R5
   \       0x2C   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \       0x2E   0x2901             CMP      R1,#+1
   \       0x30   0xDB14             BLT.N    ??SearchRightEdgeByHeight_8
   \       0x32   0x220A             MOVS     R2,#+10
   \       0x34   0x0029             MOVS     R1,R5
   \       0x36   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \       0x38   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \       0x3A   0x....'....        BL       get_height
   \       0x3E   0x0021             MOVS     R1,R4
   \       0x40   0x0002             MOVS     R2,R0
   \       0x42   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \       0x44   0xB212             SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
   \       0x46   0x4291             CMP      R1,R2
   \       0x48   0xDBE6             BLT.N    ??SearchRightEdgeByHeight_3
   \       0x4A   0x0028             MOVS     R0,R5
   \       0x4C   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \       0x4E   0xE007             B.N      ??SearchRightEdgeByHeight_1
   \                     ??SearchRightEdgeByHeight_4: (+1)
   \       0x50   0xF05F 0x30FF      MOVS     R0,#-1
   \       0x54   0xE004             B.N      ??SearchRightEdgeByHeight_1
    436          		{ return -1; }
   \                     ??SearchRightEdgeByHeight_6: (+1)
   \       0x56   0xF05F 0x30FF      MOVS     R0,#-1
   \       0x5A   0xE001             B.N      ??SearchRightEdgeByHeight_1
    437          	}
    438          	return -1;
   \                     ??SearchRightEdgeByHeight_8: (+1)
   \       0x5C   0xF05F 0x30FF      MOVS     R0,#-1
   \                     ??SearchRightEdgeByHeight_1: (+1)
   \       0x60   0xBD32             POP      {R1,R4,R5,PC}    ;; return
    439          }
    440          /*
    441           * 边缘滤波，删除交叉边缘区域
    442           * 更变截至行
    443           */

   \                                 In section .text, align 2, keep-with-next
    444          void EdgeFilter(void)
    445          {
   \                     EdgeFilter: (+1)
   \        0x0   0xB430             PUSH     {R4,R5}
    446          	for (int16 i = IMG_BOTTOM; i >= IMG_TOP; i--)
   \        0x2   0x2045             MOVS     R0,#+69
   \        0x4   0xE000             B.N      ??EdgeFilter_0
   \                     ??EdgeFilter_1: (+1)
   \        0x6   0x1E40             SUBS     R0,R0,#+1
   \                     ??EdgeFilter_0: (+1)
   \        0x8   0x0001             MOVS     R1,R0
   \        0xA   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \        0xC   0x290A             CMP      R1,#+10
   \        0xE   0xDB21             BLT.N    ??EdgeFilter_2
    447          	{
    448          		if (i >= row_left_end && i >= row_right_end && leftEdge[i] > rightEdge[i])
   \       0x10   0x....'....        LDR.W    R1,??DataTable11_3
   \       0x14   0x0002             MOVS     R2,R0
   \       0x16   0xF9B1 0x3000      LDRSH    R3,[R1, #+0]
   \       0x1A   0xB212             SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
   \       0x1C   0x429A             CMP      R2,R3
   \       0x1E   0xDBF2             BLT.N    ??EdgeFilter_1
   \       0x20   0x....'....        LDR.W    R2,??DataTable11_5
   \       0x24   0x0003             MOVS     R3,R0
   \       0x26   0xF9B2 0x4000      LDRSH    R4,[R2, #+0]
   \       0x2A   0xB21B             SXTH     R3,R3            ;; SignExt  R3,R3,#+16,#+16
   \       0x2C   0x42A3             CMP      R3,R4
   \       0x2E   0xDBEA             BLT.N    ??EdgeFilter_1
   \       0x30   0x....'....        LDR.W    R3,??DataTable14
   \       0x34   0x0004             MOVS     R4,R0
   \       0x36   0xB224             SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
   \       0x38   0xF933 0x3014      LDRSH    R3,[R3, R4, LSL #+1]
   \       0x3C   0x....'....        LDR.W    R4,??DataTable15
   \       0x40   0x0005             MOVS     R5,R0
   \       0x42   0xB22D             SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
   \       0x44   0xF934 0x4015      LDRSH    R4,[R4, R5, LSL #+1]
   \       0x48   0x42A3             CMP      R3,R4
   \       0x4A   0xDADC             BGE.N    ??EdgeFilter_1
    449          		{
    450          			row_left_end = i + 1;
   \       0x4C   0x1C43             ADDS     R3,R0,#+1
   \       0x4E   0x800B             STRH     R3,[R1, #+0]
    451          			row_right_end = i + 1;
   \       0x50   0x1C40             ADDS     R0,R0,#+1
   \       0x52   0x8010             STRH     R0,[R2, #+0]
    452          			break;
    453          		}
    454          	}
    455          }
   \                     ??EdgeFilter_2: (+1)
   \       0x54   0xBC30             POP      {R4,R5}
   \       0x56   0x4770             BX       LR               ;; return
    456          
    457          /*
    458           *  查找左边正常趋势初始位置
    459           *  
    460           */

   \                                 In section .text, align 2, keep-with-next
    461          int16 SearchLeftTendency(int16 row)
    462          {
   \                     SearchLeftTendency: (+1)
   \        0x0   0xB570             PUSH     {R4-R6,LR}
   \        0x2   0x0004             MOVS     R4,R0
    463          	if (IMG_BOTTOM == row)
   \        0x4   0x0020             MOVS     R0,R4
   \        0x6   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \        0x8   0x2845             CMP      R0,#+69
   \        0xA   0xD103             BNE.N    ??SearchLeftTendency_0
    464          	{
    465          		return -1;
   \        0xC   0xF05F 0x30FF      MOVS     R0,#-1
   \       0x10   0xE03A             B.N      ??SearchLeftTendency_1
    466          	}
    467          	for (; row > row_left_end + 2; row--)
   \                     ??SearchLeftTendency_2: (+1)
   \       0x12   0x1E64             SUBS     R4,R4,#+1
   \                     ??SearchLeftTendency_0: (+1)
   \       0x14   0x....'....        LDR.W    R0,??DataTable11_3
   \       0x18   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \       0x1C   0x1C80             ADDS     R0,R0,#+2
   \       0x1E   0x0021             MOVS     R1,R4
   \       0x20   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \       0x22   0x4288             CMP      R0,R1
   \       0x24   0xDA2E             BGE.N    ??SearchLeftTendency_3
    468          	{
    469          		if (1 == JudgeNumInterval((leftEdge[row] - leftEdge[row - 1]), -1, -5) && 1 == JudgeNumInterval((leftEdge[row - 1] - leftEdge[row - 2]), -1, -5))
   \       0x26   0x....'....        LDR.W    R5,??DataTable15
   \       0x2A   0xF07F 0x0604      MVNS     R6,#+4
   \       0x2E   0x0032             MOVS     R2,R6
   \       0x30   0xF05F 0x31FF      MOVS     R1,#-1
   \       0x34   0x0020             MOVS     R0,R4
   \       0x36   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \       0x38   0xF835 0x0010      LDRH     R0,[R5, R0, LSL #+1]
   \       0x3C   0x0023             MOVS     R3,R4
   \       0x3E   0xB21B             SXTH     R3,R3            ;; SignExt  R3,R3,#+16,#+16
   \       0x40   0xEB05 0x0343      ADD      R3,R5,R3, LSL #+1
   \       0x44   0xF833 0x3C02      LDRH     R3,[R3, #-2]
   \       0x48   0x1AC0             SUBS     R0,R0,R3
   \       0x4A   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \       0x4C   0x....'....        BL       JudgeNumInterval
   \       0x50   0x2801             CMP      R0,#+1
   \       0x52   0xD1DE             BNE.N    ??SearchLeftTendency_2
   \       0x54   0x0032             MOVS     R2,R6
   \       0x56   0xF05F 0x31FF      MOVS     R1,#-1
   \       0x5A   0x0020             MOVS     R0,R4
   \       0x5C   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \       0x5E   0xEB05 0x0040      ADD      R0,R5,R0, LSL #+1
   \       0x62   0xF830 0x0C02      LDRH     R0,[R0, #-2]
   \       0x66   0x0023             MOVS     R3,R4
   \       0x68   0xB21B             SXTH     R3,R3            ;; SignExt  R3,R3,#+16,#+16
   \       0x6A   0xEB05 0x0343      ADD      R3,R5,R3, LSL #+1
   \       0x6E   0xF833 0x3C04      LDRH     R3,[R3, #-4]
   \       0x72   0x1AC0             SUBS     R0,R0,R3
   \       0x74   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \       0x76   0x....'....        BL       JudgeNumInterval
   \       0x7A   0x2801             CMP      R0,#+1
   \       0x7C   0xD1C9             BNE.N    ??SearchLeftTendency_2
    470          		{
    471          			return row;
   \       0x7E   0x0020             MOVS     R0,R4
   \       0x80   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \       0x82   0xE001             B.N      ??SearchLeftTendency_1
    472          		}
    473          	}
    474          
    475          	return -1;
   \                     ??SearchLeftTendency_3: (+1)
   \       0x84   0xF05F 0x30FF      MOVS     R0,#-1
   \                     ??SearchLeftTendency_1: (+1)
   \       0x88   0xBD70             POP      {R4-R6,PC}       ;; return
    476          }
    477          /*
    478           *  查找右边正常趋势初始位置
    479           * 
    480           */

   \                                 In section .text, align 2, keep-with-next
    481          int16 SearchRightTendency(int16 row)
    482          {
   \                     SearchRightTendency: (+1)
   \        0x0   0xB538             PUSH     {R3-R5,LR}
   \        0x2   0x0004             MOVS     R4,R0
    483          	if (IMG_BOTTOM == row)
   \        0x4   0x0020             MOVS     R0,R4
   \        0x6   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \        0x8   0x2845             CMP      R0,#+69
   \        0xA   0xD103             BNE.N    ??SearchRightTendency_0
    484          	{
    485          		return -1;
   \        0xC   0xF05F 0x30FF      MOVS     R0,#-1
   \       0x10   0xE036             B.N      ??SearchRightTendency_1
    486          	}
    487          	for (; row > row_right_end + 2; row--)
   \                     ??SearchRightTendency_2: (+1)
   \       0x12   0x1E64             SUBS     R4,R4,#+1
   \                     ??SearchRightTendency_0: (+1)
   \       0x14   0x....'....        LDR.W    R0,??DataTable11_5
   \       0x18   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \       0x1C   0x1C80             ADDS     R0,R0,#+2
   \       0x1E   0x0021             MOVS     R1,R4
   \       0x20   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \       0x22   0x4288             CMP      R0,R1
   \       0x24   0xDA2A             BGE.N    ??SearchRightTendency_3
    488          	{
    489          		if (1 == JudgeNumInterval((rightEdge[row] - rightEdge[row - 1]), 5, 1) && 1 == JudgeNumInterval((rightEdge[row - 1] - rightEdge[row - 2]), 5, 1))
   \       0x26   0x....'....        LDR.W    R5,??DataTable15_1
   \       0x2A   0x2201             MOVS     R2,#+1
   \       0x2C   0x2105             MOVS     R1,#+5
   \       0x2E   0x0020             MOVS     R0,R4
   \       0x30   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \       0x32   0xF835 0x0010      LDRH     R0,[R5, R0, LSL #+1]
   \       0x36   0x0023             MOVS     R3,R4
   \       0x38   0xB21B             SXTH     R3,R3            ;; SignExt  R3,R3,#+16,#+16
   \       0x3A   0xEB05 0x0343      ADD      R3,R5,R3, LSL #+1
   \       0x3E   0xF833 0x3C02      LDRH     R3,[R3, #-2]
   \       0x42   0x1AC0             SUBS     R0,R0,R3
   \       0x44   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \       0x46   0x....'....        BL       JudgeNumInterval
   \       0x4A   0x2801             CMP      R0,#+1
   \       0x4C   0xD1E1             BNE.N    ??SearchRightTendency_2
   \       0x4E   0x2201             MOVS     R2,#+1
   \       0x50   0x2105             MOVS     R1,#+5
   \       0x52   0x0020             MOVS     R0,R4
   \       0x54   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \       0x56   0xEB05 0x0040      ADD      R0,R5,R0, LSL #+1
   \       0x5A   0xF830 0x0C02      LDRH     R0,[R0, #-2]
   \       0x5E   0x0023             MOVS     R3,R4
   \       0x60   0xB21B             SXTH     R3,R3            ;; SignExt  R3,R3,#+16,#+16
   \       0x62   0xEB05 0x0343      ADD      R3,R5,R3, LSL #+1
   \       0x66   0xF833 0x3C04      LDRH     R3,[R3, #-4]
   \       0x6A   0x1AC0             SUBS     R0,R0,R3
   \       0x6C   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \       0x6E   0x....'....        BL       JudgeNumInterval
   \       0x72   0x2801             CMP      R0,#+1
   \       0x74   0xD1CD             BNE.N    ??SearchRightTendency_2
    490          		{
    491          			return row;
   \       0x76   0x0020             MOVS     R0,R4
   \       0x78   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \       0x7A   0xE001             B.N      ??SearchRightTendency_1
    492          		}
    493          	}
    494          
    495          	return -1;
   \                     ??SearchRightTendency_3: (+1)
   \       0x7C   0xF05F 0x30FF      MOVS     R0,#-1
   \                     ??SearchRightTendency_1: (+1)
   \       0x80   0xBD32             POP      {R1,R4,R5,PC}    ;; return
    496          }
    497          
    498          /*  
    499           *  搜索范围 ：若干像素
    500           *  初始位置 ：图像底行中心
    501           *  通过2(x,y)个方向的扫描图像获取边缘
    502           */

   \                                 In section .text, align 2, keep-with-next
    503          void EdgeInit(void)
    504          {
   \                     EdgeInit: (+1)
   \        0x0   0xE92D 0x47F0      PUSH     {R4-R10,LR}
    505          	uint8 row_finished_left = 0;
   \        0x4   0x2400             MOVS     R4,#+0
    506          	uint8 row_finished_right = 0;
   \        0x6   0x2500             MOVS     R5,#+0
    507          	int16 templeft;
    508          	int16 tempright;
    509          	//斑马线
    510          	if (-2 == fstpoint)
   \        0x8   0x....             LDR.N    R0,??DataTable10_1
   \        0xA   0xF9B0 0x1000      LDRSH    R1,[R0, #+0]
   \        0xE   0xF111 0x0F02      CMN      R1,#+2
   \       0x12   0xD11A             BNE.N    ??EdgeInit_0
    511          	{
    512          		templeft = get_left(IMG_BOTTOM, IMG_LEFT, IMG_RIGHT);
   \       0x14   0x229E             MOVS     R2,#+158
   \       0x16   0x2101             MOVS     R1,#+1
   \       0x18   0x2045             MOVS     R0,#+69
   \       0x1A   0x....'....        BL       get_left
   \       0x1E   0x0006             MOVS     R6,R0
    513          		if (-1 == templeft)
   \       0x20   0x0030             MOVS     R0,R6
   \       0x22   0xF05F 0x31FF      MOVS     R1,#-1
   \       0x26   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \       0x28   0x4288             CMP      R0,R1
   \       0x2A   0xD100             BNE.N    ??EdgeInit_1
    514          		{
    515          			templeft = IMG_COL_CENTER;
   \       0x2C   0x264F             MOVS     R6,#+79
    516          		}
    517          		tempright = get_right(IMG_BOTTOM, IMG_RIGHT, IMG_LEFT);
   \                     ??EdgeInit_1: (+1)
   \       0x2E   0x2201             MOVS     R2,#+1
   \       0x30   0x219E             MOVS     R1,#+158
   \       0x32   0x2045             MOVS     R0,#+69
   \       0x34   0x....'....        BL       get_right
   \       0x38   0x0007             MOVS     R7,R0
    518          		if (-1 == tempright)
   \       0x3A   0x0038             MOVS     R0,R7
   \       0x3C   0xF05F 0x31FF      MOVS     R1,#-1
   \       0x40   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \       0x42   0x4288             CMP      R0,R1
   \       0x44   0xD105             BNE.N    ??EdgeInit_2
    519          		{
    520          			tempright = IMG_COL_CENTER;
   \       0x46   0x274F             MOVS     R7,#+79
   \       0x48   0xE003             B.N      ??EdgeInit_2
    521          		}
    522          	}
    523          	else
    524          	{
    525          		templeft = fstpoint;
   \                     ??EdgeInit_0: (+1)
   \       0x4A   0xF9B0 0x6000      LDRSH    R6,[R0, #+0]
    526          		tempright = fstpoint;
   \       0x4E   0xF9B0 0x7000      LDRSH    R7,[R0, #+0]
    527          	}
    528          
    529          	int16 temppreleft = templeft;
    530          	int16 temppreright = tempright;
    531          
    532          	//==============================================上位机更换模块开始==============================================//
    533          	AlterParam_Clear(IMG_BOTTOM, IMG_TOP, leftEdge, IMG_LEFT);
   \                     ??EdgeInit_2: (+1)
   \       0x52   0x....'....        LDR.W    R8,??DataTable15
   \       0x56   0x2301             MOVS     R3,#+1
   \       0x58   0x4642             MOV      R2,R8
   \       0x5A   0x210A             MOVS     R1,#+10
   \       0x5C   0x2045             MOVS     R0,#+69
   \       0x5E   0x....'....        BL       AlterParam_Clear
    534          	AlterParam_Clear(IMG_BOTTOM, IMG_TOP, rightEdge, IMG_RIGHT);
   \       0x62   0x....'....        LDR.W    R9,??DataTable14
   \       0x66   0x239E             MOVS     R3,#+158
   \       0x68   0x464A             MOV      R2,R9
   \       0x6A   0x210A             MOVS     R1,#+10
   \       0x6C   0x2045             MOVS     R0,#+69
   \       0x6E   0x....'....        BL       AlterParam_Clear
    535          	AlterParam_Clear(IMG_BOTTOM, IMG_TOP, img_centers, IMG_COL_CENTER);
   \       0x72   0x234F             MOVS     R3,#+79
   \       0x74   0x....'....        LDR.W    R2,??DataTable15_2
   \       0x78   0x210A             MOVS     R1,#+10
   \       0x7A   0x2045             MOVS     R0,#+69
   \       0x7C   0x....'....        BL       AlterParam_Clear
    536          	//==============================================首次搜索开始==============================================//
    537                  //（向上搜边缘）
    538          	int16 i;
    539          	for (i = IMG_BOTTOM; i >= IMG_TOP; i--)
   \       0x80   0xF05F 0x0A45      MOVS     R10,#+69
   \       0x84   0xE063             B.N      ??EdgeInit_3
    540          	{
    541          		if (0 == row_finished_left)
   \                     ??EdgeInit_4: (+1)
   \       0x86   0x0020             MOVS     R0,R4
   \       0x88   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \       0x8A   0x2800             CMP      R0,#+0
   \       0x8C   0xD12C             BNE.N    ??EdgeInit_5
    542          		{
    543          			templeft = get_left(i, temppreleft, temppreleft + (int16)(width_templ[i] / 5));
   \       0x8E   0x....'....        LDR.W    R0,??DataTable15_3
   \       0x92   0x4651             MOV      R1,R10
   \       0x94   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \       0x96   0xF930 0x0011      LDRSH    R0,[R0, R1, LSL #+1]
   \       0x9A   0x2105             MOVS     R1,#+5
   \       0x9C   0xFB90 0xF2F1      SDIV     R2,R0,R1
   \       0xA0   0x1992             ADDS     R2,R2,R6
   \       0xA2   0xB212             SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
   \       0xA4   0x0031             MOVS     R1,R6
   \       0xA6   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \       0xA8   0x4650             MOV      R0,R10
   \       0xAA   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \       0xAC   0x....'....        BL       get_left
    544          			if (-1 == templeft)
   \       0xB0   0x0001             MOVS     R1,R0
   \       0xB2   0xF05F 0x32FF      MOVS     R2,#-1
   \       0xB6   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \       0xB8   0x4291             CMP      R1,R2
   \       0xBA   0xD110             BNE.N    ??EdgeInit_6
    545          			{
    546          				templeft = SearchLeftEdgeByHeight(i, temppreleft);
   \       0xBC   0x0031             MOVS     R1,R6
   \       0xBE   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \       0xC0   0x4650             MOV      R0,R10
   \       0xC2   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \       0xC4   0x....'....        BL       SearchLeftEdgeByHeight
    547          				if (-1 == templeft)//二次扫描确认丢线结论
   \       0xC8   0x0001             MOVS     R1,R0
   \       0xCA   0xF05F 0x32FF      MOVS     R2,#-1
   \       0xCE   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \       0xD0   0x4291             CMP      R1,R2
   \       0xD2   0xD104             BNE.N    ??EdgeInit_6
    548          				{
    549          					templeft = temppreleft;
   \       0xD4   0x0030             MOVS     R0,R6
    550          					row_finished_left = 1;
   \       0xD6   0x2401             MOVS     R4,#+1
    551          					row_left_end = i;
   \       0xD8   0x....             LDR.N    R1,??DataTable11_3
   \       0xDA   0xF8A1 0xA000      STRH     R10,[R1, #+0]
    552          				}
    553          			}
    554          			temppreleft = templeft;
   \                     ??EdgeInit_6: (+1)
   \       0xDE   0x0006             MOVS     R6,R0
    555          			leftEdge[i] = temppreleft;
   \       0xE0   0x4650             MOV      R0,R10
   \       0xE2   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \       0xE4   0xF828 0x6010      STRH     R6,[R8, R0, LSL #+1]
    556          		}
    557          		if (0 == row_finished_right)
   \                     ??EdgeInit_5: (+1)
   \       0xE8   0x0028             MOVS     R0,R5
   \       0xEA   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \       0xEC   0x2800             CMP      R0,#+0
   \       0xEE   0xD12C             BNE.N    ??EdgeInit_7
    558          		{
    559          			tempright = get_right(i, temppreright, temppreright - (int16)(width_templ[i] / 5));
   \       0xF0   0x....'....        LDR.W    R0,??DataTable15_3
   \       0xF4   0x4651             MOV      R1,R10
   \       0xF6   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \       0xF8   0xF930 0x0011      LDRSH    R0,[R0, R1, LSL #+1]
   \       0xFC   0x2105             MOVS     R1,#+5
   \       0xFE   0xFB90 0xF2F1      SDIV     R2,R0,R1
   \      0x102   0x1ABA             SUBS     R2,R7,R2
   \      0x104   0xB212             SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
   \      0x106   0x0039             MOVS     R1,R7
   \      0x108   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \      0x10A   0x4650             MOV      R0,R10
   \      0x10C   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0x10E   0x....'....        BL       get_right
    560          			if (-1 == tempright)
   \      0x112   0x0001             MOVS     R1,R0
   \      0x114   0xF05F 0x32FF      MOVS     R2,#-1
   \      0x118   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \      0x11A   0x4291             CMP      R1,R2
   \      0x11C   0xD110             BNE.N    ??EdgeInit_8
    561          			{
    562          				tempright = SearchRightEdgeByHeight(i, temppreright);
   \      0x11E   0x0039             MOVS     R1,R7
   \      0x120   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \      0x122   0x4650             MOV      R0,R10
   \      0x124   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0x126   0x....'....        BL       SearchRightEdgeByHeight
    563          				if (-1 == tempright)//二次扫描确认丢线结论
   \      0x12A   0x0001             MOVS     R1,R0
   \      0x12C   0xF05F 0x32FF      MOVS     R2,#-1
   \      0x130   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \      0x132   0x4291             CMP      R1,R2
   \      0x134   0xD104             BNE.N    ??EdgeInit_8
    564          				{
    565          					tempright = temppreright;
   \      0x136   0x0038             MOVS     R0,R7
    566          					row_finished_right = 1;
   \      0x138   0x2501             MOVS     R5,#+1
    567          					row_right_end = i;
   \      0x13A   0x....             LDR.N    R1,??DataTable11_5
   \      0x13C   0xF8A1 0xA000      STRH     R10,[R1, #+0]
    568          				}
    569          			}
    570          			temppreright = tempright;
   \                     ??EdgeInit_8: (+1)
   \      0x140   0x0007             MOVS     R7,R0
    571          			rightEdge[i] = temppreright;
   \      0x142   0x4650             MOV      R0,R10
   \      0x144   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0x146   0xF829 0x7010      STRH     R7,[R9, R0, LSL #+1]
    572          		}
    573          	}
   \                     ??EdgeInit_7: (+1)
   \      0x14A   0xF1BA 0x0A01      SUBS     R10,R10,#+1
   \                     ??EdgeInit_3: (+1)
   \      0x14E   0x4650             MOV      R0,R10
   \      0x150   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0x152   0x280A             CMP      R0,#+10
   \      0x154   0xDA97             BGE.N    ??EdgeInit_4
    574          	//==============================================首次搜索结束==============================================//
    575          
    576          	EdgeFilter();
   \      0x156   0x....'....        BL       EdgeFilter
    577          	row_left_begin = get_height(IMG_BOTTOM, leftEdge[IMG_BOTTOM], IMG_TOP);
   \      0x15A   0x220A             MOVS     R2,#+10
   \      0x15C   0xF9B8 0x108A      LDRSH    R1,[R8, #+138]
   \      0x160   0x2045             MOVS     R0,#+69
   \      0x162   0x....'....        BL       get_height
   \      0x166   0x....             LDR.N    R1,??DataTable11_2
   \      0x168   0x8008             STRH     R0,[R1, #+0]
    578          	row_right_begin = get_height(IMG_BOTTOM, rightEdge[IMG_BOTTOM], IMG_TOP);
   \      0x16A   0x220A             MOVS     R2,#+10
   \      0x16C   0xF9B9 0x108A      LDRSH    R1,[R9, #+138]
   \      0x170   0x2045             MOVS     R0,#+69
   \      0x172   0x....'....        BL       get_height
   \      0x176   0x....'....        LDR.W    R1,??DataTable15_4
   \      0x17A   0x8008             STRH     R0,[R1, #+0]
    579                  
    580          	//==============================================上位机更换模块结束==============================================//
    581          }
   \      0x17C   0xE8BD 0x87F0      POP      {R4-R10,PC}      ;; return
    582          
    583          //向下搜索边缘

   \                                 In section .text, align 2, keep-with-next
    584          void downSearch(void)
    585          {
   \                     downSearch: (+1)
   \        0x0   0xE92D 0x43F8      PUSH     {R3-R9,LR}
    586          	int16 rowbuf = -1;
   \        0x4   0xF05F 0x34FF      MOVS     R4,#-1
   \        0x8   0x0020             MOVS     R0,R4
    587          	int16 colbuf = 0;
   \        0xA   0x2000             MOVS     R0,#+0
    588          	int16 precolbuf = 0;
   \        0xC   0x2000             MOVS     R0,#+0
    589          	int16 i;
    590          	rowbuf = SearchLeftTendency(row_left_begin);
   \        0xE   0x....             LDR.N    R0,??DataTable11_2
   \       0x10   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \       0x14   0x....'....        BL       SearchLeftTendency
   \       0x18   0x0005             MOVS     R5,R0
    591          	if (-1 == rowbuf)
   \       0x1A   0x0028             MOVS     R0,R5
   \       0x1C   0xF05F 0x31FF      MOVS     R1,#-1
   \       0x20   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \       0x22   0x4288             CMP      R0,R1
   \       0x24   0xD062             BEQ.N    ??downSearch_0
    592          	{
    593          	}
    594          	else
    595          	{
    596          		int16 temp_row = 0;
   \       0x26   0xF05F 0x0800      MOVS     R8,#+0
    597          		colbuf = leftEdge[rowbuf];
   \       0x2A   0x....'....        LDR.W    R6,??DataTable15
   \       0x2E   0x0028             MOVS     R0,R5
   \       0x30   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \       0x32   0xF936 0x0010      LDRSH    R0,[R6, R0, LSL #+1]
    598          		precolbuf = colbuf;
   \       0x36   0x0007             MOVS     R7,R0
    599          		for (i = rowbuf; i <= IMG_BOTTOM; i++)
   \       0x38   0x46A9             MOV      R9,R5
   \       0x3A   0xE009             B.N      ??downSearch_1
    600          		{
    601          			colbuf = get_left(i, colbuf, IMG_RIGHT);
    602          			if (-1 == colbuf)
    603          			{
    604          				break;
    605          			}
    606          			if (precolbuf - colbuf >= 5)
   \                     ??downSearch_2: (+1)
   \       0x3C   0x003A             MOVS     R2,R7
   \       0x3E   0xB212             SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
   \       0x40   0x0001             MOVS     R1,R0
   \       0x42   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \       0x44   0x1A52             SUBS     R2,R2,R1
   \       0x46   0x2A05             CMP      R2,#+5
   \       0x48   0xDA14             BGE.N    ??downSearch_3
    607          			{
    608          				temp_row = i;
    609          				break;
    610          			}
    611          			precolbuf = colbuf;
   \                     ??downSearch_4: (+1)
   \       0x4A   0x0007             MOVS     R7,R0
   \       0x4C   0xF119 0x0901      ADDS     R9,R9,#+1
   \                     ??downSearch_1: (+1)
   \       0x50   0x4649             MOV      R1,R9
   \       0x52   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \       0x54   0x2946             CMP      R1,#+70
   \       0x56   0xDA0E             BGE.N    ??downSearch_5
   \       0x58   0x229E             MOVS     R2,#+158
   \       0x5A   0x0001             MOVS     R1,R0
   \       0x5C   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \       0x5E   0x4648             MOV      R0,R9
   \       0x60   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \       0x62   0x....'....        BL       get_left
   \       0x66   0x0001             MOVS     R1,R0
   \       0x68   0xF05F 0x32FF      MOVS     R2,#-1
   \       0x6C   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \       0x6E   0x4291             CMP      R1,R2
   \       0x70   0xD1E4             BNE.N    ??downSearch_2
   \       0x72   0xE000             B.N      ??downSearch_5
   \                     ??downSearch_3: (+1)
   \       0x74   0x46C8             MOV      R8,R9
    612          		}
    613          		if (temp_row > IMG_TOP)
   \                     ??downSearch_5: (+1)
   \       0x76   0x4640             MOV      R0,R8
   \       0x78   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \       0x7A   0x280B             CMP      R0,#+11
   \       0x7C   0xDB36             BLT.N    ??downSearch_0
    614          		{
    615          			for (i = temp_row - 1; i <= IMG_BOTTOM; i++)
   \       0x7E   0xF1B8 0x0001      SUBS     R0,R8,#+1
   \       0x82   0xE00C             B.N      ??downSearch_6
    616          			{
    617          				if (leftEdge[i] < precolbuf)
   \                     ??downSearch_7: (+1)
   \       0x84   0x0001             MOVS     R1,R0
   \       0x86   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \       0x88   0xF936 0x1011      LDRSH    R1,[R6, R1, LSL #+1]
   \       0x8C   0x003A             MOVS     R2,R7
   \       0x8E   0xB212             SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
   \       0x90   0x4291             CMP      R1,R2
   \       0x92   0xDA03             BGE.N    ??downSearch_8
    618          				{
    619          					leftEdge[i] = precolbuf;
   \       0x94   0x0001             MOVS     R1,R0
   \       0x96   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \       0x98   0xF826 0x7011      STRH     R7,[R6, R1, LSL #+1]
    620          				}
    621          			}
   \                     ??downSearch_8: (+1)
   \       0x9C   0x1C40             ADDS     R0,R0,#+1
   \                     ??downSearch_6: (+1)
   \       0x9E   0x0001             MOVS     R1,R0
   \       0xA0   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \       0xA2   0x2946             CMP      R1,#+70
   \       0xA4   0xDBEE             BLT.N    ??downSearch_7
    622          			colbuf = precolbuf;
   \       0xA6   0x0039             MOVS     R1,R7
    623          			for (i = temp_row - 1; i > rowbuf; i--)
   \       0xA8   0xF1B8 0x0801      SUBS     R8,R8,#+1
   \       0xAC   0xE018             B.N      ??downSearch_9
    624          			{
    625          				colbuf = get_left(i, colbuf, IMG_RIGHT);
    626          				if (-1 == colbuf)
    627          				{
    628          					colbuf = precolbuf;
    629          				}
    630          				else
    631          				{
    632          					leftEdge[i] = colbuf;
   \                     ??downSearch_10: (+1)
   \       0xAE   0x4640             MOV      R0,R8
   \       0xB0   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \       0xB2   0xF826 0x1010      STRH     R1,[R6, R0, LSL #+1]
    633          					precolbuf = leftEdge[i];
   \       0xB6   0x4640             MOV      R0,R8
   \       0xB8   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \       0xBA   0xF936 0x7010      LDRSH    R7,[R6, R0, LSL #+1]
   \       0xBE   0xE00D             B.N      ??downSearch_11
    634          				}
   \                     ??downSearch_12: (+1)
   \       0xC0   0x229E             MOVS     R2,#+158
   \       0xC2   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \       0xC4   0x4640             MOV      R0,R8
   \       0xC6   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \       0xC8   0x....'....        BL       get_left
   \       0xCC   0x0001             MOVS     R1,R0
   \       0xCE   0x0008             MOVS     R0,R1
   \       0xD0   0xF05F 0x32FF      MOVS     R2,#-1
   \       0xD4   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \       0xD6   0x4290             CMP      R0,R2
   \       0xD8   0xD1E9             BNE.N    ??downSearch_10
   \       0xDA   0x0039             MOVS     R1,R7
    635          			}
   \                     ??downSearch_11: (+1)
   \       0xDC   0xF1B8 0x0801      SUBS     R8,R8,#+1
   \                     ??downSearch_9: (+1)
   \       0xE0   0x0028             MOVS     R0,R5
   \       0xE2   0x4642             MOV      R2,R8
   \       0xE4   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \       0xE6   0xB212             SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
   \       0xE8   0x4290             CMP      R0,R2
   \       0xEA   0xDBE9             BLT.N    ??downSearch_12
    636          		}
    637          	}
    638          	rowbuf = -1;
    639          	rowbuf = SearchRightTendency(row_right_begin);
   \                     ??downSearch_0: (+1)
   \       0xEC   0x....             LDR.N    R0,??DataTable11_4
   \       0xEE   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \       0xF2   0x....'....        BL       SearchRightTendency
   \       0xF6   0x0004             MOVS     R4,R0
    640          	if (-1 == rowbuf)
   \       0xF8   0x0020             MOVS     R0,R4
   \       0xFA   0xF05F 0x31FF      MOVS     R1,#-1
   \       0xFE   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0x100   0x4288             CMP      R0,R1
   \      0x102   0xD05F             BEQ.N    ??downSearch_13
    641          	{
    642          	}
    643          	else
    644          	{
    645          		int16 temp_row = 0;
   \      0x104   0x2700             MOVS     R7,#+0
    646          		colbuf = rightEdge[rowbuf];
   \      0x106   0x....'....        LDR.W    R5,??DataTable15_1
   \      0x10A   0x0020             MOVS     R0,R4
   \      0x10C   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0x10E   0xF935 0x0010      LDRSH    R0,[R5, R0, LSL #+1]
    647          		precolbuf = colbuf;
   \      0x112   0x0006             MOVS     R6,R0
    648          		for (i = rowbuf; i <= IMG_BOTTOM; i++)
   \      0x114   0x46A0             MOV      R8,R4
   \      0x116   0xE00A             B.N      ??downSearch_14
    649          		{
    650          			colbuf = get_right(i, colbuf, IMG_LEFT);
    651          			if (-1 == colbuf)
    652          			{
    653          				break;
    654          			}
    655          			if (precolbuf - colbuf <= -5)
   \                     ??downSearch_15: (+1)
   \      0x118   0x0032             MOVS     R2,R6
   \      0x11A   0xB212             SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
   \      0x11C   0x0001             MOVS     R1,R0
   \      0x11E   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \      0x120   0x1A52             SUBS     R2,R2,R1
   \      0x122   0xF112 0x0F04      CMN      R2,#+4
   \      0x126   0xDB14             BLT.N    ??downSearch_16
    656          			{
    657          				temp_row = i;
    658          				break;
    659          			}
    660          			precolbuf = colbuf;
   \                     ??downSearch_17: (+1)
   \      0x128   0x0006             MOVS     R6,R0
   \      0x12A   0xF118 0x0801      ADDS     R8,R8,#+1
   \                     ??downSearch_14: (+1)
   \      0x12E   0x4641             MOV      R1,R8
   \      0x130   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \      0x132   0x2946             CMP      R1,#+70
   \      0x134   0xDA0E             BGE.N    ??downSearch_18
   \      0x136   0x2201             MOVS     R2,#+1
   \      0x138   0x0001             MOVS     R1,R0
   \      0x13A   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \      0x13C   0x4640             MOV      R0,R8
   \      0x13E   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0x140   0x....'....        BL       get_right
   \      0x144   0x0001             MOVS     R1,R0
   \      0x146   0xF05F 0x32FF      MOVS     R2,#-1
   \      0x14A   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \      0x14C   0x4291             CMP      R1,R2
   \      0x14E   0xD1E3             BNE.N    ??downSearch_15
   \      0x150   0xE000             B.N      ??downSearch_18
   \                     ??downSearch_16: (+1)
   \      0x152   0x4647             MOV      R7,R8
    661          		}
    662          		if (temp_row > IMG_TOP)
   \                     ??downSearch_18: (+1)
   \      0x154   0x0038             MOVS     R0,R7
   \      0x156   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0x158   0x280B             CMP      R0,#+11
   \      0x15A   0xDB33             BLT.N    ??downSearch_13
    663          		{
    664          			for (i = temp_row - 1; i <= IMG_BOTTOM; i++)
   \      0x15C   0x1E78             SUBS     R0,R7,#+1
   \      0x15E   0xE00C             B.N      ??downSearch_19
    665          			{
    666          				if (rightEdge[i] > precolbuf)
   \                     ??downSearch_20: (+1)
   \      0x160   0x0031             MOVS     R1,R6
   \      0x162   0x0002             MOVS     R2,R0
   \      0x164   0xB212             SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
   \      0x166   0xF935 0x2012      LDRSH    R2,[R5, R2, LSL #+1]
   \      0x16A   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \      0x16C   0x4291             CMP      R1,R2
   \      0x16E   0xDA03             BGE.N    ??downSearch_21
    667          				{
    668          					rightEdge[i] = precolbuf;
   \      0x170   0x0001             MOVS     R1,R0
   \      0x172   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \      0x174   0xF825 0x6011      STRH     R6,[R5, R1, LSL #+1]
    669          				}
    670          			}
   \                     ??downSearch_21: (+1)
   \      0x178   0x1C40             ADDS     R0,R0,#+1
   \                     ??downSearch_19: (+1)
   \      0x17A   0x0001             MOVS     R1,R0
   \      0x17C   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \      0x17E   0x2946             CMP      R1,#+70
   \      0x180   0xDBEE             BLT.N    ??downSearch_20
    671          			colbuf = precolbuf;
   \      0x182   0x0030             MOVS     R0,R6
    672          			for (i = temp_row - 1; i > rowbuf; i--)
   \      0x184   0x1E7F             SUBS     R7,R7,#+1
   \      0x186   0xE017             B.N      ??downSearch_22
    673          			{
    674          				colbuf = get_right(i, colbuf, IMG_LEFT);
    675          				if (-1 == colbuf)
    676          				{
    677          					colbuf = precolbuf;
    678          				}
    679          				else
    680          				{
    681          					rightEdge[i] = colbuf;
   \                     ??downSearch_23: (+1)
   \      0x188   0x0039             MOVS     R1,R7
   \      0x18A   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \      0x18C   0xF825 0x0011      STRH     R0,[R5, R1, LSL #+1]
    682          					precolbuf = rightEdge[i];
   \      0x190   0x0039             MOVS     R1,R7
   \      0x192   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \      0x194   0xF935 0x6011      LDRSH    R6,[R5, R1, LSL #+1]
   \      0x198   0xE00D             B.N      ??downSearch_24
    683          				}
   \                     ??downSearch_25: (+1)
   \      0x19A   0x2201             MOVS     R2,#+1
   \      0x19C   0x0001             MOVS     R1,R0
   \      0x19E   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \      0x1A0   0x0038             MOVS     R0,R7
   \      0x1A2   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0x1A4   0x....'....        BL       get_right
   \      0x1A8   0x0001             MOVS     R1,R0
   \      0x1AA   0xF05F 0x32FF      MOVS     R2,#-1
   \      0x1AE   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \      0x1B0   0x4291             CMP      R1,R2
   \      0x1B2   0xD1E9             BNE.N    ??downSearch_23
   \      0x1B4   0x0030             MOVS     R0,R6
    684          			}
   \                     ??downSearch_24: (+1)
   \      0x1B6   0x1E7F             SUBS     R7,R7,#+1
   \                     ??downSearch_22: (+1)
   \      0x1B8   0x0021             MOVS     R1,R4
   \      0x1BA   0x003A             MOVS     R2,R7
   \      0x1BC   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \      0x1BE   0xB212             SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
   \      0x1C0   0x4291             CMP      R1,R2
   \      0x1C2   0xDBEA             BLT.N    ??downSearch_25
    685          		}
    686          	}
    687          }
   \                     ??downSearch_13: (+1)
   \      0x1C4   0xE8BD 0x83F1      POP      {R0,R4-R9,PC}    ;; return
    688          /*
    689           *    col1 = n - 1 （折点查找）
    690           *    col2 = n 
    691           *    col3 = n + 1
    692           */

   \                                 In section .text, align 2, keep-with-next
    693          int16 get_pointFold(int16 col1,int16 col2,int16 col3)
    694          {
   \                     get_pointFold: (+1)
   \        0x0   0xB430             PUSH     {R4,R5}
    695          	if((col1 - col2) * (col2 - col3) <= 0 && !(0 == (col1 - col2) && 0 == (col2 - col3)))
   \        0x2   0x0004             MOVS     R4,R0
   \        0x4   0xB224             SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
   \        0x6   0x000B             MOVS     R3,R1
   \        0x8   0xB21B             SXTH     R3,R3            ;; SignExt  R3,R3,#+16,#+16
   \        0xA   0x1AE4             SUBS     R4,R4,R3
   \        0xC   0x000D             MOVS     R5,R1
   \        0xE   0xB22D             SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
   \       0x10   0x0013             MOVS     R3,R2
   \       0x12   0xB21B             SXTH     R3,R3            ;; SignExt  R3,R3,#+16,#+16
   \       0x14   0x1AED             SUBS     R5,R5,R3
   \       0x16   0x436C             MULS     R4,R5,R4
   \       0x18   0x2C01             CMP      R4,#+1
   \       0x1A   0xDA0C             BGE.N    ??get_pointFold_0
   \       0x1C   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \       0x1E   0x000B             MOVS     R3,R1
   \       0x20   0xB21B             SXTH     R3,R3            ;; SignExt  R3,R3,#+16,#+16
   \       0x22   0x1AC0             SUBS     R0,R0,R3
   \       0x24   0x2800             CMP      R0,#+0
   \       0x26   0xD104             BNE.N    ??get_pointFold_1
   \       0x28   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \       0x2A   0xB212             SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
   \       0x2C   0x1A89             SUBS     R1,R1,R2
   \       0x2E   0x2900             CMP      R1,#+0
   \       0x30   0xD001             BEQ.N    ??get_pointFold_0
    696          	{ return 1;}
   \                     ??get_pointFold_1: (+1)
   \       0x32   0x2001             MOVS     R0,#+1
   \       0x34   0xE001             B.N      ??get_pointFold_2
    697          	return -1;
   \                     ??get_pointFold_0: (+1)
   \       0x36   0xF05F 0x30FF      MOVS     R0,#-1
   \                     ??get_pointFold_2: (+1)
   \       0x3A   0xBC30             POP      {R4,R5}
   \       0x3C   0x4770             BX       LR               ;; return
    698          }
    699          
    700          /* 
    701           * 赛道尖锐角函数设计思路：结合数学方法，几何方法将大大提升判断准确率
    702           * 1.必须具有边缘斜率折点的特性；
    703           * 2.在有折点的基础上,必须具有高度差的特性（差值根据摄像头畸变阶梯倾斜度界定）；
    704           * 3.在有折点的基础上,必须有一定的宽度差特性（差值根据摄像头畸变阶梯倾斜度界定）；
    705           * 综上则可视为赛道尖锐角
    706           */

   \                                 In section .text, align 2, keep-with-next
    707          int16 GetEdgeInflex(int16 begin, int16 end, int16 p[],uint8 dir)
    708          {
   \                     GetEdgeInflex: (+1)
   \        0x0   0xE92D 0x4FF8      PUSH     {R3-R11,LR}
   \        0x4   0xB084             SUB      SP,SP,#+16
   \        0x6   0x0004             MOVS     R4,R0
   \        0x8   0x000D             MOVS     R5,R1
   \        0xA   0x0016             MOVS     R6,R2
   \        0xC   0x001F             MOVS     R7,R3
    709          	int16 i = begin;
   \        0xE   0x46A0             MOV      R8,R4
    710          	int16 col_buf[3];
    711          	int16 width_buf[3];
    712          	int16 tempHeight = 0;
   \       0x10   0x2000             MOVS     R0,#+0
    713          	int16 tempFlod = 0;
   \       0x12   0x2000             MOVS     R0,#+0
    714          	int16 tempcolSum = 0;
   \       0x14   0x2000             MOVS     R0,#+0
    715          	int16 array_len = begin - end + 1;
   \       0x16   0x1B60             SUBS     R0,R4,R5
   \       0x18   0x1C40             ADDS     R0,R0,#+1
    716          	if (array_len < 3)
   \       0x1A   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \       0x1C   0x2803             CMP      R0,#+3
   \       0x1E   0xDA0C             BGE.N    ??GetEdgeInflex_0
    717          	{ return 0; }
   \       0x20   0x2000             MOVS     R0,#+0
   \       0x22   0xE0D8             B.N      ??GetEdgeInflex_1
    718          	for (; i >= end; i--)
    719          	{
    720          		if (i < end + 3)
    721          		{ return 0; }
    722          		col_buf[0] = p[i - 3];
    723          		col_buf[1] = p[i - 2];
    724          		col_buf[2] = p[i - 1];
    725          		width_buf[0] = p[i] - col_buf[0];
    726          		width_buf[1] = p[i] - col_buf[1];
    727          		width_buf[2] = p[i] - col_buf[2];
    728          		tempcolSum = width_buf[0] + width_buf[1] + width_buf[2];
    729          		if (i < begin && i > end)
    730          		{
    731          			tempHeight = i + 1 - (get_height(i + 1, p[i], IMG_TOP));
    732          			tempFlod = get_pointFold(p[i - 1], p[i], p[i + 1]);
    733          			if (IMG_LEFT == dir)
    734          			{
    735          				if (1 == tempFlod && tempHeight >= 4 && tempcolSum >= 6)
    736          				{
    737          					if (p[i] <= IMG_LEFT || p[i] >= IMG_RIGHT)
    738          					{ return i + 1; }
    739          					return i;
    740          				}
    741          				else if (1 == tempFlod && width_buf[2] >= 16)
    742          				{ return i; }
    743          			}
    744          			else if (IMG_RIGHT == dir)
    745          			{
    746          				if (1 == tempFlod && tempHeight >= 4 && tempcolSum <= -6)
    747          				{
    748          					if (p[i] <= IMG_LEFT || p[i] >= IMG_RIGHT)
    749          					{ return i + 1; }
    750          					return i;
    751          				}
    752          				else if (1 == tempFlod && width_buf[2] <= -16)
   \                     ??GetEdgeInflex_2: (+1)
   \       0x24   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \       0x26   0x2801             CMP      R0,#+1
   \       0x28   0xD105             BNE.N    ??GetEdgeInflex_3
   \       0x2A   0xF9B9 0x0004      LDRSH    R0,[R9, #+4]
   \       0x2E   0xF110 0x0F0F      CMN      R0,#+15
   \       0x32   0xF2C0 0x80CC      BLT.W    ??GetEdgeInflex_4
   \                     ??GetEdgeInflex_3: (+1)
   \       0x36   0xF1B8 0x0801      SUBS     R8,R8,#+1
   \                     ??GetEdgeInflex_0: (+1)
   \       0x3A   0x4640             MOV      R0,R8
   \       0x3C   0x0029             MOVS     R1,R5
   \       0x3E   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \       0x40   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \       0x42   0x4288             CMP      R0,R1
   \       0x44   0xF2C0 0x80C6      BLT.W    ??GetEdgeInflex_5
   \       0x48   0x4640             MOV      R0,R8
   \       0x4A   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \       0x4C   0x0029             MOVS     R1,R5
   \       0x4E   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \       0x50   0x1CC9             ADDS     R1,R1,#+3
   \       0x52   0x4288             CMP      R0,R1
   \       0x54   0xF2C0 0x8085      BLT.W    ??GetEdgeInflex_6
   \                     ??GetEdgeInflex_7: (+1)
   \       0x58   0x4640             MOV      R0,R8
   \       0x5A   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \       0x5C   0xEB06 0x0040      ADD      R0,R6,R0, LSL #+1
   \       0x60   0xF930 0x0C06      LDRSH    R0,[R0, #-6]
   \       0x64   0xF8AD 0x0008      STRH     R0,[SP, #+8]
   \       0x68   0xA902             ADD      R1,SP,#+8
   \       0x6A   0x4640             MOV      R0,R8
   \       0x6C   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \       0x6E   0xEB06 0x0040      ADD      R0,R6,R0, LSL #+1
   \       0x72   0xF830 0x0C04      LDRH     R0,[R0, #-4]
   \       0x76   0x8048             STRH     R0,[R1, #+2]
   \       0x78   0x4640             MOV      R0,R8
   \       0x7A   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \       0x7C   0xEB06 0x0040      ADD      R0,R6,R0, LSL #+1
   \       0x80   0xF830 0x0C02      LDRH     R0,[R0, #-2]
   \       0x84   0x8088             STRH     R0,[R1, #+4]
   \       0x86   0x4640             MOV      R0,R8
   \       0x88   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \       0x8A   0xF836 0x2010      LDRH     R2,[R6, R0, LSL #+1]
   \       0x8E   0xF8BD 0x0008      LDRH     R0,[SP, #+8]
   \       0x92   0x1A12             SUBS     R2,R2,R0
   \       0x94   0xF8AD 0x2000      STRH     R2,[SP, #+0]
   \       0x98   0x46E9             MOV      R9,SP
   \       0x9A   0x4640             MOV      R0,R8
   \       0x9C   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \       0x9E   0xF836 0x2010      LDRH     R2,[R6, R0, LSL #+1]
   \       0xA2   0x8848             LDRH     R0,[R1, #+2]
   \       0xA4   0x1A12             SUBS     R2,R2,R0
   \       0xA6   0xF8A9 0x2002      STRH     R2,[R9, #+2]
   \       0xAA   0x4640             MOV      R0,R8
   \       0xAC   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \       0xAE   0xF836 0x2010      LDRH     R2,[R6, R0, LSL #+1]
   \       0xB2   0x8888             LDRH     R0,[R1, #+4]
   \       0xB4   0x1A12             SUBS     R2,R2,R0
   \       0xB6   0xF8A9 0x2004      STRH     R2,[R9, #+4]
   \       0xBA   0xF8BD 0xA000      LDRH     R10,[SP, #+0]
   \       0xBE   0xF8B9 0x0002      LDRH     R0,[R9, #+2]
   \       0xC2   0xEB10 0x0A0A      ADDS     R10,R0,R10
   \       0xC6   0xF8B9 0x0004      LDRH     R0,[R9, #+4]
   \       0xCA   0xEB10 0x0A0A      ADDS     R10,R0,R10
   \       0xCE   0x4640             MOV      R0,R8
   \       0xD0   0x0021             MOVS     R1,R4
   \       0xD2   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \       0xD4   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \       0xD6   0x4288             CMP      R0,R1
   \       0xD8   0xDAAD             BGE.N    ??GetEdgeInflex_3
   \       0xDA   0x0028             MOVS     R0,R5
   \       0xDC   0x4641             MOV      R1,R8
   \       0xDE   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \       0xE0   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \       0xE2   0x4288             CMP      R0,R1
   \       0xE4   0xDAA7             BGE.N    ??GetEdgeInflex_3
   \       0xE6   0xF118 0x0B01      ADDS     R11,R8,#+1
   \       0xEA   0x220A             MOVS     R2,#+10
   \       0xEC   0x4640             MOV      R0,R8
   \       0xEE   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \       0xF0   0xF936 0x1010      LDRSH    R1,[R6, R0, LSL #+1]
   \       0xF4   0xF118 0x0001      ADDS     R0,R8,#+1
   \       0xF8   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \       0xFA   0x....'....        BL       get_height
   \       0xFE   0xEBBB 0x0B00      SUBS     R11,R11,R0
   \      0x102   0x4640             MOV      R0,R8
   \      0x104   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0x106   0xEB06 0x0040      ADD      R0,R6,R0, LSL #+1
   \      0x10A   0xF9B0 0x2002      LDRSH    R2,[R0, #+2]
   \      0x10E   0x4640             MOV      R0,R8
   \      0x110   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0x112   0xF936 0x1010      LDRSH    R1,[R6, R0, LSL #+1]
   \      0x116   0x4640             MOV      R0,R8
   \      0x118   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0x11A   0xEB06 0x0040      ADD      R0,R6,R0, LSL #+1
   \      0x11E   0xF930 0x0C02      LDRSH    R0,[R0, #-2]
   \      0x122   0x....'....        BL       get_pointFold
   \      0x126   0x0039             MOVS     R1,R7
   \      0x128   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \      0x12A   0x2901             CMP      R1,#+1
   \      0x12C   0xD12A             BNE.N    ??GetEdgeInflex_8
   \      0x12E   0x0001             MOVS     R1,R0
   \      0x130   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \      0x132   0x2901             CMP      R1,#+1
   \      0x134   0xD109             BNE.N    ??GetEdgeInflex_9
   \      0x136   0xFA0F 0xFB8B      SXTH     R11,R11          ;; SignExt  R11,R11,#+16,#+16
   \      0x13A   0xF1BB 0x0F04      CMP      R11,#+4
   \      0x13E   0xDB04             BLT.N    ??GetEdgeInflex_9
   \      0x140   0xFA0F 0xFA8A      SXTH     R10,R10          ;; SignExt  R10,R10,#+16,#+16
   \      0x144   0xF1BA 0x0F06      CMP      R10,#+6
   \      0x148   0xDA0D             BGE.N    ??GetEdgeInflex_10
   \                     ??GetEdgeInflex_9: (+1)
   \      0x14A   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0x14C   0x2801             CMP      R0,#+1
   \      0x14E   0xF47F 0xAF72      BNE.W    ??GetEdgeInflex_3
   \      0x152   0xF9B9 0x0004      LDRSH    R0,[R9, #+4]
   \      0x156   0x2810             CMP      R0,#+16
   \      0x158   0xF6FF 0xAF6D      BLT.W    ??GetEdgeInflex_3
   \      0x15C   0x4640             MOV      R0,R8
   \      0x15E   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0x160   0xE039             B.N      ??GetEdgeInflex_1
   \                     ??GetEdgeInflex_6: (+1)
   \      0x162   0x2000             MOVS     R0,#+0
   \      0x164   0xE037             B.N      ??GetEdgeInflex_1
   \                     ??GetEdgeInflex_10: (+1)
   \      0x166   0x4640             MOV      R0,R8
   \      0x168   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0x16A   0xF936 0x0010      LDRSH    R0,[R6, R0, LSL #+1]
   \      0x16E   0x1E80             SUBS     R0,R0,#+2
   \      0x170   0x289C             CMP      R0,#+156
   \      0x172   0xD304             BCC.N    ??GetEdgeInflex_11
   \      0x174   0xF118 0x0801      ADDS     R8,R8,#+1
   \      0x178   0x4640             MOV      R0,R8
   \      0x17A   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0x17C   0xE02B             B.N      ??GetEdgeInflex_1
   \                     ??GetEdgeInflex_11: (+1)
   \      0x17E   0x4640             MOV      R0,R8
   \      0x180   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0x182   0xE028             B.N      ??GetEdgeInflex_1
   \                     ??GetEdgeInflex_8: (+1)
   \      0x184   0x0039             MOVS     R1,R7
   \      0x186   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \      0x188   0x299E             CMP      R1,#+158
   \      0x18A   0xF47F 0xAF54      BNE.W    ??GetEdgeInflex_3
   \      0x18E   0x0001             MOVS     R1,R0
   \      0x190   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \      0x192   0x2901             CMP      R1,#+1
   \      0x194   0xF47F 0xAF46      BNE.W    ??GetEdgeInflex_2
   \      0x198   0xFA0F 0xFB8B      SXTH     R11,R11          ;; SignExt  R11,R11,#+16,#+16
   \      0x19C   0xF1BB 0x0F04      CMP      R11,#+4
   \      0x1A0   0xF6FF 0xAF40      BLT.W    ??GetEdgeInflex_2
   \      0x1A4   0xFA0F 0xFA8A      SXTH     R10,R10          ;; SignExt  R10,R10,#+16,#+16
   \      0x1A8   0xF11A 0x0F05      CMN      R10,#+5
   \      0x1AC   0xF6BF 0xAF3A      BGE.W    ??GetEdgeInflex_2
   \      0x1B0   0x4640             MOV      R0,R8
   \      0x1B2   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0x1B4   0xF936 0x0010      LDRSH    R0,[R6, R0, LSL #+1]
   \      0x1B8   0x1E80             SUBS     R0,R0,#+2
   \      0x1BA   0x289C             CMP      R0,#+156
   \      0x1BC   0xD304             BCC.N    ??GetEdgeInflex_12
   \      0x1BE   0xF118 0x0801      ADDS     R8,R8,#+1
   \      0x1C2   0x4640             MOV      R0,R8
   \      0x1C4   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0x1C6   0xE006             B.N      ??GetEdgeInflex_1
   \                     ??GetEdgeInflex_12: (+1)
   \      0x1C8   0x4640             MOV      R0,R8
   \      0x1CA   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0x1CC   0xE003             B.N      ??GetEdgeInflex_1
    753          				{ return i; }
   \                     ??GetEdgeInflex_4: (+1)
   \      0x1CE   0x4640             MOV      R0,R8
   \      0x1D0   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0x1D2   0xE000             B.N      ??GetEdgeInflex_1
    754          			}
    755          		}
    756          	}
    757          	return 0;
   \                     ??GetEdgeInflex_5: (+1)
   \      0x1D4   0x2000             MOVS     R0,#+0
   \                     ??GetEdgeInflex_1: (+1)
   \      0x1D6   0xB005             ADD      SP,SP,#+20
   \      0x1D8   0xE8BD 0x8FF0      POP      {R4-R11,PC}      ;; return
    758          }
    759          /*
    760           * 重新搜索左边界
    761           * 边缘处于黑色像素判定错误
    762           * 对拟合错误处进行修正
    763           */

   \                                 In section .text, align 2, keep-with-next
    764          void ReSearchLeftEdge(int16 row)
    765          {
   \                     ReSearchLeftEdge: (+1)
   \        0x0   0xE92D 0x41F0      PUSH     {R4-R8,LR}
   \        0x4   0x0005             MOVS     R5,R0
    766          	int16 col_buf = leftEdge[row];
   \        0x6   0x....'....        LDR.W    R4,??DataTable15
   \        0xA   0x0028             MOVS     R0,R5
   \        0xC   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \        0xE   0xF934 0x8010      LDRSH    R8,[R4, R0, LSL #+1]
    767          	int16 precol_buf = col_buf;
    768          	const int16 search_range = 16;
   \       0x12   0x2610             MOVS     R6,#+16
   \       0x14   0xE008             B.N      ??ReSearchLeftEdge_0
    769          	for (; row >= row_left_end; row--)
    770          	{
    771          		if (BLACK == imgbuff[row][leftEdge[row]])
    772          		{
    773          			col_buf = get_left(row, leftEdge[row], leftEdge[row] + search_range);
    774          			if (-1 == col_buf)
    775          			{
    776          				col_buf = get_left(row, precol_buf, precol_buf + search_range);
    777          				if (-1 == col_buf)
    778          				{
    779          					row_left_end = row;
    780          					leftEdge[row] = leftEdge[row + 1];
    781          					break;
    782          				}
    783          			}
    784          			leftEdge[row] = col_buf;
   \                     ??ReSearchLeftEdge_1: (+1)
   \       0x16   0x0029             MOVS     R1,R5
   \       0x18   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \       0x1A   0xF824 0x0011      STRH     R0,[R4, R1, LSL #+1]
    785          			precol_buf = leftEdge[row];
   \       0x1E   0x0028             MOVS     R0,R5
   \       0x20   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \       0x22   0xF934 0x8010      LDRSH    R8,[R4, R0, LSL #+1]
   \                     ??ReSearchLeftEdge_2: (+1)
   \       0x26   0x1E6D             SUBS     R5,R5,#+1
   \                     ??ReSearchLeftEdge_0: (+1)
   \       0x28   0x....'....        LDR.W    R7,??DataTable15_5
   \       0x2C   0x0028             MOVS     R0,R5
   \       0x2E   0xF9B7 0x1000      LDRSH    R1,[R7, #+0]
   \       0x32   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \       0x34   0x4288             CMP      R0,R1
   \       0x36   0xDB38             BLT.N    ??ReSearchLeftEdge_3
   \       0x38   0x....'....        LDR.W    R0,??DataTable15_6
   \       0x3C   0x2150             MOVS     R1,#+80
   \       0x3E   0xFB15 0xF101      SMULBB   R1,R5,R1
   \       0x42   0x4408             ADD      R0,R0,R1
   \       0x44   0x0029             MOVS     R1,R5
   \       0x46   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \       0x48   0xF934 0x1011      LDRSH    R1,[R4, R1, LSL #+1]
   \       0x4C   0x5C40             LDRB     R0,[R0, R1]
   \       0x4E   0x2800             CMP      R0,#+0
   \       0x50   0xD1E9             BNE.N    ??ReSearchLeftEdge_2
   \       0x52   0x0028             MOVS     R0,R5
   \       0x54   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \       0x56   0xF834 0x2010      LDRH     R2,[R4, R0, LSL #+1]
   \       0x5A   0x18B2             ADDS     R2,R6,R2
   \       0x5C   0xB212             SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
   \       0x5E   0x0028             MOVS     R0,R5
   \       0x60   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \       0x62   0xF934 0x1010      LDRSH    R1,[R4, R0, LSL #+1]
   \       0x66   0x0028             MOVS     R0,R5
   \       0x68   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \       0x6A   0x....'....        BL       get_left
   \       0x6E   0x0001             MOVS     R1,R0
   \       0x70   0xF05F 0x32FF      MOVS     R2,#-1
   \       0x74   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \       0x76   0x4291             CMP      R1,R2
   \       0x78   0xD1CD             BNE.N    ??ReSearchLeftEdge_1
   \       0x7A   0xEB16 0x0208      ADDS     R2,R6,R8
   \       0x7E   0xB212             SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
   \       0x80   0x4641             MOV      R1,R8
   \       0x82   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \       0x84   0x0028             MOVS     R0,R5
   \       0x86   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \       0x88   0x....'....        BL       get_left
   \       0x8C   0x0001             MOVS     R1,R0
   \       0x8E   0xF05F 0x32FF      MOVS     R2,#-1
   \       0x92   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \       0x94   0x4291             CMP      R1,R2
   \       0x96   0xD1BE             BNE.N    ??ReSearchLeftEdge_1
   \       0x98   0x803D             STRH     R5,[R7, #+0]
   \       0x9A   0x0028             MOVS     R0,R5
   \       0x9C   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \       0x9E   0xEB04 0x0040      ADD      R0,R4,R0, LSL #+1
   \       0xA2   0x8840             LDRH     R0,[R0, #+2]
   \       0xA4   0xB22D             SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
   \       0xA6   0xF824 0x0015      STRH     R0,[R4, R5, LSL #+1]
    786          		}
    787          	}
    788          }
   \                     ??ReSearchLeftEdge_3: (+1)
   \       0xAA   0xE8BD 0x81F0      POP      {R4-R8,PC}       ;; return
    789          /*
    790           * 重新搜索右边界
    791           * 边缘处于黑色像素判定错误
    792           * 对拟合错误处进行修正
    793           */

   \                                 In section .text, align 2, keep-with-next
    794          void ReSearchRightEdge(int16 row)
    795          {
   \                     ReSearchRightEdge: (+1)
   \        0x0   0xE92D 0x41F0      PUSH     {R4-R8,LR}
   \        0x4   0x0005             MOVS     R5,R0
    796          	int16 col_buf = rightEdge[row];
   \        0x6   0x....             LDR.N    R4,??DataTable14
   \        0x8   0x0028             MOVS     R0,R5
   \        0xA   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \        0xC   0xF934 0x8010      LDRSH    R8,[R4, R0, LSL #+1]
    797          	int16 precol_buf = col_buf;
    798          	const int16 search_range = 16;
   \       0x10   0x2610             MOVS     R6,#+16
   \       0x12   0xE008             B.N      ??ReSearchRightEdge_0
    799          	for (; row >= row_right_end; row--)
    800          	{
    801          		if (BLACK == imgbuff[row][rightEdge[row]])
    802          		{
    803          			col_buf = get_right(row, rightEdge[row], rightEdge[row] - search_range);
    804          			if (-1 == col_buf)
    805          			{
    806          				col_buf = get_right(row, precol_buf, precol_buf - search_range);
    807          				if (-1 == col_buf)
    808          				{
    809          					row_right_end = row;
    810          					rightEdge[row] = rightEdge[row + 1];
    811          					break;
    812          				}
    813          			}
    814          			rightEdge[row] = col_buf;
   \                     ??ReSearchRightEdge_1: (+1)
   \       0x14   0x0029             MOVS     R1,R5
   \       0x16   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \       0x18   0xF824 0x0011      STRH     R0,[R4, R1, LSL #+1]
    815          			precol_buf = rightEdge[row];
   \       0x1C   0x0028             MOVS     R0,R5
   \       0x1E   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \       0x20   0xF934 0x8010      LDRSH    R8,[R4, R0, LSL #+1]
   \                     ??ReSearchRightEdge_2: (+1)
   \       0x24   0x1E6D             SUBS     R5,R5,#+1
   \                     ??ReSearchRightEdge_0: (+1)
   \       0x26   0x....             LDR.N    R7,??DataTable14_1
   \       0x28   0x0028             MOVS     R0,R5
   \       0x2A   0xF9B7 0x1000      LDRSH    R1,[R7, #+0]
   \       0x2E   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \       0x30   0x4288             CMP      R0,R1
   \       0x32   0xDB38             BLT.N    ??ReSearchRightEdge_3
   \       0x34   0x....'....        LDR.W    R0,??DataTable15_6
   \       0x38   0x2150             MOVS     R1,#+80
   \       0x3A   0xFB15 0xF101      SMULBB   R1,R5,R1
   \       0x3E   0x4408             ADD      R0,R0,R1
   \       0x40   0x0029             MOVS     R1,R5
   \       0x42   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \       0x44   0xF934 0x1011      LDRSH    R1,[R4, R1, LSL #+1]
   \       0x48   0x5C40             LDRB     R0,[R0, R1]
   \       0x4A   0x2800             CMP      R0,#+0
   \       0x4C   0xD1EA             BNE.N    ??ReSearchRightEdge_2
   \       0x4E   0x0028             MOVS     R0,R5
   \       0x50   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \       0x52   0xF834 0x2010      LDRH     R2,[R4, R0, LSL #+1]
   \       0x56   0x1B92             SUBS     R2,R2,R6
   \       0x58   0xB212             SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
   \       0x5A   0x0028             MOVS     R0,R5
   \       0x5C   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \       0x5E   0xF934 0x1010      LDRSH    R1,[R4, R0, LSL #+1]
   \       0x62   0x0028             MOVS     R0,R5
   \       0x64   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \       0x66   0x....'....        BL       get_right
   \       0x6A   0x0001             MOVS     R1,R0
   \       0x6C   0xF05F 0x32FF      MOVS     R2,#-1
   \       0x70   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \       0x72   0x4291             CMP      R1,R2
   \       0x74   0xD1CE             BNE.N    ??ReSearchRightEdge_1
   \       0x76   0xEBB8 0x0206      SUBS     R2,R8,R6
   \       0x7A   0xB212             SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
   \       0x7C   0x4641             MOV      R1,R8
   \       0x7E   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \       0x80   0x0028             MOVS     R0,R5
   \       0x82   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \       0x84   0x....'....        BL       get_right
   \       0x88   0x0001             MOVS     R1,R0
   \       0x8A   0xF05F 0x32FF      MOVS     R2,#-1
   \       0x8E   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \       0x90   0x4291             CMP      R1,R2
   \       0x92   0xD1BF             BNE.N    ??ReSearchRightEdge_1
   \       0x94   0x803D             STRH     R5,[R7, #+0]
   \       0x96   0x0028             MOVS     R0,R5
   \       0x98   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \       0x9A   0xEB04 0x0040      ADD      R0,R4,R0, LSL #+1
   \       0x9E   0x8840             LDRH     R0,[R0, #+2]
   \       0xA0   0xB22D             SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
   \       0xA2   0xF824 0x0015      STRH     R0,[R4, R5, LSL #+1]
    816          		}
    817          	}
    818          }
   \                     ??ReSearchRightEdge_3: (+1)
   \       0xA6   0xE8BD 0x81F0      POP      {R4-R8,PC}       ;; return
    819          
    820          /*
    821           * 根据左边缘以及赛道宽度模板补出右边缘
    822           * 防止边缘跳变处理
    823           */

   \                                 In section .text, align 2, keep-with-next
    824          void SearchRightEdgebyLeftSide(uint8 Type)
    825          {
   \                     SearchRightEdgebyLeftSide: (+1)
   \        0x0   0xE92D 0x41FF      PUSH     {R0-R8,LR}
   \        0x4   0x0007             MOVS     R7,R0
    826          	int16 i;
    827          	int16 col_buf = 0;
   \        0x6   0x2600             MOVS     R6,#+0
    828          	for (i = IMG_BOTTOM; i >= row_left_end; i--)
   \        0x8   0x2045             MOVS     R0,#+69
   \        0xA   0xE000             B.N      ??SearchRightEdgebyLeftSide_0
   \                     ??SearchRightEdgebyLeftSide_1: (+1)
   \        0xC   0x1E40             SUBS     R0,R0,#+1
   \                     ??SearchRightEdgebyLeftSide_0: (+1)
   \        0xE   0x....'....        LDR.W    R4,??DataTable15_5
   \       0x12   0x0001             MOVS     R1,R0
   \       0x14   0xF9B4 0x2000      LDRSH    R2,[R4, #+0]
   \       0x18   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \       0x1A   0x4291             CMP      R1,R2
   \       0x1C   0xDB0A             BLT.N    ??SearchRightEdgebyLeftSide_2
    829          	{
    830          		if (leftEdge[i] > IMG_COL_CENTER)
   \       0x1E   0x....'....        LDR.W    R1,??DataTable15
   \       0x22   0x0002             MOVS     R2,R0
   \       0x24   0xB212             SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
   \       0x26   0xF931 0x1012      LDRSH    R1,[R1, R2, LSL #+1]
   \       0x2A   0x2950             CMP      R1,#+80
   \       0x2C   0xDBEE             BLT.N    ??SearchRightEdgebyLeftSide_1
    831          		{
    832          			row_left_end = i;
   \       0x2E   0x8020             STRH     R0,[R4, #+0]
    833          			row_right_end = i;
   \       0x30   0x....             LDR.N    R1,??DataTable14_1
   \       0x32   0x8008             STRH     R0,[R1, #+0]
    834          			break;
    835          		}
    836          	}
    837          	leftFold = GetEdgeInflex(row_left_begin, row_left_end, leftEdge, IMG_LEFT);
   \                     ??SearchRightEdgebyLeftSide_2: (+1)
   \       0x34   0x....'....        LDR.W    R8,??DataTable15_7
   \       0x38   0x....'....        LDR.W    R5,??DataTable15
   \       0x3C   0x2301             MOVS     R3,#+1
   \       0x3E   0x002A             MOVS     R2,R5
   \       0x40   0xF9B4 0x1000      LDRSH    R1,[R4, #+0]
   \       0x44   0x....'....        LDR.W    R0,??DataTable15_8
   \       0x48   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \       0x4C   0x....'....        BL       GetEdgeInflex
   \       0x50   0xF8A8 0x0000      STRH     R0,[R8, #+0]
    838          	if (leftFold > IMG_TOP)
   \       0x54   0xF9B8 0x0000      LDRSH    R0,[R8, #+0]
   \       0x58   0x280B             CMP      R0,#+11
   \       0x5A   0xF2C0 0x808E      BLT.W    ??SearchRightEdgebyLeftSide_3
    839          	{
    840          		if (1 == Type)
   \       0x5E   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \       0x60   0x2F01             CMP      R7,#+1
   \       0x62   0xD13E             BNE.N    ??SearchRightEdgebyLeftSide_4
    841          		{
    842          			AlterParam_Line(IMG_BOTTOM, leftFold, leftFold, leftEdge[leftFold], IMG_BOTTOM, leftEdge[IMG_BOTTOM], leftEdge);
   \       0x64   0x9502             STR      R5,[SP, #+8]
   \       0x66   0xF9B5 0x008A      LDRSH    R0,[R5, #+138]
   \       0x6A   0x9001             STR      R0,[SP, #+4]
   \       0x6C   0x2045             MOVS     R0,#+69
   \       0x6E   0x9000             STR      R0,[SP, #+0]
   \       0x70   0xF9B8 0x0000      LDRSH    R0,[R8, #+0]
   \       0x74   0xF935 0x3010      LDRSH    R3,[R5, R0, LSL #+1]
   \       0x78   0xF9B8 0x2000      LDRSH    R2,[R8, #+0]
   \       0x7C   0xF9B8 0x1000      LDRSH    R1,[R8, #+0]
   \       0x80   0x2045             MOVS     R0,#+69
   \       0x82   0x....'....        BL       AlterParam_Line
    843          
    844          			for (i = IMG_BOTTOM; i >= leftFold; i--)
   \       0x86   0x2745             MOVS     R7,#+69
   \       0x88   0xE025             B.N      ??SearchRightEdgebyLeftSide_5
    845          			{
    846          				if (BLACK == imgbuff[i][leftEdge[i]])
   \                     ??SearchRightEdgebyLeftSide_6: (+1)
   \       0x8A   0x....'....        LDR.W    R0,??DataTable15_6
   \       0x8E   0x2150             MOVS     R1,#+80
   \       0x90   0xFB17 0xF101      SMULBB   R1,R7,R1
   \       0x94   0x4408             ADD      R0,R0,R1
   \       0x96   0x0039             MOVS     R1,R7
   \       0x98   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \       0x9A   0xF935 0x1011      LDRSH    R1,[R5, R1, LSL #+1]
   \       0x9E   0x5C40             LDRB     R0,[R0, R1]
   \       0xA0   0x2800             CMP      R0,#+0
   \       0xA2   0xD117             BNE.N    ??SearchRightEdgebyLeftSide_7
    847          				{
    848          					col_buf = get_left(i, leftEdge[i], leftEdge[i] + 16);
   \       0xA4   0x0038             MOVS     R0,R7
   \       0xA6   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \       0xA8   0xF835 0x2010      LDRH     R2,[R5, R0, LSL #+1]
   \       0xAC   0x3210             ADDS     R2,R2,#+16
   \       0xAE   0xB212             SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
   \       0xB0   0x0038             MOVS     R0,R7
   \       0xB2   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \       0xB4   0xF935 0x1010      LDRSH    R1,[R5, R0, LSL #+1]
   \       0xB8   0x0038             MOVS     R0,R7
   \       0xBA   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \       0xBC   0x....'....        BL       get_left
   \       0xC0   0x0006             MOVS     R6,R0
    849          					if (-1 != col_buf)
   \       0xC2   0x0030             MOVS     R0,R6
   \       0xC4   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \       0xC6   0xF110 0x0F01      CMN      R0,#+1
   \       0xCA   0xD003             BEQ.N    ??SearchRightEdgebyLeftSide_7
    850          					{
    851          						leftEdge[i] = col_buf;
   \       0xCC   0x0038             MOVS     R0,R7
   \       0xCE   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \       0xD0   0xF825 0x6010      STRH     R6,[R5, R0, LSL #+1]
    852          					}
    853          				}
    854          			}
   \                     ??SearchRightEdgebyLeftSide_7: (+1)
   \       0xD4   0x1E7F             SUBS     R7,R7,#+1
   \                     ??SearchRightEdgebyLeftSide_5: (+1)
   \       0xD6   0x0038             MOVS     R0,R7
   \       0xD8   0xF9B8 0x1000      LDRSH    R1,[R8, #+0]
   \       0xDC   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \       0xDE   0x4288             CMP      R0,R1
   \       0xE0   0xDAD3             BGE.N    ??SearchRightEdgebyLeftSide_6
    855          		}
    856          
    857          		for (i = leftFold; i >= row_left_end; i--)
   \                     ??SearchRightEdgebyLeftSide_4: (+1)
   \       0xE2   0xF9B8 0x0000      LDRSH    R0,[R8, #+0]
   \       0xE6   0xE008             B.N      ??SearchRightEdgebyLeftSide_8
    858          		{
    859          			leftEdge[i] = leftEdge[leftFold];
   \                     ??SearchRightEdgebyLeftSide_9: (+1)
   \       0xE8   0xF9B8 0x1000      LDRSH    R1,[R8, #+0]
   \       0xEC   0xF835 0x1011      LDRH     R1,[R5, R1, LSL #+1]
   \       0xF0   0x0002             MOVS     R2,R0
   \       0xF2   0xB212             SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
   \       0xF4   0xF825 0x1012      STRH     R1,[R5, R2, LSL #+1]
    860          		}
   \       0xF8   0x1E40             SUBS     R0,R0,#+1
   \                     ??SearchRightEdgebyLeftSide_8: (+1)
   \       0xFA   0x0001             MOVS     R1,R0
   \       0xFC   0xF9B4 0x2000      LDRSH    R2,[R4, #+0]
   \      0x100   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \      0x102   0x4291             CMP      R1,R2
   \      0x104   0xDAF0             BGE.N    ??SearchRightEdgebyLeftSide_9
    861          
    862          		for (i = IMG_BOTTOM; i >= row_left_end; i--)
   \      0x106   0x2745             MOVS     R7,#+69
   \                     ??SearchRightEdgebyLeftSide_10: (+1)
   \      0x108   0x0038             MOVS     R0,R7
   \      0x10A   0xF9B4 0x1000      LDRSH    R1,[R4, #+0]
   \      0x10E   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0x110   0x4288             CMP      R0,R1
   \      0x112   0xF2C0 0x807F      BLT.W    ??SearchRightEdgebyLeftSide_11
    863          		{
    864          			rightEdge[i] = leftEdge[i] + width_templ[i];
   \      0x116   0x....'....        LDR.W    R8,??DataTable14
   \      0x11A   0x0038             MOVS     R0,R7
   \      0x11C   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0x11E   0xF835 0x1010      LDRH     R1,[R5, R0, LSL #+1]
   \      0x122   0x....'....        LDR.W    R0,??DataTable15_3
   \      0x126   0x003A             MOVS     R2,R7
   \      0x128   0xB212             SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
   \      0x12A   0xF830 0x0012      LDRH     R0,[R0, R2, LSL #+1]
   \      0x12E   0x1841             ADDS     R1,R0,R1
   \      0x130   0x0038             MOVS     R0,R7
   \      0x132   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0x134   0xF828 0x1010      STRH     R1,[R8, R0, LSL #+1]
    865          			rightEdge[i] = Min(rightEdge[i], IMG_RIGHT);
   \      0x138   0x219E             MOVS     R1,#+158
   \      0x13A   0x0038             MOVS     R0,R7
   \      0x13C   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0x13E   0xF938 0x0010      LDRSH    R0,[R8, R0, LSL #+1]
   \      0x142   0x....'....        BL       Min
   \      0x146   0x0039             MOVS     R1,R7
   \      0x148   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \      0x14A   0xF828 0x0011      STRH     R0,[R8, R1, LSL #+1]
    866          			if (rightEdge[i] > col_buf && i < IMG_BOTTOM)
   \      0x14E   0x0030             MOVS     R0,R6
   \      0x150   0x0039             MOVS     R1,R7
   \      0x152   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \      0x154   0xF938 0x1011      LDRSH    R1,[R8, R1, LSL #+1]
   \      0x158   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0x15A   0x4288             CMP      R0,R1
   \      0x15C   0xDA07             BGE.N    ??SearchRightEdgebyLeftSide_12
   \      0x15E   0x0038             MOVS     R0,R7
   \      0x160   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0x162   0x2845             CMP      R0,#+69
   \      0x164   0xDA03             BGE.N    ??SearchRightEdgebyLeftSide_12
    867          			{ rightEdge[i] = col_buf; }
   \      0x166   0x0038             MOVS     R0,R7
   \      0x168   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0x16A   0xF828 0x6010      STRH     R6,[R8, R0, LSL #+1]
    868          			col_buf = rightEdge[i];
   \                     ??SearchRightEdgebyLeftSide_12: (+1)
   \      0x16E   0x0038             MOVS     R0,R7
   \      0x170   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0x172   0xF938 0x6010      LDRSH    R6,[R8, R0, LSL #+1]
    869          		}
   \      0x176   0x1E7F             SUBS     R7,R7,#+1
   \      0x178   0xE7C6             B.N      ??SearchRightEdgebyLeftSide_10
    870          	}
    871          	else
    872          	{
    873          		for (i = IMG_BOTTOM; i >= row_left_end; i--)
   \                     ??SearchRightEdgebyLeftSide_3: (+1)
   \      0x17A   0x2745             MOVS     R7,#+69
   \      0x17C   0xE044             B.N      ??SearchRightEdgebyLeftSide_13
    874          		{
    875          			if (leftEdge[i] > leftEdge[i + 1])
   \                     ??SearchRightEdgebyLeftSide_14: (+1)
   \      0x17E   0x0038             MOVS     R0,R7
   \      0x180   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0x182   0xEB05 0x0040      ADD      R0,R5,R0, LSL #+1
   \      0x186   0xF9B0 0x0002      LDRSH    R0,[R0, #+2]
   \      0x18A   0x0039             MOVS     R1,R7
   \      0x18C   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \      0x18E   0xF935 0x1011      LDRSH    R1,[R5, R1, LSL #+1]
   \      0x192   0x4288             CMP      R0,R1
   \      0x194   0xDA08             BGE.N    ??SearchRightEdgebyLeftSide_15
    876          			{ leftEdge[i] = leftEdge[i + 1]; }
   \      0x196   0x0038             MOVS     R0,R7
   \      0x198   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0x19A   0xEB05 0x0040      ADD      R0,R5,R0, LSL #+1
   \      0x19E   0x8840             LDRH     R0,[R0, #+2]
   \      0x1A0   0x0039             MOVS     R1,R7
   \      0x1A2   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \      0x1A4   0xF825 0x0011      STRH     R0,[R5, R1, LSL #+1]
    877          			rightEdge[i] = leftEdge[i] + width_templ[i];
   \                     ??SearchRightEdgebyLeftSide_15: (+1)
   \      0x1A8   0x....'....        LDR.W    R8,??DataTable14
   \      0x1AC   0x0038             MOVS     R0,R7
   \      0x1AE   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0x1B0   0xF835 0x1010      LDRH     R1,[R5, R0, LSL #+1]
   \      0x1B4   0x....             LDR.N    R0,??DataTable15_3
   \      0x1B6   0x003A             MOVS     R2,R7
   \      0x1B8   0xB212             SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
   \      0x1BA   0xF830 0x0012      LDRH     R0,[R0, R2, LSL #+1]
   \      0x1BE   0x1841             ADDS     R1,R0,R1
   \      0x1C0   0x0038             MOVS     R0,R7
   \      0x1C2   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0x1C4   0xF828 0x1010      STRH     R1,[R8, R0, LSL #+1]
    878          			rightEdge[i] = Min(rightEdge[i], IMG_RIGHT);
   \      0x1C8   0x219E             MOVS     R1,#+158
   \      0x1CA   0x0038             MOVS     R0,R7
   \      0x1CC   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0x1CE   0xF938 0x0010      LDRSH    R0,[R8, R0, LSL #+1]
   \      0x1D2   0x....'....        BL       Min
   \      0x1D6   0x0039             MOVS     R1,R7
   \      0x1D8   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \      0x1DA   0xF828 0x0011      STRH     R0,[R8, R1, LSL #+1]
    879          			if (rightEdge[i] > col_buf && i < IMG_BOTTOM)
   \      0x1DE   0x0030             MOVS     R0,R6
   \      0x1E0   0x0039             MOVS     R1,R7
   \      0x1E2   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \      0x1E4   0xF938 0x1011      LDRSH    R1,[R8, R1, LSL #+1]
   \      0x1E8   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0x1EA   0x4288             CMP      R0,R1
   \      0x1EC   0xDA07             BGE.N    ??SearchRightEdgebyLeftSide_16
   \      0x1EE   0x0038             MOVS     R0,R7
   \      0x1F0   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0x1F2   0x2845             CMP      R0,#+69
   \      0x1F4   0xDA03             BGE.N    ??SearchRightEdgebyLeftSide_16
    880          			{ rightEdge[i] = col_buf; }
   \      0x1F6   0x0038             MOVS     R0,R7
   \      0x1F8   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0x1FA   0xF828 0x6010      STRH     R6,[R8, R0, LSL #+1]
    881          			col_buf = rightEdge[i];
   \                     ??SearchRightEdgebyLeftSide_16: (+1)
   \      0x1FE   0x0038             MOVS     R0,R7
   \      0x200   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0x202   0xF938 0x6010      LDRSH    R6,[R8, R0, LSL #+1]
    882          		}
   \      0x206   0x1E7F             SUBS     R7,R7,#+1
   \                     ??SearchRightEdgebyLeftSide_13: (+1)
   \      0x208   0x0038             MOVS     R0,R7
   \      0x20A   0xF9B4 0x1000      LDRSH    R1,[R4, #+0]
   \      0x20E   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0x210   0x4288             CMP      R0,R1
   \      0x212   0xDAB4             BGE.N    ??SearchRightEdgebyLeftSide_14
    883          	}
    884          	for (i = IMG_BOTTOM; i >= row_left_end; i--)
   \                     ??SearchRightEdgebyLeftSide_11: (+1)
   \      0x214   0x2145             MOVS     R1,#+69
   \      0x216   0xE000             B.N      ??SearchRightEdgebyLeftSide_17
   \                     ??SearchRightEdgebyLeftSide_18: (+1)
   \      0x218   0x1E49             SUBS     R1,R1,#+1
   \                     ??SearchRightEdgebyLeftSide_17: (+1)
   \      0x21A   0x0008             MOVS     R0,R1
   \      0x21C   0xF9B4 0x2000      LDRSH    R2,[R4, #+0]
   \      0x220   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0x222   0x4290             CMP      R0,R2
   \      0x224   0xDB10             BLT.N    ??SearchRightEdgebyLeftSide_19
    885          	{
    886          		if (rightEdge[i] - leftEdge[i] <= 20)
   \      0x226   0x....             LDR.N    R0,??DataTable14
   \      0x228   0x000A             MOVS     R2,R1
   \      0x22A   0xB212             SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
   \      0x22C   0xF930 0x2012      LDRSH    R2,[R0, R2, LSL #+1]
   \      0x230   0x0008             MOVS     R0,R1
   \      0x232   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0x234   0xF935 0x0010      LDRSH    R0,[R5, R0, LSL #+1]
   \      0x238   0x1A12             SUBS     R2,R2,R0
   \      0x23A   0x2A15             CMP      R2,#+21
   \      0x23C   0xDAEC             BGE.N    ??SearchRightEdgebyLeftSide_18
    887          		{
    888          			row_left_end = i + 1;
   \      0x23E   0x1C48             ADDS     R0,R1,#+1
   \      0x240   0x8020             STRH     R0,[R4, #+0]
    889          			row_right_end = i + 1;
   \      0x242   0x1C49             ADDS     R1,R1,#+1
   \      0x244   0x....             LDR.N    R0,??DataTable14_1
   \      0x246   0x8001             STRH     R1,[R0, #+0]
    890          			break;
    891          		}
    892          	}
    893          	row_end_center = Max(row_left_end, row_right_end);
   \                     ??SearchRightEdgebyLeftSide_19: (+1)
   \      0x248   0x....             LDR.N    R0,??DataTable14_1
   \      0x24A   0xF9B0 0x1000      LDRSH    R1,[R0, #+0]
   \      0x24E   0xF9B4 0x0000      LDRSH    R0,[R4, #+0]
   \      0x252   0x....'....        BL       Max
   \      0x256   0x....             LDR.N    R1,??DataTable15_9
   \      0x258   0x8008             STRH     R0,[R1, #+0]
    894          
    895          }
   \      0x25A   0xE8BD 0x81FF      POP      {R0-R8,PC}       ;; return
    896          /*
    897           * 根据右边缘以及赛道宽度模板补出左边缘
    898           * 防止边缘跳变处理
    899           */

   \                                 In section .text, align 2, keep-with-next
    900          void SearchLeftEdgebyRightSide(uint8 Type)
    901          {
   \                     SearchLeftEdgebyRightSide: (+1)
   \        0x0   0xE92D 0x41FF      PUSH     {R0-R8,LR}
   \        0x4   0x0007             MOVS     R7,R0
    902          	int16 i;
    903          	int16 col_buf = 0;
   \        0x6   0x2600             MOVS     R6,#+0
    904          	for (i = IMG_BOTTOM; i >= row_right_end; i--)
   \        0x8   0x2045             MOVS     R0,#+69
   \        0xA   0xE000             B.N      ??SearchLeftEdgebyRightSide_0
   \                     ??SearchLeftEdgebyRightSide_1: (+1)
   \        0xC   0x1E40             SUBS     R0,R0,#+1
   \                     ??SearchLeftEdgebyRightSide_0: (+1)
   \        0xE   0x....             LDR.N    R4,??DataTable15_10
   \       0x10   0x0001             MOVS     R1,R0
   \       0x12   0xF9B4 0x2000      LDRSH    R2,[R4, #+0]
   \       0x16   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \       0x18   0x4291             CMP      R1,R2
   \       0x1A   0xDB09             BLT.N    ??SearchLeftEdgebyRightSide_2
    905          	{
    906          		if (rightEdge[i] < IMG_COL_CENTER)
   \       0x1C   0x....             LDR.N    R1,??DataTable15_1
   \       0x1E   0x0002             MOVS     R2,R0
   \       0x20   0xB212             SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
   \       0x22   0xF931 0x1012      LDRSH    R1,[R1, R2, LSL #+1]
   \       0x26   0x294F             CMP      R1,#+79
   \       0x28   0xDAF0             BGE.N    ??SearchLeftEdgebyRightSide_1
    907          		{
    908          			row_left_end = i;
   \       0x2A   0x....             LDR.N    R1,??DataTable15_5
   \       0x2C   0x8008             STRH     R0,[R1, #+0]
    909          			row_right_end = i;
   \       0x2E   0x8020             STRH     R0,[R4, #+0]
    910          			break;
    911          		}
    912          	}
    913          	rightFold = GetEdgeInflex(row_right_begin, row_right_end, rightEdge, IMG_RIGHT);
   \                     ??SearchLeftEdgebyRightSide_2: (+1)
   \       0x30   0x....'....        LDR.W    R8,??DataTable15_11
   \       0x34   0x....             LDR.N    R5,??DataTable15_1
   \       0x36   0x239E             MOVS     R3,#+158
   \       0x38   0x002A             MOVS     R2,R5
   \       0x3A   0xF9B4 0x1000      LDRSH    R1,[R4, #+0]
   \       0x3E   0x....             LDR.N    R0,??DataTable15_4
   \       0x40   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \       0x44   0x....'....        BL       GetEdgeInflex
   \       0x48   0xF8A8 0x0000      STRH     R0,[R8, #+0]
    914          	if (rightFold > IMG_TOP)
   \       0x4C   0xF9B8 0x0000      LDRSH    R0,[R8, #+0]
   \       0x50   0x280B             CMP      R0,#+11
   \       0x52   0xF2C0 0x808C      BLT.W    ??SearchLeftEdgebyRightSide_3
    915          	{
    916          		if (1 == Type)
   \       0x56   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \       0x58   0x2F01             CMP      R7,#+1
   \       0x5A   0xD13E             BNE.N    ??SearchLeftEdgebyRightSide_4
    917          		{
    918          			AlterParam_Line(IMG_BOTTOM, rightFold, rightFold, rightEdge[rightFold], IMG_BOTTOM, rightEdge[IMG_BOTTOM], rightEdge);
   \       0x5C   0x9502             STR      R5,[SP, #+8]
   \       0x5E   0xF9B5 0x008A      LDRSH    R0,[R5, #+138]
   \       0x62   0x9001             STR      R0,[SP, #+4]
   \       0x64   0x2045             MOVS     R0,#+69
   \       0x66   0x9000             STR      R0,[SP, #+0]
   \       0x68   0xF9B8 0x0000      LDRSH    R0,[R8, #+0]
   \       0x6C   0xF935 0x3010      LDRSH    R3,[R5, R0, LSL #+1]
   \       0x70   0xF9B8 0x2000      LDRSH    R2,[R8, #+0]
   \       0x74   0xF9B8 0x1000      LDRSH    R1,[R8, #+0]
   \       0x78   0x2045             MOVS     R0,#+69
   \       0x7A   0x....'....        BL       AlterParam_Line
    919          
    920          			for (i = IMG_BOTTOM; i >= rightFold; i--)
   \       0x7E   0x2745             MOVS     R7,#+69
   \       0x80   0xE025             B.N      ??SearchLeftEdgebyRightSide_5
    921          			{
    922          				if (BLACK == imgbuff[i][rightEdge[i]])
   \                     ??SearchLeftEdgebyRightSide_6: (+1)
   \       0x82   0x....             LDR.N    R0,??DataTable15_6
   \       0x84   0x2150             MOVS     R1,#+80
   \       0x86   0xFB17 0xF101      SMULBB   R1,R7,R1
   \       0x8A   0x4408             ADD      R0,R0,R1
   \       0x8C   0x0039             MOVS     R1,R7
   \       0x8E   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \       0x90   0xF935 0x1011      LDRSH    R1,[R5, R1, LSL #+1]
   \       0x94   0x5C40             LDRB     R0,[R0, R1]
   \       0x96   0x2800             CMP      R0,#+0
   \       0x98   0xD118             BNE.N    ??SearchLeftEdgebyRightSide_7
    923          				{
    924          					col_buf = get_right(i, rightEdge[i], rightEdge[i] - 16);
   \       0x9A   0x0038             MOVS     R0,R7
   \       0x9C   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \       0x9E   0xF835 0x0010      LDRH     R0,[R5, R0, LSL #+1]
   \       0xA2   0xF1B0 0x0210      SUBS     R2,R0,#+16
   \       0xA6   0xB212             SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
   \       0xA8   0x0038             MOVS     R0,R7
   \       0xAA   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \       0xAC   0xF935 0x1010      LDRSH    R1,[R5, R0, LSL #+1]
   \       0xB0   0x0038             MOVS     R0,R7
   \       0xB2   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \       0xB4   0x....'....        BL       get_right
   \       0xB8   0x0006             MOVS     R6,R0
    925          					if (-1 != col_buf)
   \       0xBA   0x0030             MOVS     R0,R6
   \       0xBC   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \       0xBE   0xF110 0x0F01      CMN      R0,#+1
   \       0xC2   0xD003             BEQ.N    ??SearchLeftEdgebyRightSide_7
    926          					{
    927          						rightEdge[i] = col_buf;
   \       0xC4   0x0038             MOVS     R0,R7
   \       0xC6   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \       0xC8   0xF825 0x6010      STRH     R6,[R5, R0, LSL #+1]
    928          					}
    929          				}
    930          			}
   \                     ??SearchLeftEdgebyRightSide_7: (+1)
   \       0xCC   0x1E7F             SUBS     R7,R7,#+1
   \                     ??SearchLeftEdgebyRightSide_5: (+1)
   \       0xCE   0x0038             MOVS     R0,R7
   \       0xD0   0xF9B8 0x1000      LDRSH    R1,[R8, #+0]
   \       0xD4   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \       0xD6   0x4288             CMP      R0,R1
   \       0xD8   0xDAD3             BGE.N    ??SearchLeftEdgebyRightSide_6
    931          		}
    932          
    933          		for (i = rightFold; i >= row_right_end; i--)
   \                     ??SearchLeftEdgebyRightSide_4: (+1)
   \       0xDA   0xF9B8 0x0000      LDRSH    R0,[R8, #+0]
   \       0xDE   0xE008             B.N      ??SearchLeftEdgebyRightSide_8
    934          		{
    935          			rightEdge[i] = rightEdge[rightFold];
   \                     ??SearchLeftEdgebyRightSide_9: (+1)
   \       0xE0   0xF9B8 0x1000      LDRSH    R1,[R8, #+0]
   \       0xE4   0xF835 0x1011      LDRH     R1,[R5, R1, LSL #+1]
   \       0xE8   0x0002             MOVS     R2,R0
   \       0xEA   0xB212             SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
   \       0xEC   0xF825 0x1012      STRH     R1,[R5, R2, LSL #+1]
    936          		}
   \       0xF0   0x1E40             SUBS     R0,R0,#+1
   \                     ??SearchLeftEdgebyRightSide_8: (+1)
   \       0xF2   0x0001             MOVS     R1,R0
   \       0xF4   0xF9B4 0x2000      LDRSH    R2,[R4, #+0]
   \       0xF8   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \       0xFA   0x4291             CMP      R1,R2
   \       0xFC   0xDAF0             BGE.N    ??SearchLeftEdgebyRightSide_9
    937          
    938          		for (i = IMG_BOTTOM; i >= row_right_end; i--)
   \       0xFE   0x2745             MOVS     R7,#+69
   \                     ??SearchLeftEdgebyRightSide_10: (+1)
   \      0x100   0x0038             MOVS     R0,R7
   \      0x102   0xF9B4 0x1000      LDRSH    R1,[R4, #+0]
   \      0x106   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0x108   0x4288             CMP      R0,R1
   \      0x10A   0xDB7D             BLT.N    ??SearchLeftEdgebyRightSide_11
    939          		{
    940          			leftEdge[i] = rightEdge[i] - width_templ[i];
   \      0x10C   0x....'....        LDR.W    R8,??DataTable15
   \      0x110   0x0038             MOVS     R0,R7
   \      0x112   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0x114   0xF835 0x1010      LDRH     R1,[R5, R0, LSL #+1]
   \      0x118   0x....             LDR.N    R0,??DataTable15_3
   \      0x11A   0x003A             MOVS     R2,R7
   \      0x11C   0xB212             SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
   \      0x11E   0xF830 0x0012      LDRH     R0,[R0, R2, LSL #+1]
   \      0x122   0x1A09             SUBS     R1,R1,R0
   \      0x124   0x0038             MOVS     R0,R7
   \      0x126   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0x128   0xF828 0x1010      STRH     R1,[R8, R0, LSL #+1]
    941          			leftEdge[i] = Max(IMG_LEFT, leftEdge[i]);
   \      0x12C   0x0038             MOVS     R0,R7
   \      0x12E   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0x130   0xF938 0x1010      LDRSH    R1,[R8, R0, LSL #+1]
   \      0x134   0x2001             MOVS     R0,#+1
   \      0x136   0x....'....        BL       Max
   \      0x13A   0x0039             MOVS     R1,R7
   \      0x13C   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \      0x13E   0xF828 0x0011      STRH     R0,[R8, R1, LSL #+1]
    942          			if (leftEdge[i] < col_buf && i < IMG_BOTTOM)
   \      0x142   0x0038             MOVS     R0,R7
   \      0x144   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0x146   0xF938 0x0010      LDRSH    R0,[R8, R0, LSL #+1]
   \      0x14A   0x0031             MOVS     R1,R6
   \      0x14C   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \      0x14E   0x4288             CMP      R0,R1
   \      0x150   0xDA07             BGE.N    ??SearchLeftEdgebyRightSide_12
   \      0x152   0x0038             MOVS     R0,R7
   \      0x154   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0x156   0x2845             CMP      R0,#+69
   \      0x158   0xDA03             BGE.N    ??SearchLeftEdgebyRightSide_12
    943          			{ leftEdge[i] = col_buf; }
   \      0x15A   0x0038             MOVS     R0,R7
   \      0x15C   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0x15E   0xF828 0x6010      STRH     R6,[R8, R0, LSL #+1]
    944          			col_buf = leftEdge[i];
   \                     ??SearchLeftEdgebyRightSide_12: (+1)
   \      0x162   0x0038             MOVS     R0,R7
   \      0x164   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0x166   0xF938 0x6010      LDRSH    R6,[R8, R0, LSL #+1]
    945          		}
   \      0x16A   0x1E7F             SUBS     R7,R7,#+1
   \      0x16C   0xE7C8             B.N      ??SearchLeftEdgebyRightSide_10
    946          	}
    947          	else
    948          	{
    949          		for (i = IMG_BOTTOM; i >= row_right_end; i--)
   \                     ??SearchLeftEdgebyRightSide_3: (+1)
   \      0x16E   0x2745             MOVS     R7,#+69
   \      0x170   0xE044             B.N      ??SearchLeftEdgebyRightSide_13
    950          		{
    951          			if (rightEdge[i] < rightEdge[i + 1])
   \                     ??SearchLeftEdgebyRightSide_14: (+1)
   \      0x172   0x0038             MOVS     R0,R7
   \      0x174   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0x176   0xF935 0x0010      LDRSH    R0,[R5, R0, LSL #+1]
   \      0x17A   0x0039             MOVS     R1,R7
   \      0x17C   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \      0x17E   0xEB05 0x0141      ADD      R1,R5,R1, LSL #+1
   \      0x182   0xF9B1 0x1002      LDRSH    R1,[R1, #+2]
   \      0x186   0x4288             CMP      R0,R1
   \      0x188   0xDA08             BGE.N    ??SearchLeftEdgebyRightSide_15
    952          			{ rightEdge[i] = rightEdge[i + 1]; }
   \      0x18A   0x0038             MOVS     R0,R7
   \      0x18C   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0x18E   0xEB05 0x0040      ADD      R0,R5,R0, LSL #+1
   \      0x192   0x8840             LDRH     R0,[R0, #+2]
   \      0x194   0x0039             MOVS     R1,R7
   \      0x196   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \      0x198   0xF825 0x0011      STRH     R0,[R5, R1, LSL #+1]
    953          			leftEdge[i] = rightEdge[i] - width_templ[i];
   \                     ??SearchLeftEdgebyRightSide_15: (+1)
   \      0x19C   0x....'....        LDR.W    R8,??DataTable15
   \      0x1A0   0x0038             MOVS     R0,R7
   \      0x1A2   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0x1A4   0xF835 0x1010      LDRH     R1,[R5, R0, LSL #+1]
   \      0x1A8   0x....             LDR.N    R0,??DataTable15_3
   \      0x1AA   0x003A             MOVS     R2,R7
   \      0x1AC   0xB212             SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
   \      0x1AE   0xF830 0x0012      LDRH     R0,[R0, R2, LSL #+1]
   \      0x1B2   0x1A09             SUBS     R1,R1,R0
   \      0x1B4   0x0038             MOVS     R0,R7
   \      0x1B6   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0x1B8   0xF828 0x1010      STRH     R1,[R8, R0, LSL #+1]
    954          			leftEdge[i] = Max(IMG_LEFT, leftEdge[i]);
   \      0x1BC   0x0038             MOVS     R0,R7
   \      0x1BE   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0x1C0   0xF938 0x1010      LDRSH    R1,[R8, R0, LSL #+1]
   \      0x1C4   0x2001             MOVS     R0,#+1
   \      0x1C6   0x....'....        BL       Max
   \      0x1CA   0x0039             MOVS     R1,R7
   \      0x1CC   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \      0x1CE   0xF828 0x0011      STRH     R0,[R8, R1, LSL #+1]
    955          			if (leftEdge[i] < col_buf && i < IMG_BOTTOM)
   \      0x1D2   0x0038             MOVS     R0,R7
   \      0x1D4   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0x1D6   0xF938 0x0010      LDRSH    R0,[R8, R0, LSL #+1]
   \      0x1DA   0x0031             MOVS     R1,R6
   \      0x1DC   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \      0x1DE   0x4288             CMP      R0,R1
   \      0x1E0   0xDA07             BGE.N    ??SearchLeftEdgebyRightSide_16
   \      0x1E2   0x0038             MOVS     R0,R7
   \      0x1E4   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0x1E6   0x2845             CMP      R0,#+69
   \      0x1E8   0xDA03             BGE.N    ??SearchLeftEdgebyRightSide_16
    956          			{ leftEdge[i] = col_buf; }
   \      0x1EA   0x0038             MOVS     R0,R7
   \      0x1EC   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0x1EE   0xF828 0x6010      STRH     R6,[R8, R0, LSL #+1]
    957          			col_buf = leftEdge[i];
   \                     ??SearchLeftEdgebyRightSide_16: (+1)
   \      0x1F2   0x0038             MOVS     R0,R7
   \      0x1F4   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0x1F6   0xF938 0x6010      LDRSH    R6,[R8, R0, LSL #+1]
    958          		}
   \      0x1FA   0x1E7F             SUBS     R7,R7,#+1
   \                     ??SearchLeftEdgebyRightSide_13: (+1)
   \      0x1FC   0x0038             MOVS     R0,R7
   \      0x1FE   0xF9B4 0x1000      LDRSH    R1,[R4, #+0]
   \      0x202   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0x204   0x4288             CMP      R0,R1
   \      0x206   0xDAB4             BGE.N    ??SearchLeftEdgebyRightSide_14
    959          	}
    960          	for (i = IMG_BOTTOM; i >= row_right_end; i--)
   \                     ??SearchLeftEdgebyRightSide_11: (+1)
   \      0x208   0x2145             MOVS     R1,#+69
   \      0x20A   0xE000             B.N      ??SearchLeftEdgebyRightSide_17
   \                     ??SearchLeftEdgebyRightSide_18: (+1)
   \      0x20C   0x1E49             SUBS     R1,R1,#+1
   \                     ??SearchLeftEdgebyRightSide_17: (+1)
   \      0x20E   0x0008             MOVS     R0,R1
   \      0x210   0xF9B4 0x2000      LDRSH    R2,[R4, #+0]
   \      0x214   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0x216   0x4290             CMP      R0,R2
   \      0x218   0xDB10             BLT.N    ??SearchLeftEdgebyRightSide_19
    961          	{
    962          		if (rightEdge[i] - leftEdge[i] <= 20)
   \      0x21A   0x0008             MOVS     R0,R1
   \      0x21C   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0x21E   0xF935 0x2010      LDRSH    R2,[R5, R0, LSL #+1]
   \      0x222   0x....             LDR.N    R0,??DataTable15
   \      0x224   0x000B             MOVS     R3,R1
   \      0x226   0xB21B             SXTH     R3,R3            ;; SignExt  R3,R3,#+16,#+16
   \      0x228   0xF930 0x0013      LDRSH    R0,[R0, R3, LSL #+1]
   \      0x22C   0x1A12             SUBS     R2,R2,R0
   \      0x22E   0x2A15             CMP      R2,#+21
   \      0x230   0xDAEC             BGE.N    ??SearchLeftEdgebyRightSide_18
    963          		{
    964          			row_right_end = i + 1;
   \      0x232   0x1C48             ADDS     R0,R1,#+1
   \      0x234   0x8020             STRH     R0,[R4, #+0]
    965          			row_left_end = i + 1;
   \      0x236   0x1C49             ADDS     R1,R1,#+1
   \      0x238   0x....             LDR.N    R0,??DataTable15_5
   \      0x23A   0x8001             STRH     R1,[R0, #+0]
    966          			break;
    967          		}
    968          	}
    969          
    970          	row_end_center = Max(row_left_end, row_right_end);
   \                     ??SearchLeftEdgebyRightSide_19: (+1)
   \      0x23C   0xF9B4 0x1000      LDRSH    R1,[R4, #+0]
   \      0x240   0x....             LDR.N    R0,??DataTable15_5
   \      0x242   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \      0x246   0x....'....        BL       Max
   \      0x24A   0x....             LDR.N    R1,??DataTable15_9
   \      0x24C   0x8008             STRH     R0,[R1, #+0]
    971          }
   \      0x24E   0xE8BD 0x81FF      POP      {R0-R8,PC}       ;; return
    972          //计算拐点角度，拟合权重比

   \                                 In section .text, align 2, keep-with-next
    973          int16 OffSetEdgeSub(int16 beginrow,int16 endrow,int16 p[])
    974          {
   \                     OffSetEdgeSub: (+1)
   \        0x0   0xE92D 0x43F8      PUSH     {R3-R9,LR}
   \        0x4   0x0004             MOVS     R4,R0
   \        0x6   0x0015             MOVS     R5,R2
    975          	int16 upward = 0;
   \        0x8   0x2000             MOVS     R0,#+0
    976          	int16 len = 3;
   \        0xA   0x2603             MOVS     R6,#+3
    977          	int16 sum = 0;
   \        0xC   0x2700             MOVS     R7,#+0
    978          	int16 avg = 0;
   \        0xE   0x2000             MOVS     R0,#+0
    979          
    980          	upward = beginrow - len;
   \       0x10   0xEBB4 0x0806      SUBS     R8,R4,R6
    981          	if (upward < endrow)
   \       0x14   0x4640             MOV      R0,R8
   \       0x16   0x000A             MOVS     R2,R1
   \       0x18   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \       0x1A   0xB212             SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
   \       0x1C   0x4290             CMP      R0,R2
   \       0x1E   0xDA07             BGE.N    ??OffSetEdgeSub_0
    982          	{
    983          		upward = endrow;
   \       0x20   0x4688             MOV      R8,R1
    984          		len = beginrow - endrow;
   \       0x22   0x1A61             SUBS     R1,R4,R1
   \       0x24   0x000E             MOVS     R6,R1
    985          		if(len < 1)
   \       0x26   0x0030             MOVS     R0,R6
   \       0x28   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \       0x2A   0x2801             CMP      R0,#+1
   \       0x2C   0xDA00             BGE.N    ??OffSetEdgeSub_0
    986          		{
    987          			len = 1;
   \       0x2E   0x2601             MOVS     R6,#+1
    988          		}
    989          	}
    990          	int16 row;
    991          	for (row = beginrow; row >= upward; row--)
   \                     ??OffSetEdgeSub_0: (+1)
   \       0x30   0x46A1             MOV      R9,R4
   \       0x32   0xE00E             B.N      ??OffSetEdgeSub_1
    992          	{
    993          		sum += my_abs(p[row] - p[beginrow]);
   \                     ??OffSetEdgeSub_2: (+1)
   \       0x34   0x4648             MOV      R0,R9
   \       0x36   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \       0x38   0xF835 0x0010      LDRH     R0,[R5, R0, LSL #+1]
   \       0x3C   0x0021             MOVS     R1,R4
   \       0x3E   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \       0x40   0xF835 0x1011      LDRH     R1,[R5, R1, LSL #+1]
   \       0x44   0x1A40             SUBS     R0,R0,R1
   \       0x46   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \       0x48   0x....'....        BL       my_abs
   \       0x4C   0x19C7             ADDS     R7,R0,R7
    994          	}
   \       0x4E   0xF1B9 0x0901      SUBS     R9,R9,#+1
   \                     ??OffSetEdgeSub_1: (+1)
   \       0x52   0x4648             MOV      R0,R9
   \       0x54   0x4641             MOV      R1,R8
   \       0x56   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \       0x58   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \       0x5A   0x4288             CMP      R0,R1
   \       0x5C   0xDAEA             BGE.N    ??OffSetEdgeSub_2
    995          
    996          	avg = (int16)(sum * 1.0f/ len);
   \       0x5E   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \       0x60   0x0038             MOVS     R0,R7
   \       0x62   0x....'....        BL       __aeabi_i2f
   \       0x66   0xF05F 0x517E      MOVS     R1,#+1065353216
   \       0x6A   0x....'....        BL       __aeabi_fmul
   \       0x6E   0x0005             MOVS     R5,R0
   \       0x70   0xB236             SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
   \       0x72   0x0030             MOVS     R0,R6
   \       0x74   0x....'....        BL       __aeabi_i2f
   \       0x78   0x0001             MOVS     R1,R0
   \       0x7A   0x0028             MOVS     R0,R5
   \       0x7C   0x....'....        BL       __aeabi_fdiv
   \       0x80   0x....'....        BL       __aeabi_f2iz
    997          	if (avg < 1)
   \       0x84   0x0001             MOVS     R1,R0
   \       0x86   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \       0x88   0x2901             CMP      R1,#+1
   \       0x8A   0xDA00             BGE.N    ??OffSetEdgeSub_3
    998          	{
    999          		avg = 1;
   \       0x8C   0x2001             MOVS     R0,#+1
   1000          	}
   1001          
   1002          	return beginrow + avg;
   \                     ??OffSetEdgeSub_3: (+1)
   \       0x8E   0x1904             ADDS     R4,R0,R4
   \       0x90   0x0020             MOVS     R0,R4
   \       0x92   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \       0x94   0xE8BD 0x83F2      POP      {R1,R4-R9,PC}    ;; return
   1003          }
   1004          //十字判定

   \                                 In section .text, align 2, keep-with-next
   1005          void JudgeCrossroad(void)
   1006          {
   1007          }
   \                     JudgeCrossroad: (+1)
   \        0x0   0x4770             BX       LR               ;; return
   1008          //边缘是否符合直道特征

   \                                 In section .text, align 2, keep-with-next
   1009          uint8 isEdgeStraight(uint8 dir)
   1010          {
   1011            return 0;
   \                     isEdgeStraight: (+1)
   \        0x0   0x2000             MOVS     R0,#+0
   \        0x2   0x4770             BX       LR               ;; return
   1012          }
   1013          //坡道判定

   \                                 In section .text, align 2, keep-with-next
   1014          uint8 isRamp()
   1015          {
   1016            return 0;
   \                     isRamp: (+1)
   \        0x0   0x2000             MOVS     R0,#+0
   \        0x2   0x4770             BX       LR               ;; return
   1017          }
   1018          //坡道标志位

   \                                 In section .text, align 2, keep-with-next
   1019          void Ramp_Flag(void)
   1020          {
   1021          }
   \                     Ramp_Flag: (+1)
   \        0x0   0x4770             BX       LR               ;; return
   1022          //圆环预判

   \                                 In section .text, align 2, keep-with-next
   1023          uint8 JudgePreInRing(uint8 dir)
   1024          {
   1025            return 0;
   \                     JudgePreInRing: (+1)
   \        0x0   0x2000             MOVS     R0,#+0
   \        0x2   0x4770             BX       LR               ;; return
   1026          }
   1027          //圆环预补线

   \                                 In section .text, align 2, keep-with-next
   1028          void preInRing(uint8 dir)
   1029          {
   1030          }
   \                     preInRing: (+1)
   \        0x0   0x4770             BX       LR               ;; return
   1031          /*
   1032           *  重新修改边缘
   1033           *  根据拐点 向上矫正边缘
   1034           *
   1035           */

   \                                 In section .text, align 2, keep-with-next
   1036          void ResetEdge(void)
   1037          {
   1038          }
   \                     ResetEdge: (+1)
   \        0x0   0x4770             BX       LR               ;; return
   1039          
   1040          //圆环标志位切换

   \                                 In section .text, align 2, keep-with-next
   1041          void ring_flag(void)
   1042          {
   1043          }
   \                     ring_flag: (+1)
   \        0x0   0x4770             BX       LR               ;; return
   1044          
   1045          //圆环补线

   \                                 In section .text, align 2, keep-with-next
   1046          void InRing(void)
   1047          {
   1048          }
   \                     InRing: (+1)
   \        0x0   0x4770             BX       LR               ;; return
   1049          //边缘突变比例查找内跳变，高度差查找外跳变 采用奇偶顺序查找，识别凹凸区域，返回值：权重

   \                                 In section .text, align 4, keep-with-next
   1050          int16 EdgeIrregular()
   1051          {
   \                     EdgeIrregular: (+1)
   \        0x0   0xE92D 0x4FFE      PUSH     {R1-R11,LR}
   1052          
   1053          	int16 sum_left = 0;
   \        0x4   0xF05F 0x0800      MOVS     R8,#+0
   1054          	int16 sum_right = 0;
   \        0x8   0x2400             MOVS     R4,#+0
   1055          
   1056          	int16 heightbuf = 0;
   \        0xA   0x2000             MOVS     R0,#+0
   1057          	int16 widthbuf = 0;
   \        0xC   0x2000             MOVS     R0,#+0
   1058          
   1059          	int16 range_width_left = 0;
   \        0xE   0x2000             MOVS     R0,#+0
   \       0x10   0xF8AD 0x0008      STRH     R0,[SP, #+8]
   1060          	int16 range_height_left = 0;
   \       0x14   0x2000             MOVS     R0,#+0
   \       0x16   0xF8AD 0x0002      STRH     R0,[SP, #+2]
   1061          
   1062          	int16 range_width_right = 0;
   \       0x1A   0x2000             MOVS     R0,#+0
   \       0x1C   0xF8AD 0x0006      STRH     R0,[SP, #+6]
   1063          	int16 range_height_right = 0;
   \       0x20   0x2000             MOVS     R0,#+0
   \       0x22   0xF8AD 0x0000      STRH     R0,[SP, #+0]
   1064          
   1065          	uint8 first_search_finished_left = 0;
   \       0x26   0x2000             MOVS     R0,#+0
   \       0x28   0xF88D 0x0005      STRB     R0,[SP, #+5]
   1066          	uint8 first_search_finished_right = 0;
   \       0x2C   0x2000             MOVS     R0,#+0
   \       0x2E   0xF88D 0x0004      STRB     R0,[SP, #+4]
   1067          
   1068          	int16 shape_left = -1;//concave-convex
   \       0x32   0xF05F 0x37FF      MOVS     R7,#-1
   1069          	int16 shape_right = -1;//0 代表凹  1代表凸
   \       0x36   0xF05F 0x35FF      MOVS     R5,#-1
   1070                  
   1071                  //======================滤波======================//
   1072          	if (row_left_begin <= 40 && row_right_begin <= 40)
   \       0x3A   0xF8DF 0x0DDC      LDR.W    R0,??EdgeIrregular_0
   \       0x3E   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \       0x42   0x2829             CMP      R0,#+41
   \       0x44   0xDA08             BGE.N    ??EdgeIrregular_2
   \       0x46   0xF8DF 0x0D80      LDR.W    R0,??EdgeIrregular_1
   \       0x4A   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \       0x4E   0x2829             CMP      R0,#+41
   \       0x50   0xDA02             BGE.N    ??EdgeIrregular_2
   1073          	{
   1074          		return 0;
   \       0x52   0x2000             MOVS     R0,#+0
   \       0x54   0xF001 0xB8DD      B.W      ??EdgeIrregular_3
   1075          	}
   1076                  if(row_left_begin >= 69 && row_right_begin >= 69)
   \                     ??EdgeIrregular_2: (+1)
   \       0x58   0xF8DF 0x0DBC      LDR.W    R0,??EdgeIrregular_0
   \       0x5C   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \       0x60   0x2845             CMP      R0,#+69
   \       0x62   0xDB08             BLT.N    ??EdgeIrregular_4
   \       0x64   0xF8DF 0x0D60      LDR.W    R0,??EdgeIrregular_1
   \       0x68   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \       0x6C   0x2845             CMP      R0,#+69
   \       0x6E   0xDB02             BLT.N    ??EdgeIrregular_4
   1077                  {
   1078                          return 0;
   \       0x70   0x2000             MOVS     R0,#+0
   \       0x72   0xF001 0xB8CE      B.W      ??EdgeIrregular_3
   1079                  }
   1080                  
   1081          	int16 i, j;
   1082                  
   1083                  for (i = IMG_BOTTOM; i >= FWD_45CM; i--)
   \                     ??EdgeIrregular_4: (+1)
   \       0x76   0x2145             MOVS     R1,#+69
   \       0x78   0xE000             B.N      ??EdgeIrregular_5
   \                     ??EdgeIrregular_6: (+1)
   \       0x7A   0x1E49             SUBS     R1,R1,#+1
   \                     ??EdgeIrregular_5: (+1)
   \       0x7C   0x0008             MOVS     R0,R1
   \       0x7E   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \       0x80   0x281A             CMP      R0,#+26
   \       0x82   0xDB25             BLT.N    ??EdgeIrregular_7
   1084                  {
   1085                    if (i >= row_left_end && i >= row_right_end)
   \       0x84   0x0008             MOVS     R0,R1
   \       0x86   0xF8DF 0x2D44      LDR.W    R2,??EdgeIrregular_1+0x4
   \       0x8A   0xF9B2 0x2000      LDRSH    R2,[R2, #+0]
   \       0x8E   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \       0x90   0x4290             CMP      R0,R2
   \       0x92   0xDBF2             BLT.N    ??EdgeIrregular_6
   \       0x94   0x0008             MOVS     R0,R1
   \       0x96   0xF8DF 0x2D38      LDR.W    R2,??EdgeIrregular_1+0x8
   \       0x9A   0xF9B2 0x2000      LDRSH    R2,[R2, #+0]
   \       0x9E   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \       0xA0   0x4290             CMP      R0,R2
   \       0xA2   0xDBEA             BLT.N    ??EdgeIrregular_6
   1086                    {
   1087                      if (rightEdge[i] - leftEdge[i] <= width_templ[IMG_TOP])
   \       0xA4   0xF8DF 0x0D2C      LDR.W    R0,??EdgeIrregular_1+0xC
   \       0xA8   0xF9B0 0x2014      LDRSH    R2,[R0, #+20]
   \       0xAC   0xF8DF 0x0D28      LDR.W    R0,??EdgeIrregular_1+0x10
   \       0xB0   0x000B             MOVS     R3,R1
   \       0xB2   0xB21B             SXTH     R3,R3            ;; SignExt  R3,R3,#+16,#+16
   \       0xB4   0xF930 0x3013      LDRSH    R3,[R0, R3, LSL #+1]
   \       0xB8   0xF8DF 0x0D20      LDR.W    R0,??EdgeIrregular_1+0x14
   \       0xBC   0x000E             MOVS     R6,R1
   \       0xBE   0xB236             SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
   \       0xC0   0xF930 0x0016      LDRSH    R0,[R0, R6, LSL #+1]
   \       0xC4   0x1A1B             SUBS     R3,R3,R0
   \       0xC6   0x429A             CMP      R2,R3
   \       0xC8   0xDBD7             BLT.N    ??EdgeIrregular_6
   1088                      {
   1089                        return 0;
   \       0xCA   0x2000             MOVS     R0,#+0
   \       0xCC   0xF001 0xB8A1      B.W      ??EdgeIrregular_3
   1090                      }
   1091                    }
   1092                  }
   1093                  
   1094                  if (row_left_end < FWD_45CM && row_right_end < FWD_45CM)
   \                     ??EdgeIrregular_7: (+1)
   \       0xD0   0xF8DF 0x0CF8      LDR.W    R0,??EdgeIrregular_1+0x4
   \       0xD4   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \       0xD8   0x281A             CMP      R0,#+26
   \       0xDA   0xDA2C             BGE.N    ??EdgeIrregular_8
   \       0xDC   0xF8DF 0x1CF0      LDR.W    R1,??EdgeIrregular_1+0x8
   \       0xE0   0xF9B1 0x0000      LDRSH    R0,[R1, #+0]
   \       0xE4   0x281A             CMP      R0,#+26
   \       0xE6   0xDA26             BGE.N    ??EdgeIrregular_8
   1095                  {
   1096                    for (i = FWD_45CM; i >= IMG_TOP; i--)
   \       0xE8   0x221A             MOVS     R2,#+26
   \       0xEA   0xE000             B.N      ??EdgeIrregular_9
   \                     ??EdgeIrregular_10: (+1)
   \       0xEC   0x1E52             SUBS     R2,R2,#+1
   \                     ??EdgeIrregular_9: (+1)
   \       0xEE   0x0010             MOVS     R0,R2
   \       0xF0   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \       0xF2   0x280A             CMP      R0,#+10
   \       0xF4   0xDB1F             BLT.N    ??EdgeIrregular_8
   1097                    {
   1098                      if (i >= row_left_end && i >= row_right_end)
   \       0xF6   0x0010             MOVS     R0,R2
   \       0xF8   0xF8DF 0x3CD0      LDR.W    R3,??EdgeIrregular_1+0x4
   \       0xFC   0xF9B3 0x3000      LDRSH    R3,[R3, #+0]
   \      0x100   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0x102   0x4298             CMP      R0,R3
   \      0x104   0xDBF2             BLT.N    ??EdgeIrregular_10
   \      0x106   0x0010             MOVS     R0,R2
   \      0x108   0xF9B1 0x3000      LDRSH    R3,[R1, #+0]
   \      0x10C   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0x10E   0x4298             CMP      R0,R3
   \      0x110   0xDBEC             BLT.N    ??EdgeIrregular_10
   1099                      {
   1100                        if (rightEdge[i] - leftEdge[i] >= 150)
   \      0x112   0xF8DF 0x0CC4      LDR.W    R0,??EdgeIrregular_1+0x10
   \      0x116   0x0013             MOVS     R3,R2
   \      0x118   0xB21B             SXTH     R3,R3            ;; SignExt  R3,R3,#+16,#+16
   \      0x11A   0xF930 0x3013      LDRSH    R3,[R0, R3, LSL #+1]
   \      0x11E   0xF8DF 0x0CBC      LDR.W    R0,??EdgeIrregular_1+0x14
   \      0x122   0x0016             MOVS     R6,R2
   \      0x124   0xB236             SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
   \      0x126   0xF930 0x0016      LDRSH    R0,[R0, R6, LSL #+1]
   \      0x12A   0x1A1B             SUBS     R3,R3,R0
   \      0x12C   0x2B96             CMP      R3,#+150
   \      0x12E   0xDBDD             BLT.N    ??EdgeIrregular_10
   1101                        {
   1102                          return 0;
   \      0x130   0x2000             MOVS     R0,#+0
   \      0x132   0xF001 0xB86E      B.W      ??EdgeIrregular_3
   1103                        }
   1104                      }
   1105                    }
   1106                  }
   1107                  //======================滤波======================//
   1108                  
   1109                  
   1110          	/**********************************************开始单边检测**********************************************/
   1111          	for (i = IMG_BOTTOM; i >= Max(FWD_40CM,row_left_end); i--)
   \                     ??EdgeIrregular_8: (+1)
   \      0x136   0x2645             MOVS     R6,#+69
   \      0x138   0xE04C             B.N      ??EdgeIrregular_11
   1112          	{
   1113          		if (0 == first_search_finished_left)//距离限幅
   1114          		{
   1115          			if (i > row_left_end && i <= row_left_begin)
   1116          			{
   1117          				heightbuf = (i) - (get_height(i, leftEdge[i], IMG_TOP));
   1118          				widthbuf = leftEdge[i] - leftEdge[i - 1];
   1119          				if (widthbuf <= -CAR_JOIN_templ[i] && my_abs(widthbuf) <= CAR_JOIN_templ[i] + CAR_JOIN_templ[i])//宽度限幅
   1120          				{
   1121          					range_width_left = leftEdge[i];
   1122          					range_height_left = i;
   1123          					shape_left = 0;
   1124          					first_search_finished_left = 1;
   1125          					sum_left++;
   1126          				}
   1127          				else if (heightbuf >= 3 && heightbuf <= CAR_JOIN_templ[i] + CAR_JOIN_templ[i])//长度限幅
   1128          				{
   1129          					for (j = i; j >= Max(i - 3, row_left_end); j--)//向上查找
   1130          					{
   1131          						if (leftEdge[j] < leftEdge[i] && my_abs(leftEdge[j] - leftEdge[i]) <= CAR_JOIN_templ[i] + CAR_JOIN_templ[i])
   1132          						{
   1133          							shape_left = 1;
   1134          							range_width_left = leftEdge[i];
   1135          							range_height_left = i;
   1136          							first_search_finished_left = 1;
   1137          							sum_left++;
   1138          							break;
   1139          						}
   1140          					}
   1141          				}//else if
   1142          			}//if
   1143          		}
   1144          
   1145          		if (1 == shape_left)//凸找凹
   1146          		{
   1147          			if (i > row_left_end && i <= row_left_begin)
   1148          			{
   1149          				widthbuf = leftEdge[i] - leftEdge[i - 1];
   1150          				if (1 == JudgeNumInterval(my_abs(range_width_left - leftEdge[i]),(CAR_JOIN_templ[range_height_left] * CAR_JOIN_templ[range_height_left]),CAR_JOIN_templ[range_height_left]) && 1 == JudgeNumInterval(my_abs(range_height_left - i),(CAR_JOIN_templ[range_height_left] * CAR_JOIN_templ[range_height_left]),CAR_JOIN_templ[range_height_left]))
   1151          				{
   1152          					if (widthbuf <= -CAR_JOIN_templ[i] && my_abs(widthbuf) <= CAR_JOIN_templ[i] + CAR_JOIN_templ[i])
   1153          					{
   1154          						shape_left = 0;
   1155          						range_width_left = leftEdge[i];
   1156          						range_height_left = i;
   1157          						sum_left++;
   1158          						break;
   1159          					}
   1160          				}
   1161          			}
   1162          
   1163          		}
   1164          		else if (0 == shape_left)//凹找凸
   1165          		{
   1166          			if (i > row_left_end && i <= row_left_begin)
   1167          			{
   1168          				heightbuf = (i) - (get_height(i, leftEdge[i], IMG_TOP));
   1169          				if (1 == JudgeNumInterval(my_abs(range_width_left - leftEdge[i]),((CAR_JOIN_templ[range_height_left] + 1) * (CAR_JOIN_templ[range_height_left] + 1)),CAR_JOIN_templ[range_height_left]) && 1 == JudgeNumInterval(my_abs(range_height_left - i),(CAR_JOIN_templ[range_height_left] * CAR_JOIN_templ[range_height_left]),CAR_JOIN_templ[range_height_left]))
   1170          				{
   1171          
   1172          					if (heightbuf >= CAR_JOIN_templ[i] - 1 && heightbuf <= CAR_JOIN_templ[i] + 2)
   1173          					{
   1174          						for (j = i; j >= Max(i - 3, row_left_end); j--)
   \                     ??EdgeIrregular_12: (+1)
   \      0x13A   0xF1BA 0x0A01      SUBS     R10,R10,#+1
   \                     ??EdgeIrregular_13: (+1)
   \      0x13E   0xF8DF 0x0C8C      LDR.W    R0,??EdgeIrregular_1+0x4
   \      0x142   0xF9B0 0x1000      LDRSH    R1,[R0, #+0]
   \      0x146   0x1EF0             SUBS     R0,R6,#+3
   \      0x148   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0x14A   0x....'....        BL       Max
   \      0x14E   0x4651             MOV      R1,R10
   \      0x150   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \      0x152   0x4281             CMP      R1,R0
   \      0x154   0xDB3D             BLT.N    ??EdgeIrregular_14
   1175          						{
   1176          							if (leftEdge[j] < leftEdge[i] && my_abs(leftEdge[j] - leftEdge[i]) <= CAR_JOIN_templ[i] && my_abs(leftEdge[i] - leftEdge[i + 1]) <= CAR_JOIN_templ[i])
   \      0x156   0x4650             MOV      R0,R10
   \      0x158   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0x15A   0xF939 0x0010      LDRSH    R0,[R9, R0, LSL #+1]
   \      0x15E   0x0031             MOVS     R1,R6
   \      0x160   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \      0x162   0xF939 0x1011      LDRSH    R1,[R9, R1, LSL #+1]
   \      0x166   0x4288             CMP      R0,R1
   \      0x168   0xDAE7             BGE.N    ??EdgeIrregular_12
   \      0x16A   0x4650             MOV      R0,R10
   \      0x16C   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0x16E   0xF839 0x0010      LDRH     R0,[R9, R0, LSL #+1]
   \      0x172   0x0031             MOVS     R1,R6
   \      0x174   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \      0x176   0xF839 0x1011      LDRH     R1,[R9, R1, LSL #+1]
   \      0x17A   0x1A40             SUBS     R0,R0,R1
   \      0x17C   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0x17E   0x....'....        BL       my_abs
   \      0x182   0xF8DF 0xBC5C      LDR.W    R11,??EdgeIrregular_1+0x18
   \      0x186   0x0031             MOVS     R1,R6
   \      0x188   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \      0x18A   0xF93B 0x1011      LDRSH    R1,[R11, R1, LSL #+1]
   \      0x18E   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0x190   0x4281             CMP      R1,R0
   \      0x192   0xDBD2             BLT.N    ??EdgeIrregular_12
   \      0x194   0x0030             MOVS     R0,R6
   \      0x196   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0x198   0xF839 0x0010      LDRH     R0,[R9, R0, LSL #+1]
   \      0x19C   0x0031             MOVS     R1,R6
   \      0x19E   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \      0x1A0   0xEB09 0x0141      ADD      R1,R9,R1, LSL #+1
   \      0x1A4   0x8849             LDRH     R1,[R1, #+2]
   \      0x1A6   0x1A40             SUBS     R0,R0,R1
   \      0x1A8   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0x1AA   0x....'....        BL       my_abs
   \      0x1AE   0x0031             MOVS     R1,R6
   \      0x1B0   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \      0x1B2   0xF93B 0x1011      LDRSH    R1,[R11, R1, LSL #+1]
   \      0x1B6   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0x1B8   0x4281             CMP      R1,R0
   \      0x1BA   0xDBBE             BLT.N    ??EdgeIrregular_12
   1177          							{
   1178          								shape_left = 1;
   \      0x1BC   0x2701             MOVS     R7,#+1
   1179          								range_width_left = leftEdge[i];
   \      0x1BE   0x0030             MOVS     R0,R6
   \      0x1C0   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0x1C2   0xF939 0x0010      LDRSH    R0,[R9, R0, LSL #+1]
   \      0x1C6   0xF8AD 0x0008      STRH     R0,[SP, #+8]
   1180          								range_height_left = i;
   \      0x1CA   0xF8AD 0x6002      STRH     R6,[SP, #+2]
   1181          								sum_left++;
   \      0x1CE   0xF118 0x0801      ADDS     R8,R8,#+1
   1182          								break;
   1183          							}
   1184          						}
   \                     ??EdgeIrregular_14: (+1)
   \      0x1D2   0x1E76             SUBS     R6,R6,#+1
   \                     ??EdgeIrregular_11: (+1)
   \      0x1D4   0xF8DF 0x0BF4      LDR.W    R0,??EdgeIrregular_1+0x4
   \      0x1D8   0xF9B0 0x1000      LDRSH    R1,[R0, #+0]
   \      0x1DC   0x201C             MOVS     R0,#+28
   \      0x1DE   0x....'....        BL       Max
   \      0x1E2   0x0031             MOVS     R1,R6
   \      0x1E4   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \      0x1E6   0x4281             CMP      R1,R0
   \      0x1E8   0xF2C0 0x8136      BLT.W    ??EdgeIrregular_15
   \      0x1EC   0xF89D 0x0005      LDRB     R0,[SP, #+5]
   \      0x1F0   0x2800             CMP      R0,#+0
   \      0x1F2   0xF040 0x80AD      BNE.W    ??EdgeIrregular_16
   \      0x1F6   0xF8DF 0x0BD4      LDR.W    R0,??EdgeIrregular_1+0x4
   \      0x1FA   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \      0x1FE   0x0031             MOVS     R1,R6
   \      0x200   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \      0x202   0x4288             CMP      R0,R1
   \      0x204   0xF280 0x80A4      BGE.W    ??EdgeIrregular_16
   \      0x208   0xF8DF 0x0C0C      LDR.W    R0,??EdgeIrregular_0
   \      0x20C   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \      0x210   0x0031             MOVS     R1,R6
   \      0x212   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \      0x214   0x4288             CMP      R0,R1
   \      0x216   0xF2C0 0x809B      BLT.W    ??EdgeIrregular_16
   \      0x21A   0xF8DF 0x9BC0      LDR.W    R9,??EdgeIrregular_1+0x14
   \      0x21E   0x220A             MOVS     R2,#+10
   \      0x220   0x0030             MOVS     R0,R6
   \      0x222   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0x224   0xF939 0x1010      LDRSH    R1,[R9, R0, LSL #+1]
   \      0x228   0x0030             MOVS     R0,R6
   \      0x22A   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0x22C   0x....'....        BL       get_height
   \      0x230   0x4682             MOV      R10,R0
   \      0x232   0xEBB6 0x0A0A      SUBS     R10,R6,R10
   \      0x236   0x0030             MOVS     R0,R6
   \      0x238   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0x23A   0xF839 0x1010      LDRH     R1,[R9, R0, LSL #+1]
   \      0x23E   0x0030             MOVS     R0,R6
   \      0x240   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0x242   0xEB09 0x0040      ADD      R0,R9,R0, LSL #+1
   \      0x246   0xF830 0x0C02      LDRH     R0,[R0, #-2]
   \      0x24A   0x1A08             SUBS     R0,R1,R0
   \      0x24C   0xF8DF 0x1B90      LDR.W    R1,??EdgeIrregular_1+0x18
   \      0x250   0x0032             MOVS     R2,R6
   \      0x252   0xB212             SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
   \      0x254   0xF931 0x1012      LDRSH    R1,[R1, R2, LSL #+1]
   \      0x258   0x4249             RSBS     R1,R1,#+0
   \      0x25A   0x0002             MOVS     R2,R0
   \      0x25C   0xB212             SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
   \      0x25E   0x4291             CMP      R1,R2
   \      0x260   0xDB1F             BLT.N    ??EdgeIrregular_17
   \      0x262   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0x264   0x....'....        BL       my_abs
   \      0x268   0xF8DF 0x1B74      LDR.W    R1,??EdgeIrregular_1+0x18
   \      0x26C   0x0032             MOVS     R2,R6
   \      0x26E   0xB212             SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
   \      0x270   0xF931 0x2012      LDRSH    R2,[R1, R2, LSL #+1]
   \      0x274   0x0033             MOVS     R3,R6
   \      0x276   0xB21B             SXTH     R3,R3            ;; SignExt  R3,R3,#+16,#+16
   \      0x278   0xF931 0x1013      LDRSH    R1,[R1, R3, LSL #+1]
   \      0x27C   0x1889             ADDS     R1,R1,R2
   \      0x27E   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0x280   0x4281             CMP      R1,R0
   \      0x282   0xDB0E             BLT.N    ??EdgeIrregular_17
   \      0x284   0x0030             MOVS     R0,R6
   \      0x286   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0x288   0xF939 0x0010      LDRSH    R0,[R9, R0, LSL #+1]
   \      0x28C   0xF8AD 0x0008      STRH     R0,[SP, #+8]
   \      0x290   0xF8AD 0x6002      STRH     R6,[SP, #+2]
   \      0x294   0x2700             MOVS     R7,#+0
   \      0x296   0x2001             MOVS     R0,#+1
   \      0x298   0xF88D 0x0005      STRB     R0,[SP, #+5]
   \      0x29C   0xF118 0x0801      ADDS     R8,R8,#+1
   \      0x2A0   0xE056             B.N      ??EdgeIrregular_16
   \                     ??EdgeIrregular_17: (+1)
   \      0x2A2   0x4650             MOV      R0,R10
   \      0x2A4   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0x2A6   0x2803             CMP      R0,#+3
   \      0x2A8   0xDB52             BLT.N    ??EdgeIrregular_16
   \      0x2AA   0xF8DF 0x0B34      LDR.W    R0,??EdgeIrregular_1+0x18
   \      0x2AE   0x0031             MOVS     R1,R6
   \      0x2B0   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \      0x2B2   0xF930 0x0011      LDRSH    R0,[R0, R1, LSL #+1]
   \      0x2B6   0xF8DF 0x1B28      LDR.W    R1,??EdgeIrregular_1+0x18
   \      0x2BA   0x0032             MOVS     R2,R6
   \      0x2BC   0xB212             SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
   \      0x2BE   0xF931 0x1012      LDRSH    R1,[R1, R2, LSL #+1]
   \      0x2C2   0x1808             ADDS     R0,R1,R0
   \      0x2C4   0xFA0F 0xFA8A      SXTH     R10,R10          ;; SignExt  R10,R10,#+16,#+16
   \      0x2C8   0x4550             CMP      R0,R10
   \      0x2CA   0xDB41             BLT.N    ??EdgeIrregular_16
   \      0x2CC   0x46B2             MOV      R10,R6
   \      0x2CE   0xE001             B.N      ??EdgeIrregular_18
   \                     ??EdgeIrregular_19: (+1)
   \      0x2D0   0xF1BA 0x0A01      SUBS     R10,R10,#+1
   \                     ??EdgeIrregular_18: (+1)
   \      0x2D4   0xF8DF 0x0AF4      LDR.W    R0,??EdgeIrregular_1+0x4
   \      0x2D8   0xF9B0 0x1000      LDRSH    R1,[R0, #+0]
   \      0x2DC   0x1EF0             SUBS     R0,R6,#+3
   \      0x2DE   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0x2E0   0x....'....        BL       Max
   \      0x2E4   0x4651             MOV      R1,R10
   \      0x2E6   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \      0x2E8   0x4281             CMP      R1,R0
   \      0x2EA   0xDB31             BLT.N    ??EdgeIrregular_16
   \      0x2EC   0x4650             MOV      R0,R10
   \      0x2EE   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0x2F0   0xF939 0x0010      LDRSH    R0,[R9, R0, LSL #+1]
   \      0x2F4   0x0031             MOVS     R1,R6
   \      0x2F6   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \      0x2F8   0xF939 0x1011      LDRSH    R1,[R9, R1, LSL #+1]
   \      0x2FC   0x4288             CMP      R0,R1
   \      0x2FE   0xDAE7             BGE.N    ??EdgeIrregular_19
   \      0x300   0x4650             MOV      R0,R10
   \      0x302   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0x304   0xF839 0x0010      LDRH     R0,[R9, R0, LSL #+1]
   \      0x308   0x0031             MOVS     R1,R6
   \      0x30A   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \      0x30C   0xF839 0x1011      LDRH     R1,[R9, R1, LSL #+1]
   \      0x310   0x1A40             SUBS     R0,R0,R1
   \      0x312   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0x314   0x....'....        BL       my_abs
   \      0x318   0xF8DF 0x1AC4      LDR.W    R1,??EdgeIrregular_1+0x18
   \      0x31C   0x0032             MOVS     R2,R6
   \      0x31E   0xB212             SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
   \      0x320   0xF931 0x2012      LDRSH    R2,[R1, R2, LSL #+1]
   \      0x324   0x0033             MOVS     R3,R6
   \      0x326   0xB21B             SXTH     R3,R3            ;; SignExt  R3,R3,#+16,#+16
   \      0x328   0xF931 0x1013      LDRSH    R1,[R1, R3, LSL #+1]
   \      0x32C   0x1889             ADDS     R1,R1,R2
   \      0x32E   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0x330   0x4281             CMP      R1,R0
   \      0x332   0xDBCD             BLT.N    ??EdgeIrregular_19
   \      0x334   0x2701             MOVS     R7,#+1
   \      0x336   0x0030             MOVS     R0,R6
   \      0x338   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0x33A   0xF939 0x0010      LDRSH    R0,[R9, R0, LSL #+1]
   \      0x33E   0xF8AD 0x0008      STRH     R0,[SP, #+8]
   \      0x342   0xF8AD 0x6002      STRH     R6,[SP, #+2]
   \      0x346   0x2001             MOVS     R0,#+1
   \      0x348   0xF88D 0x0005      STRB     R0,[SP, #+5]
   \      0x34C   0xF118 0x0801      ADDS     R8,R8,#+1
   \                     ??EdgeIrregular_16: (+1)
   \      0x350   0x0038             MOVS     R0,R7
   \      0x352   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0x354   0x2801             CMP      R0,#+1
   \      0x356   0xF040 0x8096      BNE.W    ??EdgeIrregular_20
   \      0x35A   0xF8DF 0x0A70      LDR.W    R0,??EdgeIrregular_1+0x4
   \      0x35E   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \      0x362   0x0031             MOVS     R1,R6
   \      0x364   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \      0x366   0x4288             CMP      R0,R1
   \      0x368   0xF6BF 0xAF33      BGE.W    ??EdgeIrregular_14
   \      0x36C   0xF8DF 0x0AA8      LDR.W    R0,??EdgeIrregular_0
   \      0x370   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \      0x374   0x0031             MOVS     R1,R6
   \      0x376   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \      0x378   0x4288             CMP      R0,R1
   \      0x37A   0xF6FF 0xAF2A      BLT.W    ??EdgeIrregular_14
   \      0x37E   0xF8DF 0x9A5C      LDR.W    R9,??EdgeIrregular_1+0x14
   \      0x382   0x0030             MOVS     R0,R6
   \      0x384   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0x386   0xF839 0x1010      LDRH     R1,[R9, R0, LSL #+1]
   \      0x38A   0x0030             MOVS     R0,R6
   \      0x38C   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0x38E   0xEB09 0x0040      ADD      R0,R9,R0, LSL #+1
   \      0x392   0xF830 0x0C02      LDRH     R0,[R0, #-2]
   \      0x396   0x1A09             SUBS     R1,R1,R0
   \      0x398   0xF8AD 0x100A      STRH     R1,[SP, #+10]
   \      0x39C   0xF8BD 0x0008      LDRH     R0,[SP, #+8]
   \      0x3A0   0x0031             MOVS     R1,R6
   \      0x3A2   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \      0x3A4   0xF839 0x1011      LDRH     R1,[R9, R1, LSL #+1]
   \      0x3A8   0x1A40             SUBS     R0,R0,R1
   \      0x3AA   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0x3AC   0x....'....        BL       my_abs
   \      0x3B0   0xF8DF 0xAA2C      LDR.W    R10,??EdgeIrregular_1+0x18
   \      0x3B4   0xF9BD 0x1002      LDRSH    R1,[SP, #+2]
   \      0x3B8   0xF93A 0x2011      LDRSH    R2,[R10, R1, LSL #+1]
   \      0x3BC   0xF9BD 0x1002      LDRSH    R1,[SP, #+2]
   \      0x3C0   0xF83A 0x1011      LDRH     R1,[R10, R1, LSL #+1]
   \      0x3C4   0xF9BD 0x3002      LDRSH    R3,[SP, #+2]
   \      0x3C8   0xF83A 0x3013      LDRH     R3,[R10, R3, LSL #+1]
   \      0x3CC   0xFB11 0xF103      SMULBB   R1,R1,R3
   \      0x3D0   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \      0x3D2   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0x3D4   0x....'....        BL       JudgeNumInterval
   \      0x3D8   0x2801             CMP      R0,#+1
   \      0x3DA   0xF47F 0xAEFA      BNE.W    ??EdgeIrregular_14
   \      0x3DE   0xF8BD 0x0002      LDRH     R0,[SP, #+2]
   \      0x3E2   0x1B80             SUBS     R0,R0,R6
   \      0x3E4   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0x3E6   0x....'....        BL       my_abs
   \      0x3EA   0xF9BD 0x1002      LDRSH    R1,[SP, #+2]
   \      0x3EE   0xF93A 0x2011      LDRSH    R2,[R10, R1, LSL #+1]
   \      0x3F2   0xF9BD 0x1002      LDRSH    R1,[SP, #+2]
   \      0x3F6   0xF83A 0x1011      LDRH     R1,[R10, R1, LSL #+1]
   \      0x3FA   0xF9BD 0x3002      LDRSH    R3,[SP, #+2]
   \      0x3FE   0xF83A 0x3013      LDRH     R3,[R10, R3, LSL #+1]
   \      0x402   0xFB11 0xF103      SMULBB   R1,R1,R3
   \      0x406   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \      0x408   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0x40A   0x....'....        BL       JudgeNumInterval
   \      0x40E   0x2801             CMP      R0,#+1
   \      0x410   0xF47F 0xAEDF      BNE.W    ??EdgeIrregular_14
   \      0x414   0x0030             MOVS     R0,R6
   \      0x416   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0x418   0xF93A 0x0010      LDRSH    R0,[R10, R0, LSL #+1]
   \      0x41C   0x4240             RSBS     R0,R0,#+0
   \      0x41E   0xF9BD 0x100A      LDRSH    R1,[SP, #+10]
   \      0x422   0x4288             CMP      R0,R1
   \      0x424   0xF6FF 0xAED5      BLT.W    ??EdgeIrregular_14
   \      0x428   0xF9BD 0x000A      LDRSH    R0,[SP, #+10]
   \      0x42C   0x....'....        BL       my_abs
   \      0x430   0x0031             MOVS     R1,R6
   \      0x432   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \      0x434   0xF93A 0x1011      LDRSH    R1,[R10, R1, LSL #+1]
   \      0x438   0x0032             MOVS     R2,R6
   \      0x43A   0xB212             SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
   \      0x43C   0xF93A 0x2012      LDRSH    R2,[R10, R2, LSL #+1]
   \      0x440   0x1851             ADDS     R1,R2,R1
   \      0x442   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0x444   0x4281             CMP      R1,R0
   \      0x446   0xF6FF 0xAEC4      BLT.W    ??EdgeIrregular_14
   \      0x44A   0x2000             MOVS     R0,#+0
   \      0x44C   0x0030             MOVS     R0,R6
   \      0x44E   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0x450   0xF939 0x0010      LDRSH    R0,[R9, R0, LSL #+1]
   \      0x454   0xF118 0x0801      ADDS     R8,R8,#+1
   1185          					}
   1186          				}
   1187          			}//if
   1188          		}//else if
   1189          	}
   1190                  if (sum_left >= 3 && leftEdge[Max(FWD_40CM,row_left_end)] < IMG_COL_CENTER)
   \                     ??EdgeIrregular_15: (+1)
   \      0x458   0x4640             MOV      R0,R8
   \      0x45A   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0x45C   0x2803             CMP      R0,#+3
   \      0x45E   0xF2C0 0x8099      BLT.W    ??EdgeIrregular_21
   \      0x462   0xF8DF 0x0968      LDR.W    R0,??EdgeIrregular_1+0x4
   \      0x466   0xF9B0 0x1000      LDRSH    R1,[R0, #+0]
   \      0x46A   0x201C             MOVS     R0,#+28
   \      0x46C   0x....'....        BL       Max
   \      0x470   0xF8DF 0x1968      LDR.W    R1,??EdgeIrregular_1+0x14
   \      0x474   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0x476   0xF931 0x0010      LDRSH    R0,[R1, R0, LSL #+1]
   \      0x47A   0x284F             CMP      R0,#+79
   \      0x47C   0xF280 0x808A      BGE.W    ??EdgeIrregular_21
   1191          	{
   1192          		return 199;
   \      0x480   0x20C7             MOVS     R0,#+199
   \      0x482   0xF000 0xBEC6      B.W      ??EdgeIrregular_3
   1193          	}
   \                     ??EdgeIrregular_20: (+1)
   \      0x486   0x0038             MOVS     R0,R7
   \      0x488   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0x48A   0x2800             CMP      R0,#+0
   \      0x48C   0xF47F 0xAEA1      BNE.W    ??EdgeIrregular_14
   \      0x490   0xF8DF 0x0938      LDR.W    R0,??EdgeIrregular_1+0x4
   \      0x494   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \      0x498   0x0031             MOVS     R1,R6
   \      0x49A   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \      0x49C   0x4288             CMP      R0,R1
   \      0x49E   0xF6BF 0xAE98      BGE.W    ??EdgeIrregular_14
   \      0x4A2   0xF8DF 0x0974      LDR.W    R0,??EdgeIrregular_0
   \      0x4A6   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \      0x4AA   0x0031             MOVS     R1,R6
   \      0x4AC   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \      0x4AE   0x4288             CMP      R0,R1
   \      0x4B0   0xF6FF 0xAE8F      BLT.W    ??EdgeIrregular_14
   \      0x4B4   0xF8DF 0x9924      LDR.W    R9,??EdgeIrregular_1+0x14
   \      0x4B8   0x220A             MOVS     R2,#+10
   \      0x4BA   0x0030             MOVS     R0,R6
   \      0x4BC   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0x4BE   0xF939 0x1010      LDRSH    R1,[R9, R0, LSL #+1]
   \      0x4C2   0x0030             MOVS     R0,R6
   \      0x4C4   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0x4C6   0x....'....        BL       get_height
   \      0x4CA   0x4682             MOV      R10,R0
   \      0x4CC   0xEBB6 0x0A0A      SUBS     R10,R6,R10
   \      0x4D0   0xF8BD 0x0008      LDRH     R0,[SP, #+8]
   \      0x4D4   0x0031             MOVS     R1,R6
   \      0x4D6   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \      0x4D8   0xF839 0x1011      LDRH     R1,[R9, R1, LSL #+1]
   \      0x4DC   0x1A40             SUBS     R0,R0,R1
   \      0x4DE   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0x4E0   0x....'....        BL       my_abs
   \      0x4E4   0xF8DF 0x18F8      LDR.W    R1,??EdgeIrregular_1+0x18
   \      0x4E8   0xF9BD 0x2002      LDRSH    R2,[SP, #+2]
   \      0x4EC   0xF931 0x2012      LDRSH    R2,[R1, R2, LSL #+1]
   \      0x4F0   0xF8DF 0x18EC      LDR.W    R1,??EdgeIrregular_1+0x18
   \      0x4F4   0xF9BD 0x3002      LDRSH    R3,[SP, #+2]
   \      0x4F8   0xF831 0x1013      LDRH     R1,[R1, R3, LSL #+1]
   \      0x4FC   0x1C49             ADDS     R1,R1,#+1
   \      0x4FE   0xF8DF 0x38E0      LDR.W    R3,??EdgeIrregular_1+0x18
   \      0x502   0xF9BD 0xC002      LDRSH    R12,[SP, #+2]
   \      0x506   0xF833 0x301C      LDRH     R3,[R3, R12, LSL #+1]
   \      0x50A   0x1C5B             ADDS     R3,R3,#+1
   \      0x50C   0xFB11 0xF103      SMULBB   R1,R1,R3
   \      0x510   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \      0x512   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0x514   0x....'....        BL       JudgeNumInterval
   \      0x518   0x2801             CMP      R0,#+1
   \      0x51A   0xF47F 0xAE5A      BNE.W    ??EdgeIrregular_14
   \      0x51E   0xF8BD 0x0002      LDRH     R0,[SP, #+2]
   \      0x522   0x1B80             SUBS     R0,R0,R6
   \      0x524   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0x526   0x....'....        BL       my_abs
   \      0x52A   0xF8DF 0x18B4      LDR.W    R1,??EdgeIrregular_1+0x18
   \      0x52E   0xF9BD 0x2002      LDRSH    R2,[SP, #+2]
   \      0x532   0xF931 0x2012      LDRSH    R2,[R1, R2, LSL #+1]
   \      0x536   0xF8DF 0x18A8      LDR.W    R1,??EdgeIrregular_1+0x18
   \      0x53A   0xF9BD 0x3002      LDRSH    R3,[SP, #+2]
   \      0x53E   0xF831 0x1013      LDRH     R1,[R1, R3, LSL #+1]
   \      0x542   0xF8DF 0x389C      LDR.W    R3,??EdgeIrregular_1+0x18
   \      0x546   0xF9BD 0xC002      LDRSH    R12,[SP, #+2]
   \      0x54A   0xF833 0x301C      LDRH     R3,[R3, R12, LSL #+1]
   \      0x54E   0xFB11 0xF103      SMULBB   R1,R1,R3
   \      0x552   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \      0x554   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0x556   0x....'....        BL       JudgeNumInterval
   \      0x55A   0x2801             CMP      R0,#+1
   \      0x55C   0xF47F 0xAE39      BNE.W    ??EdgeIrregular_14
   \      0x560   0x4650             MOV      R0,R10
   \      0x562   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0x564   0xF8DF 0x1878      LDR.W    R1,??EdgeIrregular_1+0x18
   \      0x568   0x0032             MOVS     R2,R6
   \      0x56A   0xB212             SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
   \      0x56C   0xF931 0x1012      LDRSH    R1,[R1, R2, LSL #+1]
   \      0x570   0x1E49             SUBS     R1,R1,#+1
   \      0x572   0x4288             CMP      R0,R1
   \      0x574   0xF6FF 0xAE2D      BLT.W    ??EdgeIrregular_14
   \      0x578   0xF8DF 0x0864      LDR.W    R0,??EdgeIrregular_1+0x18
   \      0x57C   0x0031             MOVS     R1,R6
   \      0x57E   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \      0x580   0xF930 0x0011      LDRSH    R0,[R0, R1, LSL #+1]
   \      0x584   0x1C80             ADDS     R0,R0,#+2
   \      0x586   0xFA0F 0xFA8A      SXTH     R10,R10          ;; SignExt  R10,R10,#+16,#+16
   \      0x58A   0x4550             CMP      R0,R10
   \      0x58C   0xF6FF 0xAE21      BLT.W    ??EdgeIrregular_14
   \      0x590   0x46B2             MOV      R10,R6
   \      0x592   0xE5D4             B.N      ??EdgeIrregular_13
   1194          
   1195                  heightbuf = 0;
   \                     ??EdgeIrregular_21: (+1)
   \      0x594   0x2000             MOVS     R0,#+0
   1196                  widthbuf = 0;
   \      0x596   0x2000             MOVS     R0,#+0
   1197                  
   1198          	for (i = IMG_BOTTOM; i >= Max(FWD_40CM,row_right_end); i--)
   \      0x598   0x2645             MOVS     R6,#+69
   \      0x59A   0xE049             B.N      ??EdgeIrregular_22
   1199          	{
   1200          		if (0 == first_search_finished_right)//距离限幅
   1201          		{
   1202          			if (i > row_right_end && i <= row_right_begin)
   1203          			{
   1204          				heightbuf = (i) - (get_height(i, rightEdge[i], IMG_TOP));
   1205          				widthbuf = rightEdge[i] - rightEdge[i - 1];
   1206          				if (widthbuf >= CAR_JOIN_templ[i] && my_abs(widthbuf) <= CAR_JOIN_templ[i] + CAR_JOIN_templ[i])//宽度限幅
   1207          				{
   1208          					range_width_right = rightEdge[i];
   1209          					range_height_right = i;
   1210          					shape_right = 0;
   1211          					first_search_finished_right = 1;
   1212          					sum_right++;
   1213          				}
   1214          				else if (heightbuf >= 3 && heightbuf <= CAR_JOIN_templ[i] + CAR_JOIN_templ[i])//长度限幅
   1215          				{
   1216          					for (j = i; j >= Max(i - 3, row_right_end); j--)
   1217          					{
   1218          						if (rightEdge[j] > rightEdge[i] && my_abs(rightEdge[j] - rightEdge[i]) <= CAR_JOIN_templ[i] + CAR_JOIN_templ[i])
   1219          						{
   1220          							shape_right = 1;
   1221          							range_width_right = rightEdge[i];
   1222          							range_height_right = i;
   1223          							first_search_finished_right = 1;
   1224          							sum_right++;
   1225          							break;
   1226          						}
   1227          					}
   1228          				}//else if
   1229          			}//if
   1230          		}
   1231          
   1232          		if (1 == shape_right)//凸找凹
   1233          		{
   1234          			if (i > row_right_end && i <= row_right_begin)
   1235          			{
   1236          				widthbuf = rightEdge[i] - rightEdge[i - 1];
   1237          				if (1 == JudgeNumInterval(my_abs(range_width_right - rightEdge[i]), (CAR_JOIN_templ[range_height_right] * CAR_JOIN_templ[range_height_right]), CAR_JOIN_templ[range_height_right]) && 1 == JudgeNumInterval(my_abs(range_height_right - i), (CAR_JOIN_templ[range_height_right] * CAR_JOIN_templ[range_height_right]), CAR_JOIN_templ[range_height_right]))
   1238          				{
   1239          					if (widthbuf >= CAR_JOIN_templ[i] && my_abs(widthbuf) <= CAR_JOIN_templ[i] + CAR_JOIN_templ[i])
   1240          					{
   1241          						shape_right = 0;
   1242          						range_width_right = rightEdge[i];
   1243          						range_height_right = i;
   1244          						sum_right++;
   1245          						break;
   1246          					}
   1247          				}
   1248          			}
   1249          		}
   1250          		else if (0 == shape_right)//凹找凸
   1251          		{
   1252          			if (i > row_right_end && i <= row_right_begin)
   1253          			{
   1254          				heightbuf = (i) - (get_height(i, rightEdge[i], IMG_TOP));
   1255          				if (1 == JudgeNumInterval(my_abs(range_width_right - rightEdge[i]), ((CAR_JOIN_templ[range_height_right] + 1) * (CAR_JOIN_templ[range_height_right] + 1)), CAR_JOIN_templ[range_height_right]) && 1 == JudgeNumInterval(my_abs(range_height_right - i), (CAR_JOIN_templ[range_height_right] * CAR_JOIN_templ[range_height_right]), CAR_JOIN_templ[range_height_right]))
   1256          				{
   1257          					if (heightbuf >= CAR_JOIN_templ[i] - 1 && heightbuf <= CAR_JOIN_templ[i] + 2)
   1258          					{
   1259          						for (j = i; j >= Max(i - 3, row_right_end); j--)
   \                     ??EdgeIrregular_23: (+1)
   \      0x59C   0xF1B9 0x0901      SUBS     R9,R9,#+1
   \                     ??EdgeIrregular_24: (+1)
   \      0x5A0   0xF8DF 0x082C      LDR.W    R0,??EdgeIrregular_1+0x8
   \      0x5A4   0xF9B0 0x1000      LDRSH    R1,[R0, #+0]
   \      0x5A8   0x1EF0             SUBS     R0,R6,#+3
   \      0x5AA   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0x5AC   0x....'....        BL       Max
   \      0x5B0   0x4649             MOV      R1,R9
   \      0x5B2   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \      0x5B4   0x4281             CMP      R1,R0
   \      0x5B6   0xDB3A             BLT.N    ??EdgeIrregular_25
   1260          						{
   1261          							if (rightEdge[j] > rightEdge[i] && my_abs(rightEdge[j] - rightEdge[i]) <= CAR_JOIN_templ[i] && my_abs(rightEdge[i] - rightEdge[i + 1]) <= CAR_JOIN_templ[i])
   \      0x5B8   0x0030             MOVS     R0,R6
   \      0x5BA   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0x5BC   0xF937 0x0010      LDRSH    R0,[R7, R0, LSL #+1]
   \      0x5C0   0x4649             MOV      R1,R9
   \      0x5C2   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \      0x5C4   0xF937 0x1011      LDRSH    R1,[R7, R1, LSL #+1]
   \      0x5C8   0x4288             CMP      R0,R1
   \      0x5CA   0xDAE7             BGE.N    ??EdgeIrregular_23
   \      0x5CC   0x4648             MOV      R0,R9
   \      0x5CE   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0x5D0   0xF837 0x0010      LDRH     R0,[R7, R0, LSL #+1]
   \      0x5D4   0x0031             MOVS     R1,R6
   \      0x5D6   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \      0x5D8   0xF837 0x1011      LDRH     R1,[R7, R1, LSL #+1]
   \      0x5DC   0x1A40             SUBS     R0,R0,R1
   \      0x5DE   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0x5E0   0x....'....        BL       my_abs
   \      0x5E4   0x0031             MOVS     R1,R6
   \      0x5E6   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \      0x5E8   0xF93A 0x1011      LDRSH    R1,[R10, R1, LSL #+1]
   \      0x5EC   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0x5EE   0x4281             CMP      R1,R0
   \      0x5F0   0xDBD4             BLT.N    ??EdgeIrregular_23
   \      0x5F2   0x0030             MOVS     R0,R6
   \      0x5F4   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0x5F6   0xF837 0x0010      LDRH     R0,[R7, R0, LSL #+1]
   \      0x5FA   0x0031             MOVS     R1,R6
   \      0x5FC   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \      0x5FE   0xEB07 0x0141      ADD      R1,R7,R1, LSL #+1
   \      0x602   0x8849             LDRH     R1,[R1, #+2]
   \      0x604   0x1A40             SUBS     R0,R0,R1
   \      0x606   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0x608   0x....'....        BL       my_abs
   \      0x60C   0x0031             MOVS     R1,R6
   \      0x60E   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \      0x610   0xF93A 0x1011      LDRSH    R1,[R10, R1, LSL #+1]
   \      0x614   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0x616   0x4281             CMP      R1,R0
   \      0x618   0xDBC0             BLT.N    ??EdgeIrregular_23
   1262          							{
   1263          								shape_right = 1;
   \      0x61A   0x2501             MOVS     R5,#+1
   1264          								range_width_right = rightEdge[i];
   \      0x61C   0x0030             MOVS     R0,R6
   \      0x61E   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0x620   0xF937 0x0010      LDRSH    R0,[R7, R0, LSL #+1]
   \      0x624   0xF8AD 0x0006      STRH     R0,[SP, #+6]
   1265          								range_height_right = i;
   \      0x628   0xF8AD 0x6000      STRH     R6,[SP, #+0]
   1266          								sum_right++;
   \      0x62C   0x1C64             ADDS     R4,R4,#+1
   1267          								break;
   1268          							}
   1269          						}
   \                     ??EdgeIrregular_25: (+1)
   \      0x62E   0x1E76             SUBS     R6,R6,#+1
   \                     ??EdgeIrregular_22: (+1)
   \      0x630   0xF8DF 0x079C      LDR.W    R0,??EdgeIrregular_1+0x8
   \      0x634   0xF9B0 0x1000      LDRSH    R1,[R0, #+0]
   \      0x638   0x201C             MOVS     R0,#+28
   \      0x63A   0x....'....        BL       Max
   \      0x63E   0x0031             MOVS     R1,R6
   \      0x640   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \      0x642   0x4281             CMP      R1,R0
   \      0x644   0xF2C0 0x8128      BLT.W    ??EdgeIrregular_26
   \      0x648   0xF89D 0x0004      LDRB     R0,[SP, #+4]
   \      0x64C   0x2800             CMP      R0,#+0
   \      0x64E   0xF040 0x80A2      BNE.W    ??EdgeIrregular_27
   \      0x652   0xF8DF 0x077C      LDR.W    R0,??EdgeIrregular_1+0x8
   \      0x656   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \      0x65A   0x0031             MOVS     R1,R6
   \      0x65C   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \      0x65E   0x4288             CMP      R0,R1
   \      0x660   0xF280 0x8099      BGE.W    ??EdgeIrregular_27
   \      0x664   0xF8DF 0x0760      LDR.W    R0,??EdgeIrregular_1
   \      0x668   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \      0x66C   0x0031             MOVS     R1,R6
   \      0x66E   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \      0x670   0x4288             CMP      R0,R1
   \      0x672   0xF2C0 0x8090      BLT.W    ??EdgeIrregular_27
   \      0x676   0xF8DF 0x9760      LDR.W    R9,??EdgeIrregular_1+0x10
   \      0x67A   0x220A             MOVS     R2,#+10
   \      0x67C   0x0030             MOVS     R0,R6
   \      0x67E   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0x680   0xF939 0x1010      LDRSH    R1,[R9, R0, LSL #+1]
   \      0x684   0x0030             MOVS     R0,R6
   \      0x686   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0x688   0x....'....        BL       get_height
   \      0x68C   0x4682             MOV      R10,R0
   \      0x68E   0xEBB6 0x0A0A      SUBS     R10,R6,R10
   \      0x692   0x0030             MOVS     R0,R6
   \      0x694   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0x696   0xF839 0x1010      LDRH     R1,[R9, R0, LSL #+1]
   \      0x69A   0x0030             MOVS     R0,R6
   \      0x69C   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0x69E   0xEB09 0x0040      ADD      R0,R9,R0, LSL #+1
   \      0x6A2   0xF830 0x0C02      LDRH     R0,[R0, #-2]
   \      0x6A6   0x1A08             SUBS     R0,R1,R0
   \      0x6A8   0xF8DF 0x7734      LDR.W    R7,??EdgeIrregular_1+0x18
   \      0x6AC   0x0001             MOVS     R1,R0
   \      0x6AE   0x0032             MOVS     R2,R6
   \      0x6B0   0xB212             SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
   \      0x6B2   0xF937 0x2012      LDRSH    R2,[R7, R2, LSL #+1]
   \      0x6B6   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \      0x6B8   0x4291             CMP      R1,R2
   \      0x6BA   0xDB1C             BLT.N    ??EdgeIrregular_28
   \      0x6BC   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0x6BE   0x....'....        BL       my_abs
   \      0x6C2   0x0031             MOVS     R1,R6
   \      0x6C4   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \      0x6C6   0xF937 0x1011      LDRSH    R1,[R7, R1, LSL #+1]
   \      0x6CA   0x0032             MOVS     R2,R6
   \      0x6CC   0xB212             SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
   \      0x6CE   0xF937 0x2012      LDRSH    R2,[R7, R2, LSL #+1]
   \      0x6D2   0x1851             ADDS     R1,R2,R1
   \      0x6D4   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0x6D6   0x4281             CMP      R1,R0
   \      0x6D8   0xDB0D             BLT.N    ??EdgeIrregular_28
   \      0x6DA   0x0030             MOVS     R0,R6
   \      0x6DC   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0x6DE   0xF939 0x0010      LDRSH    R0,[R9, R0, LSL #+1]
   \      0x6E2   0xF8AD 0x0006      STRH     R0,[SP, #+6]
   \      0x6E6   0xF8AD 0x6000      STRH     R6,[SP, #+0]
   \      0x6EA   0x2500             MOVS     R5,#+0
   \      0x6EC   0x2001             MOVS     R0,#+1
   \      0x6EE   0xF88D 0x0004      STRB     R0,[SP, #+4]
   \      0x6F2   0x1C64             ADDS     R4,R4,#+1
   \      0x6F4   0xE04F             B.N      ??EdgeIrregular_27
   \                     ??EdgeIrregular_28: (+1)
   \      0x6F6   0x4650             MOV      R0,R10
   \      0x6F8   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0x6FA   0x2803             CMP      R0,#+3
   \      0x6FC   0xDB4B             BLT.N    ??EdgeIrregular_27
   \      0x6FE   0x0030             MOVS     R0,R6
   \      0x700   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0x702   0xF937 0x0010      LDRSH    R0,[R7, R0, LSL #+1]
   \      0x706   0x0031             MOVS     R1,R6
   \      0x708   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \      0x70A   0xF937 0x1011      LDRSH    R1,[R7, R1, LSL #+1]
   \      0x70E   0x1808             ADDS     R0,R1,R0
   \      0x710   0xFA0F 0xFA8A      SXTH     R10,R10          ;; SignExt  R10,R10,#+16,#+16
   \      0x714   0x4550             CMP      R0,R10
   \      0x716   0xDB3E             BLT.N    ??EdgeIrregular_27
   \      0x718   0x46B2             MOV      R10,R6
   \      0x71A   0xE001             B.N      ??EdgeIrregular_29
   \                     ??EdgeIrregular_30: (+1)
   \      0x71C   0xF1BA 0x0A01      SUBS     R10,R10,#+1
   \                     ??EdgeIrregular_29: (+1)
   \      0x720   0xF8DF 0x06AC      LDR.W    R0,??EdgeIrregular_1+0x8
   \      0x724   0xF9B0 0x1000      LDRSH    R1,[R0, #+0]
   \      0x728   0x1EF0             SUBS     R0,R6,#+3
   \      0x72A   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0x72C   0x....'....        BL       Max
   \      0x730   0x4651             MOV      R1,R10
   \      0x732   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \      0x734   0x4281             CMP      R1,R0
   \      0x736   0xDB2E             BLT.N    ??EdgeIrregular_27
   \      0x738   0x0030             MOVS     R0,R6
   \      0x73A   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0x73C   0xF939 0x0010      LDRSH    R0,[R9, R0, LSL #+1]
   \      0x740   0x4651             MOV      R1,R10
   \      0x742   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \      0x744   0xF939 0x1011      LDRSH    R1,[R9, R1, LSL #+1]
   \      0x748   0x4288             CMP      R0,R1
   \      0x74A   0xDAE7             BGE.N    ??EdgeIrregular_30
   \      0x74C   0x4650             MOV      R0,R10
   \      0x74E   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0x750   0xF839 0x0010      LDRH     R0,[R9, R0, LSL #+1]
   \      0x754   0x0031             MOVS     R1,R6
   \      0x756   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \      0x758   0xF839 0x1011      LDRH     R1,[R9, R1, LSL #+1]
   \      0x75C   0x1A40             SUBS     R0,R0,R1
   \      0x75E   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0x760   0x....'....        BL       my_abs
   \      0x764   0x0031             MOVS     R1,R6
   \      0x766   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \      0x768   0xF937 0x1011      LDRSH    R1,[R7, R1, LSL #+1]
   \      0x76C   0x0032             MOVS     R2,R6
   \      0x76E   0xB212             SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
   \      0x770   0xF937 0x2012      LDRSH    R2,[R7, R2, LSL #+1]
   \      0x774   0x1851             ADDS     R1,R2,R1
   \      0x776   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0x778   0x4281             CMP      R1,R0
   \      0x77A   0xDBCF             BLT.N    ??EdgeIrregular_30
   \      0x77C   0x2501             MOVS     R5,#+1
   \      0x77E   0x0030             MOVS     R0,R6
   \      0x780   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0x782   0xF939 0x0010      LDRSH    R0,[R9, R0, LSL #+1]
   \      0x786   0xF8AD 0x0006      STRH     R0,[SP, #+6]
   \      0x78A   0xF8AD 0x6000      STRH     R6,[SP, #+0]
   \      0x78E   0x2001             MOVS     R0,#+1
   \      0x790   0xF88D 0x0004      STRB     R0,[SP, #+4]
   \      0x794   0x1C64             ADDS     R4,R4,#+1
   \                     ??EdgeIrregular_27: (+1)
   \      0x796   0x0028             MOVS     R0,R5
   \      0x798   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0x79A   0x2801             CMP      R0,#+1
   \      0x79C   0xF040 0x8092      BNE.W    ??EdgeIrregular_31
   \      0x7A0   0xF8DF 0x062C      LDR.W    R0,??EdgeIrregular_1+0x8
   \      0x7A4   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \      0x7A8   0x0031             MOVS     R1,R6
   \      0x7AA   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \      0x7AC   0x4288             CMP      R0,R1
   \      0x7AE   0xF6BF 0xAF3E      BGE.W    ??EdgeIrregular_25
   \      0x7B2   0xF8DF 0x0614      LDR.W    R0,??EdgeIrregular_1
   \      0x7B6   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \      0x7BA   0x0031             MOVS     R1,R6
   \      0x7BC   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \      0x7BE   0x4288             CMP      R0,R1
   \      0x7C0   0xF6FF 0xAF35      BLT.W    ??EdgeIrregular_25
   \      0x7C4   0xF8DF 0x7610      LDR.W    R7,??EdgeIrregular_1+0x10
   \      0x7C8   0x0030             MOVS     R0,R6
   \      0x7CA   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0x7CC   0xF837 0x0010      LDRH     R0,[R7, R0, LSL #+1]
   \      0x7D0   0x0031             MOVS     R1,R6
   \      0x7D2   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \      0x7D4   0xEB07 0x0141      ADD      R1,R7,R1, LSL #+1
   \      0x7D8   0xF831 0x9C02      LDRH     R9,[R1, #-2]
   \      0x7DC   0xEBB0 0x0909      SUBS     R9,R0,R9
   \      0x7E0   0xF8BD 0x0006      LDRH     R0,[SP, #+6]
   \      0x7E4   0x0031             MOVS     R1,R6
   \      0x7E6   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \      0x7E8   0xF837 0x1011      LDRH     R1,[R7, R1, LSL #+1]
   \      0x7EC   0x1A40             SUBS     R0,R0,R1
   \      0x7EE   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0x7F0   0x....'....        BL       my_abs
   \      0x7F4   0xF8DF 0xA5E8      LDR.W    R10,??EdgeIrregular_1+0x18
   \      0x7F8   0xF9BD 0x1000      LDRSH    R1,[SP, #+0]
   \      0x7FC   0xF93A 0x2011      LDRSH    R2,[R10, R1, LSL #+1]
   \      0x800   0xF9BD 0x1000      LDRSH    R1,[SP, #+0]
   \      0x804   0xF83A 0x1011      LDRH     R1,[R10, R1, LSL #+1]
   \      0x808   0xF9BD 0x3000      LDRSH    R3,[SP, #+0]
   \      0x80C   0xF83A 0x3013      LDRH     R3,[R10, R3, LSL #+1]
   \      0x810   0xFB11 0xF103      SMULBB   R1,R1,R3
   \      0x814   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \      0x816   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0x818   0x....'....        BL       JudgeNumInterval
   \      0x81C   0x2801             CMP      R0,#+1
   \      0x81E   0xF47F 0xAF06      BNE.W    ??EdgeIrregular_25
   \      0x822   0xF8BD 0x0000      LDRH     R0,[SP, #+0]
   \      0x826   0x1B80             SUBS     R0,R0,R6
   \      0x828   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0x82A   0x....'....        BL       my_abs
   \      0x82E   0xF9BD 0x1000      LDRSH    R1,[SP, #+0]
   \      0x832   0xF93A 0x2011      LDRSH    R2,[R10, R1, LSL #+1]
   \      0x836   0xF9BD 0x1000      LDRSH    R1,[SP, #+0]
   \      0x83A   0xF83A 0x1011      LDRH     R1,[R10, R1, LSL #+1]
   \      0x83E   0xF9BD 0x3000      LDRSH    R3,[SP, #+0]
   \      0x842   0xF83A 0x3013      LDRH     R3,[R10, R3, LSL #+1]
   \      0x846   0xFB11 0xF103      SMULBB   R1,R1,R3
   \      0x84A   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \      0x84C   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0x84E   0x....'....        BL       JudgeNumInterval
   \      0x852   0x2801             CMP      R0,#+1
   \      0x854   0xF47F 0xAEEB      BNE.W    ??EdgeIrregular_25
   \      0x858   0x4648             MOV      R0,R9
   \      0x85A   0x0031             MOVS     R1,R6
   \      0x85C   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \      0x85E   0xF93A 0x1011      LDRSH    R1,[R10, R1, LSL #+1]
   \      0x862   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0x864   0x4288             CMP      R0,R1
   \      0x866   0xF6FF 0xAEE2      BLT.W    ??EdgeIrregular_25
   \      0x86A   0x4648             MOV      R0,R9
   \      0x86C   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0x86E   0x....'....        BL       my_abs
   \      0x872   0x0031             MOVS     R1,R6
   \      0x874   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \      0x876   0xF93A 0x1011      LDRSH    R1,[R10, R1, LSL #+1]
   \      0x87A   0x0032             MOVS     R2,R6
   \      0x87C   0xB212             SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
   \      0x87E   0xF93A 0x2012      LDRSH    R2,[R10, R2, LSL #+1]
   \      0x882   0x1851             ADDS     R1,R2,R1
   \      0x884   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0x886   0x4281             CMP      R1,R0
   \      0x888   0xF6FF 0xAED1      BLT.W    ??EdgeIrregular_25
   \      0x88C   0x2000             MOVS     R0,#+0
   \      0x88E   0x0030             MOVS     R0,R6
   \      0x890   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0x892   0xF937 0x0010      LDRSH    R0,[R7, R0, LSL #+1]
   \      0x896   0x1C64             ADDS     R4,R4,#+1
   1270          					}
   1271          				}
   1272          			}//if
   1273          		}//else
   1274          	}
   1275          
   1276                  if (sum_right >= 3 && rightEdge[Max(FWD_40CM,row_right_end)] > IMG_COL_CENTER)
   \                     ??EdgeIrregular_26: (+1)
   \      0x898   0x0020             MOVS     R0,R4
   \      0x89A   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0x89C   0x2803             CMP      R0,#+3
   \      0x89E   0xF2C0 0x808A      BLT.W    ??EdgeIrregular_32
   \      0x8A2   0xF8DF 0x052C      LDR.W    R0,??EdgeIrregular_1+0x8
   \      0x8A6   0xF9B0 0x1000      LDRSH    R1,[R0, #+0]
   \      0x8AA   0x201C             MOVS     R0,#+28
   \      0x8AC   0x....'....        BL       Max
   \      0x8B0   0xF8DF 0x1524      LDR.W    R1,??EdgeIrregular_1+0x10
   \      0x8B4   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0x8B6   0xF931 0x0010      LDRSH    R0,[R1, R0, LSL #+1]
   \      0x8BA   0x2850             CMP      R0,#+80
   \      0x8BC   0xDB7B             BLT.N    ??EdgeIrregular_32
   1277          	{
   1278          		return 100;
   \      0x8BE   0x2064             MOVS     R0,#+100
   \      0x8C0   0xF000 0xBCA7      B.W      ??EdgeIrregular_3
   1279          	}
   \                     ??EdgeIrregular_31: (+1)
   \      0x8C4   0x0028             MOVS     R0,R5
   \      0x8C6   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0x8C8   0x2800             CMP      R0,#+0
   \      0x8CA   0xF47F 0xAEB0      BNE.W    ??EdgeIrregular_25
   \      0x8CE   0xF8DF 0x0500      LDR.W    R0,??EdgeIrregular_1+0x8
   \      0x8D2   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \      0x8D6   0x0031             MOVS     R1,R6
   \      0x8D8   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \      0x8DA   0x4288             CMP      R0,R1
   \      0x8DC   0xF6BF 0xAEA7      BGE.W    ??EdgeIrregular_25
   \      0x8E0   0xF8DF 0x04E4      LDR.W    R0,??EdgeIrregular_1
   \      0x8E4   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \      0x8E8   0x0031             MOVS     R1,R6
   \      0x8EA   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \      0x8EC   0x4288             CMP      R0,R1
   \      0x8EE   0xF6FF 0xAE9E      BLT.W    ??EdgeIrregular_25
   \      0x8F2   0xF8DF 0x74E4      LDR.W    R7,??EdgeIrregular_1+0x10
   \      0x8F6   0x220A             MOVS     R2,#+10
   \      0x8F8   0x0030             MOVS     R0,R6
   \      0x8FA   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0x8FC   0xF937 0x1010      LDRSH    R1,[R7, R0, LSL #+1]
   \      0x900   0x0030             MOVS     R0,R6
   \      0x902   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0x904   0x....'....        BL       get_height
   \      0x908   0x4681             MOV      R9,R0
   \      0x90A   0xEBB6 0x0909      SUBS     R9,R6,R9
   \      0x90E   0xF8BD 0x0006      LDRH     R0,[SP, #+6]
   \      0x912   0x0031             MOVS     R1,R6
   \      0x914   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \      0x916   0xF837 0x1011      LDRH     R1,[R7, R1, LSL #+1]
   \      0x91A   0x1A40             SUBS     R0,R0,R1
   \      0x91C   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0x91E   0x....'....        BL       my_abs
   \      0x922   0xF8DF 0xA4BC      LDR.W    R10,??EdgeIrregular_1+0x18
   \      0x926   0xF9BD 0x1000      LDRSH    R1,[SP, #+0]
   \      0x92A   0xF93A 0x2011      LDRSH    R2,[R10, R1, LSL #+1]
   \      0x92E   0xF9BD 0x1000      LDRSH    R1,[SP, #+0]
   \      0x932   0xF83A 0x1011      LDRH     R1,[R10, R1, LSL #+1]
   \      0x936   0x1C49             ADDS     R1,R1,#+1
   \      0x938   0xF9BD 0x3000      LDRSH    R3,[SP, #+0]
   \      0x93C   0xF83A 0x3013      LDRH     R3,[R10, R3, LSL #+1]
   \      0x940   0x1C5B             ADDS     R3,R3,#+1
   \      0x942   0xFB11 0xF103      SMULBB   R1,R1,R3
   \      0x946   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \      0x948   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0x94A   0x....'....        BL       JudgeNumInterval
   \      0x94E   0x2801             CMP      R0,#+1
   \      0x950   0xF47F 0xAE6D      BNE.W    ??EdgeIrregular_25
   \      0x954   0xF8BD 0x0000      LDRH     R0,[SP, #+0]
   \      0x958   0x1B80             SUBS     R0,R0,R6
   \      0x95A   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0x95C   0x....'....        BL       my_abs
   \      0x960   0xF9BD 0x1000      LDRSH    R1,[SP, #+0]
   \      0x964   0xF93A 0x2011      LDRSH    R2,[R10, R1, LSL #+1]
   \      0x968   0xF9BD 0x1000      LDRSH    R1,[SP, #+0]
   \      0x96C   0xF83A 0x1011      LDRH     R1,[R10, R1, LSL #+1]
   \      0x970   0xF9BD 0x3000      LDRSH    R3,[SP, #+0]
   \      0x974   0xF83A 0x3013      LDRH     R3,[R10, R3, LSL #+1]
   \      0x978   0xFB11 0xF103      SMULBB   R1,R1,R3
   \      0x97C   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \      0x97E   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0x980   0x....'....        BL       JudgeNumInterval
   \      0x984   0x2801             CMP      R0,#+1
   \      0x986   0xF47F 0xAE52      BNE.W    ??EdgeIrregular_25
   \      0x98A   0x4648             MOV      R0,R9
   \      0x98C   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0x98E   0x0031             MOVS     R1,R6
   \      0x990   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \      0x992   0xF93A 0x1011      LDRSH    R1,[R10, R1, LSL #+1]
   \      0x996   0x1E49             SUBS     R1,R1,#+1
   \      0x998   0x4288             CMP      R0,R1
   \      0x99A   0xF6FF 0xAE48      BLT.W    ??EdgeIrregular_25
   \      0x99E   0x0030             MOVS     R0,R6
   \      0x9A0   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0x9A2   0xF93A 0x0010      LDRSH    R0,[R10, R0, LSL #+1]
   \      0x9A6   0x1C80             ADDS     R0,R0,#+2
   \      0x9A8   0xFA0F 0xF989      SXTH     R9,R9            ;; SignExt  R9,R9,#+16,#+16
   \      0x9AC   0x4548             CMP      R0,R9
   \      0x9AE   0xF6FF 0xAE3E      BLT.W    ??EdgeIrregular_25
   \      0x9B2   0x46B1             MOV      R9,R6
   \      0x9B4   0xE5F4             B.N      ??EdgeIrregular_24
   1280                  if (sum_left >= 2 && sum_right >= 2)
   \                     ??EdgeIrregular_32: (+1)
   \      0x9B6   0xFA0F 0xF888      SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
   \      0x9BA   0xF1B8 0x0F02      CMP      R8,#+2
   \      0x9BE   0xDB05             BLT.N    ??EdgeIrregular_33
   \      0x9C0   0xB224             SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
   \      0x9C2   0x2C02             CMP      R4,#+2
   \      0x9C4   0xDB02             BLT.N    ??EdgeIrregular_33
   1281                  {
   1282                          return 100;
   \      0x9C6   0x2064             MOVS     R0,#+100
   \      0x9C8   0xF000 0xBC23      B.W      ??EdgeIrregular_3
   1283                  }
   1284                  
   1285          	/**********************************************单边检测结束**********************************************/
   1286          
   1287          	/**********************************************开始双边检测**********************************************/
   1288          	//清空标志位
   1289          	shape_left = -1;
   \                     ??EdgeIrregular_33: (+1)
   \      0x9CC   0xF05F 0x37FF      MOVS     R7,#-1
   \      0x9D0   0x003D             MOVS     R5,R7
   1290          	shape_right = -1;
   1291          
   1292          	first_search_finished_left = 0;
   \      0x9D2   0x2000             MOVS     R0,#+0
   \      0x9D4   0xF88D 0x0005      STRB     R0,[SP, #+5]
   1293          	first_search_finished_right = 0;
   \      0x9D8   0x2000             MOVS     R0,#+0
   \      0x9DA   0xF88D 0x0004      STRB     R0,[SP, #+4]
   1294          
   1295          	heightbuf = 0;
   \      0x9DE   0x2000             MOVS     R0,#+0
   1296          	widthbuf = 0;
   \      0x9E0   0x2000             MOVS     R0,#+0
   1297          
   1298          	range_width_left = 0;
   \      0x9E2   0x2000             MOVS     R0,#+0
   \      0x9E4   0xF8AD 0x0008      STRH     R0,[SP, #+8]
   1299          	range_height_left = 0;
   \      0x9E8   0x2000             MOVS     R0,#+0
   \      0x9EA   0xF8AD 0x0002      STRH     R0,[SP, #+2]
   1300          
   1301          	range_width_right = 0;
   \      0x9EE   0x2000             MOVS     R0,#+0
   \      0x9F0   0xF8AD 0x0006      STRH     R0,[SP, #+6]
   1302          	range_height_right = 0;
   \      0x9F4   0x2000             MOVS     R0,#+0
   \      0x9F6   0xF8AD 0x0000      STRH     R0,[SP, #+0]
   1303          
   1304          	sum_left = 0;
   \      0x9FA   0x2600             MOVS     R6,#+0
   1305          	sum_right = 0;
   \      0x9FC   0xF05F 0x0800      MOVS     R8,#+0
   1306          	//结束清空
   1307          	for (i = IMG_BOTTOM; i >= FWD_60CM; i--)
   \      0xA00   0x2445             MOVS     R4,#+69
   \      0xA02   0xE000             B.N      ??EdgeIrregular_34
   \                     ??EdgeIrregular_35: (+1)
   \      0xA04   0x1E64             SUBS     R4,R4,#+1
   \                     ??EdgeIrregular_34: (+1)
   \      0xA06   0x0020             MOVS     R0,R4
   \      0xA08   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0xA0A   0x2816             CMP      R0,#+22
   \      0xA0C   0xF2C0 0x83FD      BLT.W    ??EdgeIrregular_36
   1308          	{
   1309          		/**********************************************开始首次检测**********************************************/
   1310          		if (0 == first_search_finished_left && i >= FWD_40CM)//距离限幅
   \      0xA10   0xF89D 0x0005      LDRB     R0,[SP, #+5]
   \      0xA14   0x2800             CMP      R0,#+0
   \      0xA16   0xF040 0x80A7      BNE.W    ??EdgeIrregular_37
   \      0xA1A   0x0020             MOVS     R0,R4
   \      0xA1C   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0xA1E   0x281C             CMP      R0,#+28
   \      0xA20   0xF2C0 0x80A2      BLT.W    ??EdgeIrregular_37
   1311          		{
   1312          			if (i > row_left_end && i <= row_left_begin)
   \      0xA24   0xF8DF 0x03A4      LDR.W    R0,??EdgeIrregular_1+0x4
   \      0xA28   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \      0xA2C   0x0021             MOVS     R1,R4
   \      0xA2E   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \      0xA30   0x4288             CMP      R0,R1
   \      0xA32   0xF280 0x8099      BGE.W    ??EdgeIrregular_37
   \      0xA36   0xF8DF 0x03E0      LDR.W    R0,??EdgeIrregular_0
   \      0xA3A   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \      0xA3E   0x0021             MOVS     R1,R4
   \      0xA40   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \      0xA42   0x4288             CMP      R0,R1
   \      0xA44   0xF2C0 0x8090      BLT.W    ??EdgeIrregular_37
   1313          			{
   1314          				heightbuf = (i) - (get_height(i, leftEdge[i], IMG_TOP));
   \      0xA48   0xF8DF 0x9390      LDR.W    R9,??EdgeIrregular_1+0x14
   \      0xA4C   0x220A             MOVS     R2,#+10
   \      0xA4E   0x0020             MOVS     R0,R4
   \      0xA50   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0xA52   0xF939 0x1010      LDRSH    R1,[R9, R0, LSL #+1]
   \      0xA56   0x0020             MOVS     R0,R4
   \      0xA58   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0xA5A   0x....'....        BL       get_height
   \      0xA5E   0x4683             MOV      R11,R0
   \      0xA60   0xEBB4 0x0B0B      SUBS     R11,R4,R11
   1315          				widthbuf = leftEdge[i] - leftEdge[i - 1];
   \      0xA64   0x0020             MOVS     R0,R4
   \      0xA66   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0xA68   0xF839 0x1010      LDRH     R1,[R9, R0, LSL #+1]
   \      0xA6C   0x0020             MOVS     R0,R4
   \      0xA6E   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0xA70   0xEB09 0x0040      ADD      R0,R9,R0, LSL #+1
   \      0xA74   0xF830 0x0C02      LDRH     R0,[R0, #-2]
   \      0xA78   0x1A08             SUBS     R0,R1,R0
   1316          				if (widthbuf <= -CAR_JOIN_templ[i] && my_abs(widthbuf) <= CAR_JOIN_templ[i] + CAR_JOIN_templ[i])//宽度限幅
   \      0xA7A   0xF8DF 0xA364      LDR.W    R10,??EdgeIrregular_1+0x18
   \      0xA7E   0x0021             MOVS     R1,R4
   \      0xA80   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \      0xA82   0xF93A 0x1011      LDRSH    R1,[R10, R1, LSL #+1]
   \      0xA86   0x4249             RSBS     R1,R1,#+0
   \      0xA88   0x0002             MOVS     R2,R0
   \      0xA8A   0xB212             SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
   \      0xA8C   0x4291             CMP      R1,R2
   \      0xA8E   0xDB1C             BLT.N    ??EdgeIrregular_38
   \      0xA90   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0xA92   0x....'....        BL       my_abs
   \      0xA96   0x0021             MOVS     R1,R4
   \      0xA98   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \      0xA9A   0xF93A 0x1011      LDRSH    R1,[R10, R1, LSL #+1]
   \      0xA9E   0x0022             MOVS     R2,R4
   \      0xAA0   0xB212             SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
   \      0xAA2   0xF93A 0x2012      LDRSH    R2,[R10, R2, LSL #+1]
   \      0xAA6   0x1851             ADDS     R1,R2,R1
   \      0xAA8   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0xAAA   0x4281             CMP      R1,R0
   \      0xAAC   0xDB0D             BLT.N    ??EdgeIrregular_38
   1317          				{
   1318          					range_width_left = leftEdge[i];
   \      0xAAE   0x0020             MOVS     R0,R4
   \      0xAB0   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0xAB2   0xF939 0x0010      LDRSH    R0,[R9, R0, LSL #+1]
   \      0xAB6   0xF8AD 0x0008      STRH     R0,[SP, #+8]
   1319          					range_height_left = i;
   \      0xABA   0xF8AD 0x4002      STRH     R4,[SP, #+2]
   1320          					shape_left = 0;
   \      0xABE   0x2500             MOVS     R5,#+0
   1321          					first_search_finished_left = 1;
   \      0xAC0   0x2001             MOVS     R0,#+1
   \      0xAC2   0xF88D 0x0005      STRB     R0,[SP, #+5]
   1322          					sum_left++;
   \      0xAC6   0x1C76             ADDS     R6,R6,#+1
   \      0xAC8   0xE04E             B.N      ??EdgeIrregular_37
   1323          				}
   1324          				else if (heightbuf >= 3 && heightbuf <= CAR_JOIN_templ[i] + CAR_JOIN_templ[i])//长度限幅
   \                     ??EdgeIrregular_38: (+1)
   \      0xACA   0x4658             MOV      R0,R11
   \      0xACC   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0xACE   0x2803             CMP      R0,#+3
   \      0xAD0   0xDB4A             BLT.N    ??EdgeIrregular_37
   \      0xAD2   0x0020             MOVS     R0,R4
   \      0xAD4   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0xAD6   0xF93A 0x0010      LDRSH    R0,[R10, R0, LSL #+1]
   \      0xADA   0x0021             MOVS     R1,R4
   \      0xADC   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \      0xADE   0xF93A 0x1011      LDRSH    R1,[R10, R1, LSL #+1]
   \      0xAE2   0x1808             ADDS     R0,R1,R0
   \      0xAE4   0xFA0F 0xFB8B      SXTH     R11,R11          ;; SignExt  R11,R11,#+16,#+16
   \      0xAE8   0x4558             CMP      R0,R11
   \      0xAEA   0xDB3D             BLT.N    ??EdgeIrregular_37
   1325          				{
   1326          					for (j = i; j >= Max(i - 3, row_left_end); j--)//向上查找
   \      0xAEC   0x46A3             MOV      R11,R4
   \      0xAEE   0xE001             B.N      ??EdgeIrregular_39
   \                     ??EdgeIrregular_40: (+1)
   \      0xAF0   0xF1BB 0x0B01      SUBS     R11,R11,#+1
   \                     ??EdgeIrregular_39: (+1)
   \      0xAF4   0x48B5             LDR.N    R0,??EdgeIrregular_1+0x4
   \      0xAF6   0xF9B0 0x1000      LDRSH    R1,[R0, #+0]
   \      0xAFA   0x1EE0             SUBS     R0,R4,#+3
   \      0xAFC   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0xAFE   0x....'....        BL       Max
   \      0xB02   0x4659             MOV      R1,R11
   \      0xB04   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \      0xB06   0x4281             CMP      R1,R0
   \      0xB08   0xDB2E             BLT.N    ??EdgeIrregular_37
   1327          					{
   1328          						if (leftEdge[j] < leftEdge[i] && my_abs(leftEdge[j] - leftEdge[i]) <= CAR_JOIN_templ[i] + CAR_JOIN_templ[i])
   \      0xB0A   0x4658             MOV      R0,R11
   \      0xB0C   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0xB0E   0xF939 0x0010      LDRSH    R0,[R9, R0, LSL #+1]
   \      0xB12   0x0021             MOVS     R1,R4
   \      0xB14   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \      0xB16   0xF939 0x1011      LDRSH    R1,[R9, R1, LSL #+1]
   \      0xB1A   0x4288             CMP      R0,R1
   \      0xB1C   0xDAE8             BGE.N    ??EdgeIrregular_40
   \      0xB1E   0x4658             MOV      R0,R11
   \      0xB20   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0xB22   0xF839 0x0010      LDRH     R0,[R9, R0, LSL #+1]
   \      0xB26   0x0021             MOVS     R1,R4
   \      0xB28   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \      0xB2A   0xF839 0x1011      LDRH     R1,[R9, R1, LSL #+1]
   \      0xB2E   0x1A40             SUBS     R0,R0,R1
   \      0xB30   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0xB32   0x....'....        BL       my_abs
   \      0xB36   0x0021             MOVS     R1,R4
   \      0xB38   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \      0xB3A   0xF93A 0x1011      LDRSH    R1,[R10, R1, LSL #+1]
   \      0xB3E   0x0022             MOVS     R2,R4
   \      0xB40   0xB212             SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
   \      0xB42   0xF93A 0x2012      LDRSH    R2,[R10, R2, LSL #+1]
   \      0xB46   0x1851             ADDS     R1,R2,R1
   \      0xB48   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0xB4A   0x4281             CMP      R1,R0
   \      0xB4C   0xDBD0             BLT.N    ??EdgeIrregular_40
   1329          						{
   1330          							shape_left = 1;
   \      0xB4E   0x2501             MOVS     R5,#+1
   1331          							range_width_left = leftEdge[i];
   \      0xB50   0x0020             MOVS     R0,R4
   \      0xB52   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0xB54   0xF939 0x0010      LDRSH    R0,[R9, R0, LSL #+1]
   \      0xB58   0xF8AD 0x0008      STRH     R0,[SP, #+8]
   1332          							range_height_left = i;
   \      0xB5C   0xF8AD 0x4002      STRH     R4,[SP, #+2]
   1333          							first_search_finished_left = 1;
   \      0xB60   0x2001             MOVS     R0,#+1
   \      0xB62   0xF88D 0x0005      STRB     R0,[SP, #+5]
   1334          							sum_left++;
   \      0xB66   0x1C76             ADDS     R6,R6,#+1
   1335          							break;
   1336          						}
   1337          					}
   1338          				}//else if
   1339          			}//if
   1340          		}
   1341          		if (0 == first_search_finished_right && i >= FWD_40CM)//距离限幅
   \                     ??EdgeIrregular_37: (+1)
   \      0xB68   0xF89D 0x0004      LDRB     R0,[SP, #+4]
   \      0xB6C   0x2800             CMP      R0,#+0
   \      0xB6E   0xF040 0x80A6      BNE.W    ??EdgeIrregular_41
   \      0xB72   0x0020             MOVS     R0,R4
   \      0xB74   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0xB76   0x281C             CMP      R0,#+28
   \      0xB78   0xF2C0 0x80A1      BLT.W    ??EdgeIrregular_41
   1342          		{
   1343          			if (i > row_right_end && i <= row_right_begin)
   \      0xB7C   0x4894             LDR.N    R0,??EdgeIrregular_1+0x8
   \      0xB7E   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \      0xB82   0x0021             MOVS     R1,R4
   \      0xB84   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \      0xB86   0x4288             CMP      R0,R1
   \      0xB88   0xF280 0x8099      BGE.W    ??EdgeIrregular_41
   \      0xB8C   0x488E             LDR.N    R0,??EdgeIrregular_1
   \      0xB8E   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \      0xB92   0x0021             MOVS     R1,R4
   \      0xB94   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \      0xB96   0x4288             CMP      R0,R1
   \      0xB98   0xF2C0 0x8091      BLT.W    ??EdgeIrregular_41
   1344          			{
   1345          				heightbuf = (i) - (get_height(i, rightEdge[i], IMG_TOP));
   \      0xB9C   0xF8DF 0xA238      LDR.W    R10,??EdgeIrregular_1+0x10
   \      0xBA0   0x220A             MOVS     R2,#+10
   \      0xBA2   0x0020             MOVS     R0,R4
   \      0xBA4   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0xBA6   0xF93A 0x1010      LDRSH    R1,[R10, R0, LSL #+1]
   \      0xBAA   0x0020             MOVS     R0,R4
   \      0xBAC   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0xBAE   0x....'....        BL       get_height
   \      0xBB2   0x4683             MOV      R11,R0
   \      0xBB4   0xEBB4 0x0B0B      SUBS     R11,R4,R11
   1346          				widthbuf = rightEdge[i] - rightEdge[i - 1];
   \      0xBB8   0x0020             MOVS     R0,R4
   \      0xBBA   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0xBBC   0xF83A 0x1010      LDRH     R1,[R10, R0, LSL #+1]
   \      0xBC0   0x0020             MOVS     R0,R4
   \      0xBC2   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0xBC4   0xEB0A 0x0040      ADD      R0,R10,R0, LSL #+1
   \      0xBC8   0xF830 0x0C02      LDRH     R0,[R0, #-2]
   \      0xBCC   0x1A08             SUBS     R0,R1,R0
   1347          				if (widthbuf >= CAR_JOIN_templ[i] && my_abs(widthbuf) <= CAR_JOIN_templ[i] + CAR_JOIN_templ[i])//宽度限幅
   \      0xBCE   0xF8DF 0x9210      LDR.W    R9,??EdgeIrregular_1+0x18
   \      0xBD2   0x0001             MOVS     R1,R0
   \      0xBD4   0x0022             MOVS     R2,R4
   \      0xBD6   0xB212             SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
   \      0xBD8   0xF939 0x2012      LDRSH    R2,[R9, R2, LSL #+1]
   \      0xBDC   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \      0xBDE   0x4291             CMP      R1,R2
   \      0xBE0   0xDB1D             BLT.N    ??EdgeIrregular_42
   \      0xBE2   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0xBE4   0x....'....        BL       my_abs
   \      0xBE8   0x0021             MOVS     R1,R4
   \      0xBEA   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \      0xBEC   0xF939 0x1011      LDRSH    R1,[R9, R1, LSL #+1]
   \      0xBF0   0x0022             MOVS     R2,R4
   \      0xBF2   0xB212             SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
   \      0xBF4   0xF939 0x2012      LDRSH    R2,[R9, R2, LSL #+1]
   \      0xBF8   0x1851             ADDS     R1,R2,R1
   \      0xBFA   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0xBFC   0x4281             CMP      R1,R0
   \      0xBFE   0xDB0E             BLT.N    ??EdgeIrregular_42
   1348          				{
   1349          					range_width_right = rightEdge[i];
   \      0xC00   0x0020             MOVS     R0,R4
   \      0xC02   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0xC04   0xF93A 0x0010      LDRSH    R0,[R10, R0, LSL #+1]
   \      0xC08   0xF8AD 0x0006      STRH     R0,[SP, #+6]
   1350          					range_height_right = i;
   \      0xC0C   0xF8AD 0x4000      STRH     R4,[SP, #+0]
   1351          					shape_right = 0;
   \      0xC10   0x2700             MOVS     R7,#+0
   1352          					first_search_finished_right = 1;
   \      0xC12   0x2001             MOVS     R0,#+1
   \      0xC14   0xF88D 0x0004      STRB     R0,[SP, #+4]
   1353          					sum_right++;
   \      0xC18   0xF118 0x0801      ADDS     R8,R8,#+1
   \      0xC1C   0xE04F             B.N      ??EdgeIrregular_41
   1354          				}
   1355          				else if (heightbuf >= 3 && heightbuf <= CAR_JOIN_templ[i] + CAR_JOIN_templ[i])//长度限幅
   \                     ??EdgeIrregular_42: (+1)
   \      0xC1E   0x4658             MOV      R0,R11
   \      0xC20   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0xC22   0x2803             CMP      R0,#+3
   \      0xC24   0xDB4B             BLT.N    ??EdgeIrregular_41
   \      0xC26   0x0020             MOVS     R0,R4
   \      0xC28   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0xC2A   0xF939 0x0010      LDRSH    R0,[R9, R0, LSL #+1]
   \      0xC2E   0x0021             MOVS     R1,R4
   \      0xC30   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \      0xC32   0xF939 0x1011      LDRSH    R1,[R9, R1, LSL #+1]
   \      0xC36   0x1808             ADDS     R0,R1,R0
   \      0xC38   0xFA0F 0xFB8B      SXTH     R11,R11          ;; SignExt  R11,R11,#+16,#+16
   \      0xC3C   0x4558             CMP      R0,R11
   \      0xC3E   0xDB3E             BLT.N    ??EdgeIrregular_41
   1356          				{
   1357          					for (j = i; j >= Max(i - 3, row_right_end); j--)
   \      0xC40   0x46A3             MOV      R11,R4
   \      0xC42   0xE001             B.N      ??EdgeIrregular_43
   \                     ??EdgeIrregular_44: (+1)
   \      0xC44   0xF1BB 0x0B01      SUBS     R11,R11,#+1
   \                     ??EdgeIrregular_43: (+1)
   \      0xC48   0x4861             LDR.N    R0,??EdgeIrregular_1+0x8
   \      0xC4A   0xF9B0 0x1000      LDRSH    R1,[R0, #+0]
   \      0xC4E   0x1EE0             SUBS     R0,R4,#+3
   \      0xC50   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0xC52   0x....'....        BL       Max
   \      0xC56   0x4659             MOV      R1,R11
   \      0xC58   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \      0xC5A   0x4281             CMP      R1,R0
   \      0xC5C   0xDB2F             BLT.N    ??EdgeIrregular_41
   1358          					{
   1359          						if (rightEdge[j] > rightEdge[i] && my_abs(rightEdge[j] - rightEdge[i]) <= CAR_JOIN_templ[i] + CAR_JOIN_templ[i])
   \      0xC5E   0x0020             MOVS     R0,R4
   \      0xC60   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0xC62   0xF93A 0x0010      LDRSH    R0,[R10, R0, LSL #+1]
   \      0xC66   0x4659             MOV      R1,R11
   \      0xC68   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \      0xC6A   0xF93A 0x1011      LDRSH    R1,[R10, R1, LSL #+1]
   \      0xC6E   0x4288             CMP      R0,R1
   \      0xC70   0xDAE8             BGE.N    ??EdgeIrregular_44
   \      0xC72   0x4658             MOV      R0,R11
   \      0xC74   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0xC76   0xF83A 0x0010      LDRH     R0,[R10, R0, LSL #+1]
   \      0xC7A   0x0021             MOVS     R1,R4
   \      0xC7C   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \      0xC7E   0xF83A 0x1011      LDRH     R1,[R10, R1, LSL #+1]
   \      0xC82   0x1A40             SUBS     R0,R0,R1
   \      0xC84   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0xC86   0x....'....        BL       my_abs
   \      0xC8A   0x0021             MOVS     R1,R4
   \      0xC8C   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \      0xC8E   0xF939 0x1011      LDRSH    R1,[R9, R1, LSL #+1]
   \      0xC92   0x0022             MOVS     R2,R4
   \      0xC94   0xB212             SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
   \      0xC96   0xF939 0x2012      LDRSH    R2,[R9, R2, LSL #+1]
   \      0xC9A   0x1851             ADDS     R1,R2,R1
   \      0xC9C   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0xC9E   0x4281             CMP      R1,R0
   \      0xCA0   0xDBD0             BLT.N    ??EdgeIrregular_44
   1360          						{
   1361          							shape_right = 1;
   \      0xCA2   0x2701             MOVS     R7,#+1
   1362          							range_width_right = rightEdge[i];
   \      0xCA4   0x0020             MOVS     R0,R4
   \      0xCA6   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0xCA8   0xF93A 0x0010      LDRSH    R0,[R10, R0, LSL #+1]
   \      0xCAC   0xF8AD 0x0006      STRH     R0,[SP, #+6]
   1363          							range_height_right = i;
   \      0xCB0   0xF8AD 0x4000      STRH     R4,[SP, #+0]
   1364          							first_search_finished_right = 1;
   \      0xCB4   0x2001             MOVS     R0,#+1
   \      0xCB6   0xF88D 0x0004      STRB     R0,[SP, #+4]
   1365          							sum_right++;
   \      0xCBA   0xF118 0x0801      ADDS     R8,R8,#+1
   1366          							break;
   1367          						}
   1368          					}
   1369          				}//else if
   1370          			}//if
   1371          		}
   1372          		/**********************************************首次检测结束**********************************************/
   1373          
   1374          		/**********************************************开启二次检测**********************************************/
   1375          		if (1 == shape_left)//凸找凹
   \                     ??EdgeIrregular_41: (+1)
   \      0xCBE   0x0028             MOVS     R0,R5
   \      0xCC0   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0xCC2   0x2801             CMP      R0,#+1
   \      0xCC4   0xF040 0x808E      BNE.W    ??EdgeIrregular_45
   1376          		{
   1377          			if (i > row_left_end && i <= row_left_begin)
   \      0xCC8   0x4840             LDR.N    R0,??EdgeIrregular_1+0x4
   \      0xCCA   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \      0xCCE   0x0021             MOVS     R1,R4
   \      0xCD0   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \      0xCD2   0x4288             CMP      R0,R1
   \      0xCD4   0xF280 0x8145      BGE.W    ??EdgeIrregular_46
   \      0xCD8   0x484F             LDR.N    R0,??EdgeIrregular_0
   \      0xCDA   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \      0xCDE   0x0021             MOVS     R1,R4
   \      0xCE0   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \      0xCE2   0x4288             CMP      R0,R1
   \      0xCE4   0xF2C0 0x813D      BLT.W    ??EdgeIrregular_46
   1378          			{
   1379          				widthbuf = leftEdge[i] - leftEdge[i - 1];
   \      0xCE8   0xF8DF 0x90F0      LDR.W    R9,??EdgeIrregular_1+0x14
   \      0xCEC   0x0020             MOVS     R0,R4
   \      0xCEE   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0xCF0   0xF839 0x0010      LDRH     R0,[R9, R0, LSL #+1]
   \      0xCF4   0x0021             MOVS     R1,R4
   \      0xCF6   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \      0xCF8   0xEB09 0x0141      ADD      R1,R9,R1, LSL #+1
   \      0xCFC   0xF831 0xAC02      LDRH     R10,[R1, #-2]
   \      0xD00   0xEBB0 0x0A0A      SUBS     R10,R0,R10
   1380          				if (1 == JudgeNumInterval(my_abs(range_width_left - leftEdge[i]),(CAR_JOIN_templ[range_height_left] * CAR_JOIN_templ[range_height_left]),CAR_JOIN_templ[range_height_left]) && 1 == JudgeNumInterval(my_abs(range_height_left - i),(CAR_JOIN_templ[range_height_left] * CAR_JOIN_templ[range_height_left]),CAR_JOIN_templ[range_height_left]))
   \      0xD04   0xF8BD 0x0008      LDRH     R0,[SP, #+8]
   \      0xD08   0x0021             MOVS     R1,R4
   \      0xD0A   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \      0xD0C   0xF839 0x1011      LDRH     R1,[R9, R1, LSL #+1]
   \      0xD10   0x1A40             SUBS     R0,R0,R1
   \      0xD12   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0xD14   0x....'....        BL       my_abs
   \      0xD18   0xF8DF 0xB0C4      LDR.W    R11,??EdgeIrregular_1+0x18
   \      0xD1C   0xF9BD 0x1002      LDRSH    R1,[SP, #+2]
   \      0xD20   0xF93B 0x2011      LDRSH    R2,[R11, R1, LSL #+1]
   \      0xD24   0xF9BD 0x1002      LDRSH    R1,[SP, #+2]
   \      0xD28   0xF83B 0x1011      LDRH     R1,[R11, R1, LSL #+1]
   \      0xD2C   0xF9BD 0x3002      LDRSH    R3,[SP, #+2]
   \      0xD30   0xF83B 0x3013      LDRH     R3,[R11, R3, LSL #+1]
   \      0xD34   0xFB11 0xF103      SMULBB   R1,R1,R3
   \      0xD38   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \      0xD3A   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0xD3C   0x....'....        BL       JudgeNumInterval
   \      0xD40   0x2801             CMP      R0,#+1
   \      0xD42   0xF040 0x810E      BNE.W    ??EdgeIrregular_46
   \      0xD46   0xF8BD 0x0002      LDRH     R0,[SP, #+2]
   \      0xD4A   0x1B00             SUBS     R0,R0,R4
   \      0xD4C   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0xD4E   0x....'....        BL       my_abs
   \      0xD52   0xF9BD 0x1002      LDRSH    R1,[SP, #+2]
   \      0xD56   0xF93B 0x2011      LDRSH    R2,[R11, R1, LSL #+1]
   \      0xD5A   0xF9BD 0x1002      LDRSH    R1,[SP, #+2]
   \      0xD5E   0xF83B 0x1011      LDRH     R1,[R11, R1, LSL #+1]
   \      0xD62   0xF9BD 0x3002      LDRSH    R3,[SP, #+2]
   \      0xD66   0xF83B 0x3013      LDRH     R3,[R11, R3, LSL #+1]
   \      0xD6A   0xFB11 0xF103      SMULBB   R1,R1,R3
   \      0xD6E   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \      0xD70   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0xD72   0x....'....        BL       JudgeNumInterval
   \      0xD76   0x2801             CMP      R0,#+1
   \      0xD78   0xF040 0x80F3      BNE.W    ??EdgeIrregular_46
   1381          				{
   1382          					if (widthbuf <= -CAR_JOIN_templ[i] && my_abs(widthbuf) <= CAR_JOIN_templ[i] + CAR_JOIN_templ[i])
   \      0xD7C   0x0020             MOVS     R0,R4
   \      0xD7E   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0xD80   0xF93B 0x0010      LDRSH    R0,[R11, R0, LSL #+1]
   \      0xD84   0x4240             RSBS     R0,R0,#+0
   \      0xD86   0x4651             MOV      R1,R10
   \      0xD88   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \      0xD8A   0x4288             CMP      R0,R1
   \      0xD8C   0xF2C0 0x80E9      BLT.W    ??EdgeIrregular_46
   \      0xD90   0x4650             MOV      R0,R10
   \      0xD92   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0xD94   0x....'....        BL       my_abs
   \      0xD98   0x0021             MOVS     R1,R4
   \      0xD9A   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \      0xD9C   0xF93B 0x1011      LDRSH    R1,[R11, R1, LSL #+1]
   \      0xDA0   0x0022             MOVS     R2,R4
   \      0xDA2   0xB212             SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
   \      0xDA4   0xF93B 0x2012      LDRSH    R2,[R11, R2, LSL #+1]
   \      0xDA8   0x1851             ADDS     R1,R2,R1
   \      0xDAA   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0xDAC   0x4281             CMP      R1,R0
   \      0xDAE   0xF2C0 0x80D8      BLT.W    ??EdgeIrregular_46
   1383          					{
   1384          						shape_left = 0;
   \      0xDB2   0x2500             MOVS     R5,#+0
   1385          						range_width_left = leftEdge[i];
   \      0xDB4   0x0020             MOVS     R0,R4
   \      0xDB6   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0xDB8   0xF939 0x0010      LDRSH    R0,[R9, R0, LSL #+1]
   \      0xDBC   0xF8AD 0x0008      STRH     R0,[SP, #+8]
   1386          						range_height_left = i;
   \      0xDC0   0xF8AD 0x4002      STRH     R4,[SP, #+2]
   1387          						sum_left++;
   \      0xDC4   0x1C76             ADDS     R6,R6,#+1
   \      0xDC6   0xE0CC             B.N      ??EdgeIrregular_46
   \                     ??EdgeIrregular_1:
   \      0xDC8   0x....'....        DC32     row_right_begin
   \      0xDCC   0x....'....        DC32     row_left_end
   \      0xDD0   0x....'....        DC32     row_right_end
   \      0xDD4   0x....'....        DC32     width_templ
   \      0xDD8   0x....'....        DC32     rightEdge
   \      0xDDC   0x....'....        DC32     leftEdge
   \      0xDE0   0x....'....        DC32     CAR_JOIN_templ
   1388          					}
   1389          				}
   1390          			}
   1391          
   1392          		}
   1393          		else if (0 == shape_left)//凹找凸
   \                     ??EdgeIrregular_45: (+1)
   \      0xDE4   0x0028             MOVS     R0,R5
   \      0xDE6   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0xDE8   0x2800             CMP      R0,#+0
   \      0xDEA   0xF040 0x80BA      BNE.W    ??EdgeIrregular_46
   1394          		{
   1395          			if (i > row_left_end && i <= row_left_begin)
   \      0xDEE   0x....'....        LDR.W    R0,??DataTable21
   \      0xDF2   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \      0xDF6   0x0021             MOVS     R1,R4
   \      0xDF8   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \      0xDFA   0x4288             CMP      R0,R1
   \      0xDFC   0xF280 0x80B1      BGE.W    ??EdgeIrregular_46
   \      0xE00   0x4805             LDR.N    R0,??EdgeIrregular_0
   \      0xE02   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \      0xE06   0x0021             MOVS     R1,R4
   \      0xE08   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \      0xE0A   0x4288             CMP      R0,R1
   \      0xE0C   0xF2C0 0x80A9      BLT.W    ??EdgeIrregular_46
   1396          			{
   1397          				heightbuf = (i) - (get_height(i, leftEdge[i], IMG_TOP));
   \      0xE10   0x....'....        LDR.W    R9,??DataTable21_1
   \      0xE14   0xE002             B.N      ??EdgeIrregular_47
   \      0xE16   0xBF00             Nop      
   \                     ??EdgeIrregular_0:
   \      0xE18   0x....'....        DC32     row_left_begin
   \                     ??EdgeIrregular_47: (+1)
   \      0xE1C   0x220A             MOVS     R2,#+10
   \      0xE1E   0x0020             MOVS     R0,R4
   \      0xE20   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0xE22   0xF939 0x1010      LDRSH    R1,[R9, R0, LSL #+1]
   \      0xE26   0x0020             MOVS     R0,R4
   \      0xE28   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0xE2A   0x....'....        BL       get_height
   \      0xE2E   0x4682             MOV      R10,R0
   \      0xE30   0xEBB4 0x0A0A      SUBS     R10,R4,R10
   1398          				if (1 == JudgeNumInterval(my_abs(range_width_left - leftEdge[i]),(CAR_JOIN_templ[range_height_left] * CAR_JOIN_templ[range_height_left]),CAR_JOIN_templ[range_height_left]) && 1 == JudgeNumInterval(my_abs(range_height_left - i),(CAR_JOIN_templ[range_height_left] * CAR_JOIN_templ[range_height_left]),CAR_JOIN_templ[range_height_left]))
   \      0xE34   0xF8BD 0x0008      LDRH     R0,[SP, #+8]
   \      0xE38   0x0021             MOVS     R1,R4
   \      0xE3A   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \      0xE3C   0xF839 0x1011      LDRH     R1,[R9, R1, LSL #+1]
   \      0xE40   0x1A40             SUBS     R0,R0,R1
   \      0xE42   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0xE44   0x....'....        BL       my_abs
   \      0xE48   0x....'....        LDR.W    R11,??DataTable21_2
   \      0xE4C   0xF9BD 0x1002      LDRSH    R1,[SP, #+2]
   \      0xE50   0xF93B 0x2011      LDRSH    R2,[R11, R1, LSL #+1]
   \      0xE54   0xF9BD 0x1002      LDRSH    R1,[SP, #+2]
   \      0xE58   0xF83B 0x1011      LDRH     R1,[R11, R1, LSL #+1]
   \      0xE5C   0xF9BD 0x3002      LDRSH    R3,[SP, #+2]
   \      0xE60   0xF83B 0x3013      LDRH     R3,[R11, R3, LSL #+1]
   \      0xE64   0xFB11 0xF103      SMULBB   R1,R1,R3
   \      0xE68   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \      0xE6A   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0xE6C   0x....'....        BL       JudgeNumInterval
   \      0xE70   0x2801             CMP      R0,#+1
   \      0xE72   0xD176             BNE.N    ??EdgeIrregular_46
   \      0xE74   0xF8BD 0x0002      LDRH     R0,[SP, #+2]
   \      0xE78   0x1B00             SUBS     R0,R0,R4
   \      0xE7A   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0xE7C   0x....'....        BL       my_abs
   \      0xE80   0xF9BD 0x1002      LDRSH    R1,[SP, #+2]
   \      0xE84   0xF93B 0x2011      LDRSH    R2,[R11, R1, LSL #+1]
   \      0xE88   0xF9BD 0x1002      LDRSH    R1,[SP, #+2]
   \      0xE8C   0xF83B 0x1011      LDRH     R1,[R11, R1, LSL #+1]
   \      0xE90   0xF9BD 0x3002      LDRSH    R3,[SP, #+2]
   \      0xE94   0xF83B 0x3013      LDRH     R3,[R11, R3, LSL #+1]
   \      0xE98   0xFB11 0xF103      SMULBB   R1,R1,R3
   \      0xE9C   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \      0xE9E   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0xEA0   0x....'....        BL       JudgeNumInterval
   \      0xEA4   0x2801             CMP      R0,#+1
   \      0xEA6   0xD15C             BNE.N    ??EdgeIrregular_46
   1399          				{
   1400          
   1401          					if (heightbuf >= CAR_JOIN_templ[i] - 1 && heightbuf <= CAR_JOIN_templ[i] + 2)
   \      0xEA8   0x4650             MOV      R0,R10
   \      0xEAA   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0xEAC   0x0021             MOVS     R1,R4
   \      0xEAE   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \      0xEB0   0xF93B 0x1011      LDRSH    R1,[R11, R1, LSL #+1]
   \      0xEB4   0x1E49             SUBS     R1,R1,#+1
   \      0xEB6   0x4288             CMP      R0,R1
   \      0xEB8   0xDB53             BLT.N    ??EdgeIrregular_46
   \      0xEBA   0x0020             MOVS     R0,R4
   \      0xEBC   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0xEBE   0xF93B 0x0010      LDRSH    R0,[R11, R0, LSL #+1]
   \      0xEC2   0x1C80             ADDS     R0,R0,#+2
   \      0xEC4   0xFA0F 0xFA8A      SXTH     R10,R10          ;; SignExt  R10,R10,#+16,#+16
   \      0xEC8   0x4550             CMP      R0,R10
   \      0xECA   0xDB4A             BLT.N    ??EdgeIrregular_46
   1402          					{
   1403          						for (j = i; j >= Max(i - 3, row_left_end); j--)
   \      0xECC   0x46A2             MOV      R10,R4
   \      0xECE   0xE001             B.N      ??EdgeIrregular_48
   \                     ??EdgeIrregular_49: (+1)
   \      0xED0   0xF1BA 0x0A01      SUBS     R10,R10,#+1
   \                     ??EdgeIrregular_48: (+1)
   \      0xED4   0x....'....        LDR.W    R0,??DataTable21
   \      0xED8   0xF9B0 0x1000      LDRSH    R1,[R0, #+0]
   \      0xEDC   0x1EE0             SUBS     R0,R4,#+3
   \      0xEDE   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0xEE0   0x....'....        BL       Max
   \      0xEE4   0x4651             MOV      R1,R10
   \      0xEE6   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \      0xEE8   0x4281             CMP      R1,R0
   \      0xEEA   0xDB3A             BLT.N    ??EdgeIrregular_46
   1404          						{
   1405          							if (leftEdge[j] < leftEdge[i] && my_abs(leftEdge[j] - leftEdge[i]) <= CAR_JOIN_templ[i] && my_abs(leftEdge[i] - leftEdge[i + 1]) <= CAR_JOIN_templ[i])
   \      0xEEC   0x4650             MOV      R0,R10
   \      0xEEE   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0xEF0   0xF939 0x0010      LDRSH    R0,[R9, R0, LSL #+1]
   \      0xEF4   0x0021             MOVS     R1,R4
   \      0xEF6   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \      0xEF8   0xF939 0x1011      LDRSH    R1,[R9, R1, LSL #+1]
   \      0xEFC   0x4288             CMP      R0,R1
   \      0xEFE   0xDAE7             BGE.N    ??EdgeIrregular_49
   \      0xF00   0x4650             MOV      R0,R10
   \      0xF02   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0xF04   0xF839 0x0010      LDRH     R0,[R9, R0, LSL #+1]
   \      0xF08   0x0021             MOVS     R1,R4
   \      0xF0A   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \      0xF0C   0xF839 0x1011      LDRH     R1,[R9, R1, LSL #+1]
   \      0xF10   0x1A40             SUBS     R0,R0,R1
   \      0xF12   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0xF14   0x....'....        BL       my_abs
   \      0xF18   0x0021             MOVS     R1,R4
   \      0xF1A   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \      0xF1C   0xF93B 0x1011      LDRSH    R1,[R11, R1, LSL #+1]
   \      0xF20   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0xF22   0x4281             CMP      R1,R0
   \      0xF24   0xDBD4             BLT.N    ??EdgeIrregular_49
   \      0xF26   0x0020             MOVS     R0,R4
   \      0xF28   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0xF2A   0xF839 0x0010      LDRH     R0,[R9, R0, LSL #+1]
   \      0xF2E   0x0021             MOVS     R1,R4
   \      0xF30   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \      0xF32   0xEB09 0x0141      ADD      R1,R9,R1, LSL #+1
   \      0xF36   0x8849             LDRH     R1,[R1, #+2]
   \      0xF38   0x1A40             SUBS     R0,R0,R1
   \      0xF3A   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0xF3C   0x....'....        BL       my_abs
   \      0xF40   0x0021             MOVS     R1,R4
   \      0xF42   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \      0xF44   0xF93B 0x1011      LDRSH    R1,[R11, R1, LSL #+1]
   \      0xF48   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0xF4A   0x4281             CMP      R1,R0
   \      0xF4C   0xDBC0             BLT.N    ??EdgeIrregular_49
   1406          							{
   1407          								shape_left = 1;
   \      0xF4E   0x2501             MOVS     R5,#+1
   1408          								range_width_left = leftEdge[i];
   \      0xF50   0x0020             MOVS     R0,R4
   \      0xF52   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0xF54   0xF939 0x0010      LDRSH    R0,[R9, R0, LSL #+1]
   \      0xF58   0xF8AD 0x0008      STRH     R0,[SP, #+8]
   1409          								range_height_left = i;
   \      0xF5C   0xF8AD 0x4002      STRH     R4,[SP, #+2]
   1410          								sum_left++;
   \      0xF60   0x1C76             ADDS     R6,R6,#+1
   1411          								break;
   1412          							}
   1413          						}
   1414          					}
   1415          				}
   1416          			}//if
   1417          		}//else if
   1418          
   1419          		if (1 == shape_right)//凸找凹
   \                     ??EdgeIrregular_46: (+1)
   \      0xF62   0x0038             MOVS     R0,R7
   \      0xF64   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0xF66   0x2801             CMP      R0,#+1
   \      0xF68   0xF040 0x8082      BNE.W    ??EdgeIrregular_50
   1420          		{
   1421          			if (i > row_right_end && i <= row_right_begin)
   \      0xF6C   0x....'....        LDR.W    R0,??DataTable21_3
   \      0xF70   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \      0xF74   0x0021             MOVS     R1,R4
   \      0xF76   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \      0xF78   0x4288             CMP      R0,R1
   \      0xF7A   0xF280 0x8135      BGE.W    ??EdgeIrregular_51
   \      0xF7E   0x....'....        LDR.W    R0,??DataTable21_4
   \      0xF82   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \      0xF86   0x0021             MOVS     R1,R4
   \      0xF88   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \      0xF8A   0x4288             CMP      R0,R1
   \      0xF8C   0xF2C0 0x812C      BLT.W    ??EdgeIrregular_51
   1422          			{
   1423          				widthbuf = rightEdge[i] - rightEdge[i - 1];
   \      0xF90   0x....'....        LDR.W    R9,??DataTable21_5
   \      0xF94   0x0020             MOVS     R0,R4
   \      0xF96   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0xF98   0xF839 0x0010      LDRH     R0,[R9, R0, LSL #+1]
   \      0xF9C   0x0021             MOVS     R1,R4
   \      0xF9E   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \      0xFA0   0xEB09 0x0141      ADD      R1,R9,R1, LSL #+1
   \      0xFA4   0xF831 0xAC02      LDRH     R10,[R1, #-2]
   \      0xFA8   0xEBB0 0x0A0A      SUBS     R10,R0,R10
   1424          				if (1 == JudgeNumInterval(my_abs(range_width_right - rightEdge[i]), (CAR_JOIN_templ[range_height_right] * CAR_JOIN_templ[range_height_right]), CAR_JOIN_templ[range_height_right]) && 1 == JudgeNumInterval(my_abs(range_height_right - i), (CAR_JOIN_templ[range_height_right] * CAR_JOIN_templ[range_height_right]), CAR_JOIN_templ[range_height_right]))
   \      0xFAC   0xF8BD 0x0006      LDRH     R0,[SP, #+6]
   \      0xFB0   0x0021             MOVS     R1,R4
   \      0xFB2   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \      0xFB4   0xF839 0x1011      LDRH     R1,[R9, R1, LSL #+1]
   \      0xFB8   0x1A40             SUBS     R0,R0,R1
   \      0xFBA   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0xFBC   0x....'....        BL       my_abs
   \      0xFC0   0x....'....        LDR.W    R11,??DataTable21_2
   \      0xFC4   0xF9BD 0x1000      LDRSH    R1,[SP, #+0]
   \      0xFC8   0xF93B 0x2011      LDRSH    R2,[R11, R1, LSL #+1]
   \      0xFCC   0xF9BD 0x1000      LDRSH    R1,[SP, #+0]
   \      0xFD0   0xF83B 0x1011      LDRH     R1,[R11, R1, LSL #+1]
   \      0xFD4   0xF9BD 0x3000      LDRSH    R3,[SP, #+0]
   \      0xFD8   0xF83B 0x3013      LDRH     R3,[R11, R3, LSL #+1]
   \      0xFDC   0xFB11 0xF103      SMULBB   R1,R1,R3
   \      0xFE0   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \      0xFE2   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0xFE4   0x....'....        BL       JudgeNumInterval
   \      0xFE8   0x2801             CMP      R0,#+1
   \      0xFEA   0xF040 0x80FD      BNE.W    ??EdgeIrregular_51
   \      0xFEE   0xF8BD 0x0000      LDRH     R0,[SP, #+0]
   \      0xFF2   0x1B00             SUBS     R0,R0,R4
   \      0xFF4   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0xFF6   0x....'....        BL       my_abs
   \      0xFFA   0xF9BD 0x1000      LDRSH    R1,[SP, #+0]
   \      0xFFE   0xF93B 0x2011      LDRSH    R2,[R11, R1, LSL #+1]
   \     0x1002   0xF9BD 0x1000      LDRSH    R1,[SP, #+0]
   \     0x1006   0xF83B 0x1011      LDRH     R1,[R11, R1, LSL #+1]
   \     0x100A   0xF9BD 0x3000      LDRSH    R3,[SP, #+0]
   \     0x100E   0xF83B 0x3013      LDRH     R3,[R11, R3, LSL #+1]
   \     0x1012   0xFB11 0xF103      SMULBB   R1,R1,R3
   \     0x1016   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \     0x1018   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \     0x101A   0x....'....        BL       JudgeNumInterval
   \     0x101E   0x2801             CMP      R0,#+1
   \     0x1020   0xF040 0x80E2      BNE.W    ??EdgeIrregular_51
   1425          				{
   1426          					if (widthbuf >= CAR_JOIN_templ[i] && my_abs(widthbuf) <= CAR_JOIN_templ[i] + CAR_JOIN_templ[i])
   \     0x1024   0x4650             MOV      R0,R10
   \     0x1026   0x0021             MOVS     R1,R4
   \     0x1028   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \     0x102A   0xF93B 0x1011      LDRSH    R1,[R11, R1, LSL #+1]
   \     0x102E   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \     0x1030   0x4288             CMP      R0,R1
   \     0x1032   0xF2C0 0x80D9      BLT.W    ??EdgeIrregular_51
   \     0x1036   0x4650             MOV      R0,R10
   \     0x1038   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \     0x103A   0x....'....        BL       my_abs
   \     0x103E   0x0021             MOVS     R1,R4
   \     0x1040   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \     0x1042   0xF93B 0x1011      LDRSH    R1,[R11, R1, LSL #+1]
   \     0x1046   0x0022             MOVS     R2,R4
   \     0x1048   0xB212             SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
   \     0x104A   0xF93B 0x2012      LDRSH    R2,[R11, R2, LSL #+1]
   \     0x104E   0x1851             ADDS     R1,R2,R1
   \     0x1050   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \     0x1052   0x4281             CMP      R1,R0
   \     0x1054   0xF2C0 0x80C8      BLT.W    ??EdgeIrregular_51
   1427          					{
   1428          						shape_right = 0;
   \     0x1058   0x2700             MOVS     R7,#+0
   1429          						range_width_right = rightEdge[i];
   \     0x105A   0x0020             MOVS     R0,R4
   \     0x105C   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \     0x105E   0xF939 0x0010      LDRSH    R0,[R9, R0, LSL #+1]
   \     0x1062   0xF8AD 0x0006      STRH     R0,[SP, #+6]
   1430          						range_height_right = i;
   \     0x1066   0xF8AD 0x4000      STRH     R4,[SP, #+0]
   1431          						sum_right++;
   \     0x106A   0xF118 0x0801      ADDS     R8,R8,#+1
   \     0x106E   0xE0BB             B.N      ??EdgeIrregular_51
   1432          					}
   1433          				}
   1434          			}
   1435          		}
   1436          		else if (0 == shape_right)//凹找凸
   \                     ??EdgeIrregular_50: (+1)
   \     0x1070   0x0038             MOVS     R0,R7
   \     0x1072   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \     0x1074   0x2800             CMP      R0,#+0
   \     0x1076   0xF040 0x80B7      BNE.W    ??EdgeIrregular_51
   1437          		{
   1438          			if (i > row_right_end && i <= row_right_begin)
   \     0x107A   0x....'....        LDR.W    R0,??DataTable21_3
   \     0x107E   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \     0x1082   0x0021             MOVS     R1,R4
   \     0x1084   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \     0x1086   0x4288             CMP      R0,R1
   \     0x1088   0xF280 0x80AE      BGE.W    ??EdgeIrregular_51
   \     0x108C   0x....'....        LDR.W    R0,??DataTable21_4
   \     0x1090   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \     0x1094   0x0021             MOVS     R1,R4
   \     0x1096   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \     0x1098   0x4288             CMP      R0,R1
   \     0x109A   0xF2C0 0x80A5      BLT.W    ??EdgeIrregular_51
   1439          			{
   1440          				heightbuf = (i) - (get_height(i, rightEdge[i], IMG_TOP));
   \     0x109E   0x....'....        LDR.W    R9,??DataTable21_5
   \     0x10A2   0x220A             MOVS     R2,#+10
   \     0x10A4   0x0020             MOVS     R0,R4
   \     0x10A6   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \     0x10A8   0xF939 0x1010      LDRSH    R1,[R9, R0, LSL #+1]
   \     0x10AC   0x0020             MOVS     R0,R4
   \     0x10AE   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \     0x10B0   0x....'....        BL       get_height
   \     0x10B4   0x4682             MOV      R10,R0
   \     0x10B6   0xEBB4 0x0A0A      SUBS     R10,R4,R10
   1441          				if (1 == JudgeNumInterval(my_abs(range_width_right - rightEdge[i]), (CAR_JOIN_templ[range_height_right] * CAR_JOIN_templ[range_height_right]), CAR_JOIN_templ[range_height_right]) && 1 == JudgeNumInterval(my_abs(range_height_right - i), (CAR_JOIN_templ[range_height_right] * CAR_JOIN_templ[range_height_right]), CAR_JOIN_templ[range_height_right]))
   \     0x10BA   0xF8BD 0x0006      LDRH     R0,[SP, #+6]
   \     0x10BE   0x0021             MOVS     R1,R4
   \     0x10C0   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \     0x10C2   0xF839 0x1011      LDRH     R1,[R9, R1, LSL #+1]
   \     0x10C6   0x1A40             SUBS     R0,R0,R1
   \     0x10C8   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \     0x10CA   0x....'....        BL       my_abs
   \     0x10CE   0x....'....        LDR.W    R11,??DataTable21_2
   \     0x10D2   0xF9BD 0x1000      LDRSH    R1,[SP, #+0]
   \     0x10D6   0xF93B 0x2011      LDRSH    R2,[R11, R1, LSL #+1]
   \     0x10DA   0xF9BD 0x1000      LDRSH    R1,[SP, #+0]
   \     0x10DE   0xF83B 0x1011      LDRH     R1,[R11, R1, LSL #+1]
   \     0x10E2   0xF9BD 0x3000      LDRSH    R3,[SP, #+0]
   \     0x10E6   0xF83B 0x3013      LDRH     R3,[R11, R3, LSL #+1]
   \     0x10EA   0xFB11 0xF103      SMULBB   R1,R1,R3
   \     0x10EE   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \     0x10F0   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \     0x10F2   0x....'....        BL       JudgeNumInterval
   \     0x10F6   0x2801             CMP      R0,#+1
   \     0x10F8   0xD176             BNE.N    ??EdgeIrregular_51
   \     0x10FA   0xF8BD 0x0000      LDRH     R0,[SP, #+0]
   \     0x10FE   0x1B00             SUBS     R0,R0,R4
   \     0x1100   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \     0x1102   0x....'....        BL       my_abs
   \     0x1106   0xF9BD 0x1000      LDRSH    R1,[SP, #+0]
   \     0x110A   0xF93B 0x2011      LDRSH    R2,[R11, R1, LSL #+1]
   \     0x110E   0xF9BD 0x1000      LDRSH    R1,[SP, #+0]
   \     0x1112   0xF83B 0x1011      LDRH     R1,[R11, R1, LSL #+1]
   \     0x1116   0xF9BD 0x3000      LDRSH    R3,[SP, #+0]
   \     0x111A   0xF83B 0x3013      LDRH     R3,[R11, R3, LSL #+1]
   \     0x111E   0xFB11 0xF103      SMULBB   R1,R1,R3
   \     0x1122   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \     0x1124   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \     0x1126   0x....'....        BL       JudgeNumInterval
   \     0x112A   0x2801             CMP      R0,#+1
   \     0x112C   0xD15C             BNE.N    ??EdgeIrregular_51
   1442          				{
   1443          					if (heightbuf >= CAR_JOIN_templ[i] - 1 && heightbuf <= CAR_JOIN_templ[i] + 2)
   \     0x112E   0x4650             MOV      R0,R10
   \     0x1130   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \     0x1132   0x0021             MOVS     R1,R4
   \     0x1134   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \     0x1136   0xF93B 0x1011      LDRSH    R1,[R11, R1, LSL #+1]
   \     0x113A   0x1E49             SUBS     R1,R1,#+1
   \     0x113C   0x4288             CMP      R0,R1
   \     0x113E   0xDB53             BLT.N    ??EdgeIrregular_51
   \     0x1140   0x0020             MOVS     R0,R4
   \     0x1142   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \     0x1144   0xF93B 0x0010      LDRSH    R0,[R11, R0, LSL #+1]
   \     0x1148   0x1C80             ADDS     R0,R0,#+2
   \     0x114A   0xFA0F 0xFA8A      SXTH     R10,R10          ;; SignExt  R10,R10,#+16,#+16
   \     0x114E   0x4550             CMP      R0,R10
   \     0x1150   0xDB4A             BLT.N    ??EdgeIrregular_51
   1444          					{
   1445          						for (j = i; j >= Max(i - 3, row_right_end); j--)
   \     0x1152   0x46A2             MOV      R10,R4
   \     0x1154   0xE001             B.N      ??EdgeIrregular_52
   \                     ??EdgeIrregular_53: (+1)
   \     0x1156   0xF1BA 0x0A01      SUBS     R10,R10,#+1
   \                     ??EdgeIrregular_52: (+1)
   \     0x115A   0x....             LDR.N    R0,??DataTable21_3
   \     0x115C   0xF9B0 0x1000      LDRSH    R1,[R0, #+0]
   \     0x1160   0x1EE0             SUBS     R0,R4,#+3
   \     0x1162   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \     0x1164   0x....'....        BL       Max
   \     0x1168   0x4651             MOV      R1,R10
   \     0x116A   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \     0x116C   0x4281             CMP      R1,R0
   \     0x116E   0xDB3B             BLT.N    ??EdgeIrregular_51
   1446          						{
   1447          							if (rightEdge[j] > rightEdge[i] && my_abs(rightEdge[j] - rightEdge[i]) <= CAR_JOIN_templ[i] && my_abs(rightEdge[i] - rightEdge[i + 1]) <= CAR_JOIN_templ[i])
   \     0x1170   0x0020             MOVS     R0,R4
   \     0x1172   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \     0x1174   0xF939 0x0010      LDRSH    R0,[R9, R0, LSL #+1]
   \     0x1178   0x4651             MOV      R1,R10
   \     0x117A   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \     0x117C   0xF939 0x1011      LDRSH    R1,[R9, R1, LSL #+1]
   \     0x1180   0x4288             CMP      R0,R1
   \     0x1182   0xDAE8             BGE.N    ??EdgeIrregular_53
   \     0x1184   0x4650             MOV      R0,R10
   \     0x1186   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \     0x1188   0xF839 0x0010      LDRH     R0,[R9, R0, LSL #+1]
   \     0x118C   0x0021             MOVS     R1,R4
   \     0x118E   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \     0x1190   0xF839 0x1011      LDRH     R1,[R9, R1, LSL #+1]
   \     0x1194   0x1A40             SUBS     R0,R0,R1
   \     0x1196   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \     0x1198   0x....'....        BL       my_abs
   \     0x119C   0x0021             MOVS     R1,R4
   \     0x119E   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \     0x11A0   0xF93B 0x1011      LDRSH    R1,[R11, R1, LSL #+1]
   \     0x11A4   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \     0x11A6   0x4281             CMP      R1,R0
   \     0x11A8   0xDBD5             BLT.N    ??EdgeIrregular_53
   \     0x11AA   0x0020             MOVS     R0,R4
   \     0x11AC   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \     0x11AE   0xF839 0x0010      LDRH     R0,[R9, R0, LSL #+1]
   \     0x11B2   0x0021             MOVS     R1,R4
   \     0x11B4   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \     0x11B6   0xEB09 0x0141      ADD      R1,R9,R1, LSL #+1
   \     0x11BA   0x8849             LDRH     R1,[R1, #+2]
   \     0x11BC   0x1A40             SUBS     R0,R0,R1
   \     0x11BE   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \     0x11C0   0x....'....        BL       my_abs
   \     0x11C4   0x0021             MOVS     R1,R4
   \     0x11C6   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \     0x11C8   0xF93B 0x1011      LDRSH    R1,[R11, R1, LSL #+1]
   \     0x11CC   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \     0x11CE   0x4281             CMP      R1,R0
   \     0x11D0   0xDBC1             BLT.N    ??EdgeIrregular_53
   1448          							{
   1449          								shape_right = 1;
   \     0x11D2   0x2701             MOVS     R7,#+1
   1450          								range_width_right = rightEdge[i];
   \     0x11D4   0x0020             MOVS     R0,R4
   \     0x11D6   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \     0x11D8   0xF939 0x0010      LDRSH    R0,[R9, R0, LSL #+1]
   \     0x11DC   0xF8AD 0x0006      STRH     R0,[SP, #+6]
   1451          								range_height_right = i;
   \     0x11E0   0xF8AD 0x4000      STRH     R4,[SP, #+0]
   1452          								sum_right++;
   \     0x11E4   0xF118 0x0801      ADDS     R8,R8,#+1
   1453          								break;
   1454          							}
   1455          						}
   1456          					}
   1457          				}
   1458          			}//if
   1459          		}//else
   1460          
   1461          		if (sum_left >= 2 && sum_right >= 2 && i >= FWD_40CM)
   \                     ??EdgeIrregular_51: (+1)
   \     0x11E8   0x0030             MOVS     R0,R6
   \     0x11EA   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \     0x11EC   0x2802             CMP      R0,#+2
   \     0x11EE   0xF6FF 0xAC09      BLT.W    ??EdgeIrregular_35
   \     0x11F2   0x4640             MOV      R0,R8
   \     0x11F4   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \     0x11F6   0x2802             CMP      R0,#+2
   \     0x11F8   0xF6FF 0xAC04      BLT.W    ??EdgeIrregular_35
   \     0x11FC   0x0020             MOVS     R0,R4
   \     0x11FE   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \     0x1200   0x281C             CMP      R0,#+28
   \     0x1202   0xF6FF 0xABFF      BLT.W    ??EdgeIrregular_35
   1462          		{
   1463          			return 100;
   \     0x1206   0x2064             MOVS     R0,#+100
   \     0x1208   0xE003             B.N      ??EdgeIrregular_3
   1464          		}
   1465          		/**********************************************二次检测结束**********************************************/
   1466          	}//for
   1467          
   1468          	/**********************************************双边检测结束**********************************************/
   1469          	return (sum_left + sum_right);
   \                     ??EdgeIrregular_36: (+1)
   \     0x120A   0xEB18 0x0606      ADDS     R6,R8,R6
   \     0x120E   0x0030             MOVS     R0,R6
   \     0x1210   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \                     ??EdgeIrregular_3: (+1)
   \     0x1212   0xE8BD 0x8FFE      POP      {R1-R11,PC}      ;; return
   1470          }
   1471          
   1472          //汇车区标志位

   \                                 In section .text, align 2, keep-with-next
   1473          void CarJoinArea_Flag(void)
   1474          {
   1475          }
   \                     CarJoinArea_Flag: (+1)
   \        0x0   0x4770             BX       LR               ;; return
   1476          
   1477          //汇车区补线

   \                                 In section .text, align 2, keep-with-next
   1478          void InCarJoinArea(void)
   1479          {
   1480          }
   \                     InCarJoinArea: (+1)
   \        0x0   0x4770             BX       LR               ;; return
   1481          //前瞻预判 保证前瞻不丢失信息

   \                                 In section .text, align 2, keep-with-next
   1482          void FWD_Compensate(void)
   1483          {
   \                     FWD_Compensate: (+1)
   \        0x0   0xB5E0             PUSH     {R5-R7,LR}
   1484          	if (row_end_center < FWD_45CM)
   \        0x2   0x....             LDR.N    R0,??DataTable21_6
   \        0x4   0xF9B0 0x1000      LDRSH    R1,[R0, #+0]
   \        0x8   0x291A             CMP      R1,#+26
   \        0xA   0xDB27             BLT.N    ??FWD_Compensate_0
   1485          	{
   1486          		return;
   1487          	}
   1488          	else
   1489          	{
   1490          		if (row_end_center > IMG_BEGIN)
   \                     ??FWD_Compensate_1: (+1)
   \        0xC   0xF9B0 0x1000      LDRSH    R1,[R0, #+0]
   \       0x10   0x2938             CMP      R1,#+56
   \       0x12   0xDB11             BLT.N    ??FWD_Compensate_2
   1491          		{
   1492          			AlterParam_Line(row_end_center, FWD_45CM, row_end_center, img_centers[row_end_center], IMG_BEGIN, IMG_COL_CENTER, img_centers);
   \       0x14   0x....             LDR.N    R1,??DataTable21_7
   \       0x16   0x9102             STR      R1,[SP, #+8]
   \       0x18   0x224F             MOVS     R2,#+79
   \       0x1A   0x9201             STR      R2,[SP, #+4]
   \       0x1C   0x2237             MOVS     R2,#+55
   \       0x1E   0x9200             STR      R2,[SP, #+0]
   \       0x20   0xF9B0 0x2000      LDRSH    R2,[R0, #+0]
   \       0x24   0xF931 0x3012      LDRSH    R3,[R1, R2, LSL #+1]
   \       0x28   0xF9B0 0x2000      LDRSH    R2,[R0, #+0]
   \       0x2C   0x211A             MOVS     R1,#+26
   \       0x2E   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \       0x32   0x....'....        BL       AlterParam_Line
   \       0x36   0xE011             B.N      ??FWD_Compensate_3
   1493          		}
   1494          		else
   1495          		{
   1496          			AlterParam_Line(row_end_center, FWD_45CM, row_end_center, img_centers[row_end_center], IMG_BEGIN, img_centers[IMG_BEGIN], img_centers);
   \                     ??FWD_Compensate_2: (+1)
   \       0x38   0x....             LDR.N    R1,??DataTable21_7
   \       0x3A   0x9102             STR      R1,[SP, #+8]
   \       0x3C   0xF9B1 0x206E      LDRSH    R2,[R1, #+110]
   \       0x40   0x9201             STR      R2,[SP, #+4]
   \       0x42   0x2237             MOVS     R2,#+55
   \       0x44   0x9200             STR      R2,[SP, #+0]
   \       0x46   0xF9B0 0x2000      LDRSH    R2,[R0, #+0]
   \       0x4A   0xF931 0x3012      LDRSH    R3,[R1, R2, LSL #+1]
   \       0x4E   0xF9B0 0x2000      LDRSH    R2,[R0, #+0]
   \       0x52   0x211A             MOVS     R1,#+26
   \       0x54   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \       0x58   0x....'....        BL       AlterParam_Line
   1497          		}
   1498          	}
   1499          }
   \                     ??FWD_Compensate_3: (+1)
   \                     ??FWD_Compensate_0: (+1)
   \       0x5C   0xBD07             POP      {R0-R2,PC}       ;; return
   1500          //中心线滤波

   \                                 In section .text, align 2, keep-with-next
   1501          void CenterFilter(void)
   1502          {
   1503          	int16 i;
   1504          	for (i = IMG_BOTTOM - 1; i >= row_end_center; i--)
   \                     CenterFilter: (+1)
   \        0x0   0x2144             MOVS     R1,#+68
   \        0x2   0xE016             B.N      ??CenterFilter_0
   1505          	{
   1506          		if (BLACK == imgbuff[i][img_centers[i]])
   \                     ??CenterFilter_1: (+1)
   \        0x4   0x....             LDR.N    R2,??DataTable21_7
   \        0x6   0x....             LDR.N    R0,??DataTable21_8
   \        0x8   0x2350             MOVS     R3,#+80
   \        0xA   0xFB11 0xF303      SMULBB   R3,R1,R3
   \        0xE   0x4418             ADD      R0,R0,R3
   \       0x10   0x000B             MOVS     R3,R1
   \       0x12   0xB21B             SXTH     R3,R3            ;; SignExt  R3,R3,#+16,#+16
   \       0x14   0xF932 0x3013      LDRSH    R3,[R2, R3, LSL #+1]
   \       0x18   0x5CC0             LDRB     R0,[R0, R3]
   \       0x1A   0x2800             CMP      R0,#+0
   \       0x1C   0xD108             BNE.N    ??CenterFilter_2
   1507          		{
   1508          			img_centers[i] = img_centers[i + 1];
   \       0x1E   0x0008             MOVS     R0,R1
   \       0x20   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \       0x22   0xEB02 0x0040      ADD      R0,R2,R0, LSL #+1
   \       0x26   0x8840             LDRH     R0,[R0, #+2]
   \       0x28   0x000B             MOVS     R3,R1
   \       0x2A   0xB21B             SXTH     R3,R3            ;; SignExt  R3,R3,#+16,#+16
   \       0x2C   0xF822 0x0013      STRH     R0,[R2, R3, LSL #+1]
   1509          		}
   1510          	}
   \                     ??CenterFilter_2: (+1)
   \       0x30   0x1E49             SUBS     R1,R1,#+1
   \                     ??CenterFilter_0: (+1)
   \       0x32   0x0008             MOVS     R0,R1
   \       0x34   0x....             LDR.N    R2,??DataTable21_6
   \       0x36   0xF9B2 0x2000      LDRSH    R2,[R2, #+0]
   \       0x3A   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \       0x3C   0x4290             CMP      R0,R2
   \       0x3E   0xDAE1             BGE.N    ??CenterFilter_1
   1511          }
   \       0x40   0x4770             BX       LR               ;; return
   1512          //加减速标志位

   \                                 In section .text, align 2, keep-with-next
   1513          void JudgeFast(void)
   1514          {
   \                     JudgeFast: (+1)
   \        0x0   0xB510             PUSH     {R4,LR}
   1515            int16 col;
   1516          
   1517            for(col = 75;col <= 85;col++)
   \        0x2   0x244B             MOVS     R4,#+75
   \        0x4   0xE00A             B.N      ??JudgeFast_0
   1518            {
   1519              FastVal += get_height(IMG_BOTTOM,col,IMG_TOP);
   \                     ??JudgeFast_1: (+1)
   \        0x6   0x220A             MOVS     R2,#+10
   \        0x8   0x0021             MOVS     R1,R4
   \        0xA   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \        0xC   0x2045             MOVS     R0,#+69
   \        0xE   0x....'....        BL       get_height
   \       0x12   0x....             LDR.N    R1,??DataTable21_9
   \       0x14   0x880A             LDRH     R2,[R1, #+0]
   \       0x16   0x1880             ADDS     R0,R0,R2
   \       0x18   0x8008             STRH     R0,[R1, #+0]
   1520            }
   \       0x1A   0x1C64             ADDS     R4,R4,#+1
   \                     ??JudgeFast_0: (+1)
   \       0x1C   0x0020             MOVS     R0,R4
   \       0x1E   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \       0x20   0x2856             CMP      R0,#+86
   \       0x22   0xDBF0             BLT.N    ??JudgeFast_1
   1521            
   1522            FastVal = (int16)(FastVal / 10);
   \       0x24   0x....             LDR.N    R0,??DataTable21_9
   \       0x26   0xF9B0 0x1000      LDRSH    R1,[R0, #+0]
   \       0x2A   0x220A             MOVS     R2,#+10
   \       0x2C   0xFB91 0xF1F2      SDIV     R1,R1,R2
   \       0x30   0x8001             STRH     R1,[R0, #+0]
   1523            
   1524            FastVal = FastVal - IMG_TOP;
   \       0x32   0x8801             LDRH     R1,[R0, #+0]
   \       0x34   0x390A             SUBS     R1,R1,#+10
   \       0x36   0x8001             STRH     R1,[R0, #+0]
   1525            if(FastVal <= 0)
   \       0x38   0xF9B0 0x1000      LDRSH    R1,[R0, #+0]
   \       0x3C   0x2901             CMP      R1,#+1
   \       0x3E   0xDA01             BGE.N    ??JudgeFast_2
   1526            { FastVal = 0;}
   \       0x40   0x2100             MOVS     R1,#+0
   \       0x42   0x8001             STRH     R1,[R0, #+0]
   1527          }
   \                     ??JudgeFast_2: (+1)
   \       0x44   0xBD10             POP      {R4,PC}          ;; return
   1528          //初始行驶双边停靠

   \                                 In section .text, align 2, keep-with-next
   1529          void FirstCarRun(void)
   1530          {
   1531          }
   \                     FirstCarRun: (+1)
   \        0x0   0x4770             BX       LR               ;; return
   1532          //斑马线判定

   \                                 In section .text, align 2, keep-with-next
   1533          int16 zebra_Flag()
   1534          {
   1535            return 0;
   \                     zebra_Flag: (+1)
   \        0x0   0x2000             MOVS     R0,#+0
   \        0x2   0x4770             BX       LR               ;; return
   1536          }
   1537          
   1538          

   \                                 In section .text, align 2, keep-with-next
   1539          void get_img_center(void)
   1540          {
   \                     get_img_center: (+1)
   \        0x0   0xB510             PUSH     {R4,LR}
   1541            static int16 img_cnt = 0;
   1542            //===========================================忽略初始五帧图像===========================================//
   1543            if(img_cnt < 5)
   \        0x2   0x....             LDR.N    R4,??DataTable21_10
   \        0x4   0xF9B4 0x0000      LDRSH    R0,[R4, #+0]
   \        0x8   0x2805             CMP      R0,#+5
   \        0xA   0xDA19             BGE.N    ??get_img_center_0
   1544            {
   1545              if(0 == img_cnt)
   \        0xC   0xF9B4 0x0000      LDRSH    R0,[R4, #+0]
   \       0x10   0x2800             CMP      R0,#+0
   \       0x12   0xD111             BNE.N    ??get_img_center_1
   1546              {
   1547                AlterParam_Clear(IMG_ROWS - 1,0,leftEdge,IMG_LEFT);
   \       0x14   0x2301             MOVS     R3,#+1
   \       0x16   0x....             LDR.N    R2,??DataTable21_1
   \       0x18   0x2100             MOVS     R1,#+0
   \       0x1A   0x203B             MOVS     R0,#+59
   \       0x1C   0x....'....        BL       AlterParam_Clear
   1548                AlterParam_Clear(IMG_ROWS - 1,0,rightEdge,IMG_RIGHT);
   \       0x20   0x239E             MOVS     R3,#+158
   \       0x22   0x....             LDR.N    R2,??DataTable21_5
   \       0x24   0x2100             MOVS     R1,#+0
   \       0x26   0x203B             MOVS     R0,#+59
   \       0x28   0x....'....        BL       AlterParam_Clear
   1549                AlterParam_Clear(IMG_ROWS - 1,0,img_centers,IMG_COL_CENTER);
   \       0x2C   0x234F             MOVS     R3,#+79
   \       0x2E   0x....             LDR.N    R2,??DataTable21_7
   \       0x30   0x2100             MOVS     R1,#+0
   \       0x32   0x203B             MOVS     R0,#+59
   \       0x34   0x....'....        BL       AlterParam_Clear
   1550              }
   1551              img_cnt++;
   \                     ??get_img_center_1: (+1)
   \       0x38   0x8820             LDRH     R0,[R4, #+0]
   \       0x3A   0x1C40             ADDS     R0,R0,#+1
   \       0x3C   0x8020             STRH     R0,[R4, #+0]
   1552              return;
   \       0x3E   0xE045             B.N      ??get_img_center_2
   1553            }
   1554            //===========================================忽略初始五帧图像===========================================//
   1555            
   1556            //===========================================初始化边缘信息===========================================//
   1557            
   1558            ImageParamInit();
   \                     ??get_img_center_0: (+1)
   \       0x40   0x....'....        BL       ImageParamInit
   1559            JudgeFast();
   \       0x44   0x....'....        BL       JudgeFast
   1560            
   1561            fstpoint = GetFirstCenter();
   \       0x48   0x....             LDR.N    R4,??DataTable21_11
   \       0x4A   0x....'....        BL       GetFirstCenter
   \       0x4E   0x8020             STRH     R0,[R4, #+0]
   1562            if(-1 == fstpoint)
   \       0x50   0xF9B4 0x0000      LDRSH    R0,[R4, #+0]
   \       0x54   0xF110 0x0F01      CMN      R0,#+1
   \       0x58   0xD038             BEQ.N    ??get_img_center_2
   1563            {
   1564              return;
   1565            }
   1566            EdgeInit();
   \                     ??get_img_center_3: (+1)
   \       0x5A   0x....'....        BL       EdgeInit
   1567            
   1568            //===========================================初始化边缘信息===========================================//
   1569            
   1570            
   1571            //===========================================标志位判断开始===========================================//
   1572            leftFold = GetEdgeInflex(row_left_begin, row_left_end, leftEdge,IMG_LEFT);
   \       0x5E   0x2301             MOVS     R3,#+1
   \       0x60   0x....             LDR.N    R2,??DataTable21_1
   \       0x62   0x....             LDR.N    R0,??DataTable21
   \       0x64   0xF9B0 0x1000      LDRSH    R1,[R0, #+0]
   \       0x68   0x....             LDR.N    R0,??DataTable21_12
   \       0x6A   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \       0x6E   0x....'....        BL       GetEdgeInflex
   \       0x72   0x....             LDR.N    R1,??DataTable21_13
   \       0x74   0x8008             STRH     R0,[R1, #+0]
   1573            rightFold = GetEdgeInflex(row_right_begin, row_right_end, rightEdge,IMG_RIGHT);  
   \       0x76   0x239E             MOVS     R3,#+158
   \       0x78   0x....             LDR.N    R2,??DataTable21_5
   \       0x7A   0x....             LDR.N    R0,??DataTable21_3
   \       0x7C   0xF9B0 0x1000      LDRSH    R1,[R0, #+0]
   \       0x80   0x....             LDR.N    R0,??DataTable21_4
   \       0x82   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \       0x86   0x....'....        BL       GetEdgeInflex
   \       0x8A   0x....             LDR.N    R1,??DataTable21_14
   \       0x8C   0x8008             STRH     R0,[R1, #+0]
   1574            
   1575            //...省略...//
   1576            //===========================================标志位判断结束===========================================//
   1577            
   1578            //...省略...//
   1579            //===========================================矫正边缘开始===========================================//
   1580            
   1581            //...省略...//
   1582            //===========================================矫正边缘结束===========================================//
   1583          
   1584            for(int16 i = IMG_BOTTOM;i >= IMG_TOP;i--)
   \       0x8E   0x2045             MOVS     R0,#+69
   \       0x90   0xE018             B.N      ??get_img_center_4
   1585            {
   1586              if(img_centers[i] >= IMG_RIGHT)
   1587              { img_centers[i] = IMG_RIGHT; }
   1588              else if(img_centers[i] <= IMG_LEFT)
   \                     ??get_img_center_5: (+1)
   \       0x92   0x0002             MOVS     R2,R0
   \       0x94   0xB212             SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
   \       0x96   0xF931 0x2012      LDRSH    R2,[R1, R2, LSL #+1]
   \       0x9A   0x2A02             CMP      R2,#+2
   \       0x9C   0xDA11             BGE.N    ??get_img_center_6
   1589              { img_centers[i] = IMG_LEFT; }
   \       0x9E   0x2201             MOVS     R2,#+1
   \       0xA0   0x0003             MOVS     R3,R0
   \       0xA2   0xB21B             SXTH     R3,R3            ;; SignExt  R3,R3,#+16,#+16
   \       0xA4   0xF821 0x2013      STRH     R2,[R1, R3, LSL #+1]
   \       0xA8   0xE00B             B.N      ??get_img_center_6
   \                     ??get_img_center_7: (+1)
   \       0xAA   0x....             LDR.N    R1,??DataTable21_7
   \       0xAC   0x0002             MOVS     R2,R0
   \       0xAE   0xB212             SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
   \       0xB0   0xF931 0x2012      LDRSH    R2,[R1, R2, LSL #+1]
   \       0xB4   0x2A9E             CMP      R2,#+158
   \       0xB6   0xDBEC             BLT.N    ??get_img_center_5
   \       0xB8   0x229E             MOVS     R2,#+158
   \       0xBA   0x0003             MOVS     R3,R0
   \       0xBC   0xB21B             SXTH     R3,R3            ;; SignExt  R3,R3,#+16,#+16
   \       0xBE   0xF821 0x2013      STRH     R2,[R1, R3, LSL #+1]
   1590            }
   \                     ??get_img_center_6: (+1)
   \       0xC2   0x1E40             SUBS     R0,R0,#+1
   \                     ??get_img_center_4: (+1)
   \       0xC4   0x0001             MOVS     R1,R0
   \       0xC6   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \       0xC8   0x290A             CMP      R1,#+10
   \       0xCA   0xDAEE             BGE.N    ??get_img_center_7
   1591          }
   \                     ??get_img_center_8: (+1)
   \                     ??get_img_center_2: (+1)
   \       0xCC   0xBD10             POP      {R4,PC}          ;; return

   \                                 In section .bss, align 2
   \                     `get_img_center::img_cnt`:
   \        0x0                      DS8 2
   1592          
   1593          

   \                                 In section .text, align 2, keep-with-next
   1594          int16 get_img_error()
   1595          {
   \                     get_img_error: (+1)
   \        0x0   0xB57C             PUSH     {R2-R6,LR}
   1596            int16 FWD_BUF[3];
   1597            int16 out_val; 
   1598            
   1599            FWD_BUF[0] = FWD_45CM;
   \        0x2   0x201A             MOVS     R0,#+26
   \        0x4   0xF8AD 0x0000      STRH     R0,[SP, #+0]
   1600            FWD_BUF[1] = FWD_BUF[0] + 1;
   \        0x8   0x466C             MOV      R4,SP
   \        0xA   0xF8BD 0x0000      LDRH     R0,[SP, #+0]
   \        0xE   0x1C40             ADDS     R0,R0,#+1
   \       0x10   0x8060             STRH     R0,[R4, #+2]
   1601            FWD_BUF[2] = FWD_BUF[0] + 2;
   \       0x12   0xF8BD 0x0000      LDRH     R0,[SP, #+0]
   \       0x16   0x1C80             ADDS     R0,R0,#+2
   \       0x18   0x80A0             STRH     R0,[R4, #+4]
   1602            
   1603            out_val = (int16)(img_centers[FWD_BUF[0]] * 0.5f + img_centers[FWD_BUF[1]] *0.3f + img_centers[FWD_BUF[2]] * 0.2f);
   \       0x1A   0x....             LDR.N    R5,??DataTable21_7
   \       0x1C   0xF9BD 0x0000      LDRSH    R0,[SP, #+0]
   \       0x20   0xF935 0x0010      LDRSH    R0,[R5, R0, LSL #+1]
   \       0x24   0x....'....        BL       __aeabi_i2f
   \       0x28   0xF05F 0x517C      MOVS     R1,#+1056964608
   \       0x2C   0x....'....        BL       __aeabi_fmul
   \       0x30   0x0006             MOVS     R6,R0
   \       0x32   0xF9B4 0x0002      LDRSH    R0,[R4, #+2]
   \       0x36   0xF935 0x0010      LDRSH    R0,[R5, R0, LSL #+1]
   \       0x3A   0x....'....        BL       __aeabi_i2f
   \       0x3E   0x....             LDR.N    R1,??DataTable21_15  ;; 0x3e99999a
   \       0x40   0x....'....        BL       __aeabi_fmul
   \       0x44   0x0031             MOVS     R1,R6
   \       0x46   0x....'....        BL       __aeabi_fadd
   \       0x4A   0x0006             MOVS     R6,R0
   \       0x4C   0xF9B4 0x0004      LDRSH    R0,[R4, #+4]
   \       0x50   0xF935 0x0010      LDRSH    R0,[R5, R0, LSL #+1]
   \       0x54   0x....'....        BL       __aeabi_i2f
   \       0x58   0x....             LDR.N    R1,??DataTable21_16  ;; 0x3e4ccccd
   \       0x5A   0x....'....        BL       __aeabi_fmul
   \       0x5E   0x0031             MOVS     R1,R6
   \       0x60   0x....'....        BL       __aeabi_fadd
   \       0x64   0x....'....        BL       __aeabi_f2iz
   1604            
   1605            out_val = IMG_COL_CENTER - out_val;
   \       0x68   0xF1D0 0x004F      RSBS     R0,R0,#+79
   1606            if(out_val >= IMG_COL_CENTER)
   \       0x6C   0x0001             MOVS     R1,R0
   \       0x6E   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \       0x70   0x294F             CMP      R1,#+79
   \       0x72   0xDB01             BLT.N    ??get_img_error_0
   1607            { out_val = IMG_COL_CENTER;}
   \       0x74   0x204F             MOVS     R0,#+79
   \       0x76   0xE006             B.N      ??get_img_error_1
   1608            else if(out_val <= -IMG_COL_CENTER)
   \                     ??get_img_error_0: (+1)
   \       0x78   0x0001             MOVS     R1,R0
   \       0x7A   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \       0x7C   0xF111 0x0F4E      CMN      R1,#+78
   \       0x80   0xDA01             BGE.N    ??get_img_error_1
   1609            { out_val = -IMG_COL_CENTER;}
   \       0x82   0xF07F 0x004E      MVNS     R0,#+78
   1610            return out_val;
   \                     ??get_img_error_1: (+1)
   \       0x86   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \       0x88   0xBD76             POP      {R1,R2,R4-R6,PC}  ;; return
   1611          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10:
   \        0x0   0x....'....        DC32     FastVal

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_1:
   \        0x0   0x....'....        DC32     fstpoint

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_2:
   \        0x0   0x....'....        DC32     leftFold

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11:
   \        0x0   0x....'....        DC32     rightFold

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_1:
   \        0x0   0x....'....        DC32     row_end_center

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_2:
   \        0x0   0x....'....        DC32     row_left_begin

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_3:
   \        0x0   0x....'....        DC32     row_left_end

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_4:
   \        0x0   0x....'....        DC32     row_right_begin

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_5:
   \        0x0   0x....'....        DC32     row_right_end

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_6:
   \        0x0   0x....'....        DC32     imgbuff

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13:
   \        0x0   0x....'....        DC32     ?_0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14:
   \        0x0   0x....'....        DC32     rightEdge

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14_1:
   \        0x0   0x....'....        DC32     row_right_end

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable15:
   \        0x0   0x....'....        DC32     leftEdge

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable15_1:
   \        0x0   0x....'....        DC32     rightEdge

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable15_2:
   \        0x0   0x....'....        DC32     img_centers

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable15_3:
   \        0x0   0x....'....        DC32     width_templ

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable15_4:
   \        0x0   0x....'....        DC32     row_right_begin

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable15_5:
   \        0x0   0x....'....        DC32     row_left_end

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable15_6:
   \        0x0   0x....'....        DC32     imgbuff

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable15_7:
   \        0x0   0x....'....        DC32     leftFold

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable15_8:
   \        0x0   0x....'....        DC32     row_left_begin

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable15_9:
   \        0x0   0x....'....        DC32     row_end_center

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable15_10:
   \        0x0   0x....'....        DC32     row_right_end

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable15_11:
   \        0x0   0x....'....        DC32     rightFold

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21:
   \        0x0   0x....'....        DC32     row_left_end

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_1:
   \        0x0   0x....'....        DC32     leftEdge

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_2:
   \        0x0   0x....'....        DC32     CAR_JOIN_templ

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_3:
   \        0x0   0x....'....        DC32     row_right_end

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_4:
   \        0x0   0x....'....        DC32     row_right_begin

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_5:
   \        0x0   0x....'....        DC32     rightEdge

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_6:
   \        0x0   0x....'....        DC32     row_end_center

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_7:
   \        0x0   0x....'....        DC32     img_centers

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_8:
   \        0x0   0x....'....        DC32     imgbuff

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_9:
   \        0x0   0x....'....        DC32     FastVal

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_10:
   \        0x0   0x....'....        DC32     `get_img_center::img_cnt`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_11:
   \        0x0   0x....'....        DC32     fstpoint

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_12:
   \        0x0   0x....'....        DC32     row_left_begin

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_13:
   \        0x0   0x....'....        DC32     leftFold

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_14:
   \        0x0   0x....'....        DC32     rightFold

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_15:
   \        0x0   0x3E99'999A        DC32     0x3e99999a

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_16:
   \        0x0   0x3E4C'CCCD        DC32     0x3e4ccccd

   \                                 In section .rodata, align 4
   \                     ?_0:
   \        0x0   0x003B 0x0063      DC16 59, 99, 39, 119, 19, 139, 1, 158
   \               0x0027 0x007
   \              7 0x0013 0x00
   \              8B 0x0001 0x0
   \              09E          
   1612          
   1613          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      32   AlterParam_Line
        32   -> GetTanAlpha
        32   -> __aeabi_f2iz
        32   -> __aeabi_fadd
        32   -> __aeabi_fmul
        32   -> __aeabi_i2f
       0   CarJoinArea_Flag
       0   CenterFilter
       8   EdgeFilter
      32   EdgeInit
        32   -> AlterParam_Clear
        32   -> EdgeFilter
        32   -> SearchLeftEdgeByHeight
        32   -> SearchRightEdgeByHeight
        32   -> get_height
        32   -> get_left
        32   -> get_right
      48   EdgeIrregular
        48   -> JudgeNumInterval
        48   -> Max
        48   -> get_height
        48   -> my_abs
      16   FWD_Compensate
        16   -> AlterParam_Line
       0   FirstCarRun
      56   GetEdgeInflex
        56   -> get_height
        56   -> get_pointFold
      32   GetFirstCenter
        32   -> __aeabi_memcpy4
      16   GetTanAlpha
        16   -> __aeabi_fdiv
        16   -> __aeabi_fmul
        16   -> __aeabi_i2f
       0   ImageParamInit
       0   InCarJoinArea
       0   InRing
       0   JudgeCrossroad
       8   JudgeFast
         8   -> get_height
       0   JudgePreInRing
      32   OffSetEdgeSub
        32   -> __aeabi_f2iz
        32   -> __aeabi_fdiv
        32   -> __aeabi_fmul
        32   -> __aeabi_i2f
        32   -> my_abs
       0   Ramp_Flag
      24   ReSearchLeftEdge
        24   -> get_left
      24   ReSearchRightEdge
        24   -> get_right
       0   ResetEdge
      16   SearchLeftEdgeByHeight
        16   -> get_height
      40   SearchLeftEdgebyRightSide
        40   -> AlterParam_Line
        40   -> GetEdgeInflex
        40   -> Max
        40   -> get_right
      16   SearchLeftTendency
        16   -> JudgeNumInterval
      16   SearchRightEdgeByHeight
        16   -> get_height
      40   SearchRightEdgebyLeftSide
        40   -> AlterParam_Line
        40   -> GetEdgeInflex
        40   -> Max
        40   -> Min
        40   -> get_left
      16   SearchRightTendency
        16   -> JudgeNumInterval
      32   downSearch
        32   -> SearchLeftTendency
        32   -> SearchRightTendency
        32   -> get_left
        32   -> get_right
      24   get_height
        24   -> Max
        24   -> Min
        24   -> img_negedge
        24   -> img_posedge
       8   get_img_center
         8   -> AlterParam_Clear
         8   -> EdgeInit
         8   -> GetEdgeInflex
         8   -> GetFirstCenter
         8   -> ImageParamInit
         8   -> JudgeFast
      24   get_img_error
        24   -> __aeabi_f2iz
        24   -> __aeabi_fadd
        24   -> __aeabi_fmul
        24   -> __aeabi_i2f
      24   get_left
        24   -> Max
        24   -> Min
        24   -> img_negedge
        24   -> img_posedge
       8   get_pointFold
      24   get_right
        24   -> Max
        24   -> Min
        24   -> img_negedge
        24   -> img_posedge
       8   img_negedge
       8   img_posedge
       0   isEdgeStraight
       0   isRamp
       0   preInRing
       0   ring_flag
       0   zebra_Flag


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable10
       4  ??DataTable10_1
       4  ??DataTable10_2
       4  ??DataTable11
       4  ??DataTable11_1
       4  ??DataTable11_2
       4  ??DataTable11_3
       4  ??DataTable11_4
       4  ??DataTable11_5
       4  ??DataTable11_6
       4  ??DataTable13
       4  ??DataTable14
       4  ??DataTable14_1
       4  ??DataTable15
       4  ??DataTable15_1
       4  ??DataTable15_10
       4  ??DataTable15_11
       4  ??DataTable15_2
       4  ??DataTable15_3
       4  ??DataTable15_4
       4  ??DataTable15_5
       4  ??DataTable15_6
       4  ??DataTable15_7
       4  ??DataTable15_8
       4  ??DataTable15_9
       4  ??DataTable21
       4  ??DataTable21_1
       4  ??DataTable21_10
       4  ??DataTable21_11
       4  ??DataTable21_12
       4  ??DataTable21_13
       4  ??DataTable21_14
       4  ??DataTable21_15
       4  ??DataTable21_16
       4  ??DataTable21_2
       4  ??DataTable21_3
       4  ??DataTable21_4
       4  ??DataTable21_5
       4  ??DataTable21_6
       4  ??DataTable21_7
       4  ??DataTable21_8
       4  ??DataTable21_9
      16  ?_0
     160  AlterParam_Line
     240  CAR_JOIN_templ
       2  CarJoinArea_Flag
      66  CenterFilter
      88  EdgeFilter
     384  EdgeInit
    4630  EdgeIrregular
      94  FWD_Compensate
       2  FastVal
       2  FirstCarRun
     476  GetEdgeInflex
     218  GetFirstCenter
      82  GetTanAlpha
      74  ImageParamInit
       2  InCarJoinArea
       2  InRing
       2  JudgeCrossroad
      70  JudgeFast
       4  JudgePreInRing
     152  OffSetEdgeSub
       2  Ramp_Flag
     174  ReSearchLeftEdge
     170  ReSearchRightEdge
       2  ResetEdge
      98  SearchLeftEdgeByHeight
     594  SearchLeftEdgebyRightSide
     138  SearchLeftTendency
      98  SearchRightEdgeByHeight
     606  SearchRightEdgebyLeftSide
     130  SearchRightTendency
     456  downSearch
       2  fstpoint
     212  get_height
     206  get_img_center
     138  get_img_error
     190  get_left
      62  get_pointFold
     188  get_right
     120  img_centers
       2  img_cnt
     288  img_negedge
     288  img_posedge
       4  isEdgeStraight
       4  isRamp
     120  leftEdge
       2  leftFold
     272  left_templ
       2  preInRing
     240  ramp_width
     120  rightEdge
       2  rightFold
     236  right_templ
       2  ring_flag
       2  row_end_center
       2  row_left_begin
       2  row_left_end
       2  row_right_begin
       2  row_right_end
     240  width_templ
       4  zebra_Flag

 
    368 bytes in section .bss
     12 bytes in section .data
  1 244 bytes in section .rodata
 10 732 bytes in section .text
 
 10 732 bytes of CODE  memory
  1 244 bytes of CONST memory
    380 bytes of DATA  memory

Errors: none
Warnings: 6
