###############################################################################
#
# IAR ANSI C/C++ Compiler V8.32.1.169/W32 for ARM         18/May/2019  16:18:37
# Copyright 1999-2018 IAR Systems AB.
#
#    Cpu mode     =  
#    Endian       =  little
#    Source file  =  
#        C:\Users\que\Desktop\AAA_xinbiao\smartcar\lib\CPU\system_MK60DZ10.c
#    Command line =  
#        -f C:\Users\TEMPLA~1.000\AppData\Local\Temp\EWCFA1.tmp
#        (C:\Users\que\Desktop\AAA_xinbiao\smartcar\lib\CPU\system_MK60DZ10.c
#        -D LPLD_K60 -lCN
#        "C:\Users\que\Desktop\AAA_xinbiao\smartcar\project\28-(SDHC)LPLD_SdCard\iar\RAM\List"
#        -lB
#        "C:\Users\que\Desktop\AAA_xinbiao\smartcar\project\28-(SDHC)LPLD_SdCard\iar\RAM\List"
#        -o
#        "C:\Users\que\Desktop\AAA_xinbiao\smartcar\project\28-(SDHC)LPLD_SdCard\iar\RAM\Obj"
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M4 -e --fpu=None --dlib_config "D:\@@\605110 IAR for
#        ARM 8.30\arm\inc\c\DLib_Config_Normal.h" -I
#        "C:\Users\que\Desktop\AAA_xinbiao\smartcar\project\28-(SDHC)LPLD_SdCard\iar\..\app\"
#        -I
#        "C:\Users\que\Desktop\AAA_xinbiao\smartcar\project\28-(SDHC)LPLD_SdCard\iar\..\..\..\lib\CPU\"
#        -I
#        "C:\Users\que\Desktop\AAA_xinbiao\smartcar\project\28-(SDHC)LPLD_SdCard\iar\..\..\..\lib\common\"
#        -I
#        "C:\Users\que\Desktop\AAA_xinbiao\smartcar\project\28-(SDHC)LPLD_SdCard\iar\..\..\..\lib\LPLD\"
#        -I
#        "C:\Users\que\Desktop\AAA_xinbiao\smartcar\project\28-(SDHC)LPLD_SdCard\iar\..\..\..\lib\LPLD\HW\"
#        -I
#        "C:\Users\que\Desktop\AAA_xinbiao\smartcar\project\28-(SDHC)LPLD_SdCard\iar\..\..\..\lib\LPLD\DEV\"
#        -I
#        "C:\Users\que\Desktop\AAA_xinbiao\smartcar\project\28-(SDHC)LPLD_SdCard\iar\..\..\..\lib\uCOS-II\Ports\"
#        -I
#        "C:\Users\que\Desktop\AAA_xinbiao\smartcar\project\28-(SDHC)LPLD_SdCard\iar\..\..\..\lib\uCOS-II\Source\"
#        -I
#        "C:\Users\que\Desktop\AAA_xinbiao\smartcar\project\28-(SDHC)LPLD_SdCard\iar\..\..\..\lib\FatFs\"
#        -I
#        "C:\Users\que\Desktop\AAA_xinbiao\smartcar\project\28-(SDHC)LPLD_SdCard\iar\..\..\..\lib\FatFs\option\"
#        -I
#        "C:\Users\que\Desktop\AAA_xinbiao\smartcar\project\28-(SDHC)LPLD_SdCard\iar\..\..\..\lib\USB\common\"
#        -I
#        "C:\Users\que\Desktop\AAA_xinbiao\smartcar\project\28-(SDHC)LPLD_SdCard\iar\..\..\..\lib\USB\driver\"
#        -I
#        "C:\Users\que\Desktop\AAA_xinbiao\smartcar\project\28-(SDHC)LPLD_SdCard\iar\..\..\..\lib\USB\descriptor\"
#        -I
#        "C:\Users\que\Desktop\AAA_xinbiao\smartcar\project\28-(SDHC)LPLD_SdCard\iar\..\..\..\lib\USB\class\"
#        -I
#        "C:\Users\que\Desktop\AAA_xinbiao\smartcar\project\28-(SDHC)LPLD_SdCard\iar\..\..\..\lib\Me\"
#        -I
#        "C:\Users\que\Desktop\AAA_xinbiao\smartcar\project\28-(SDHC)LPLD_SdCard\iar\..\app\"
#        -I
#        "C:\Users\que\Desktop\AAA_xinbiao\smartcar\project\28-(SDHC)LPLD_SdCard\iar\..\app\"
#        -I
#        "C:\Users\que\Desktop\AAA_xinbiao\smartcar\project\28-(SDHC)LPLD_SdCard\iar\..\..\..\lib\"
#        -I
#        "C:\Users\que\Desktop\AAA_xinbiao\smartcar\project\28-(SDHC)LPLD_SdCard\iar\..\..\..\lib\common\"
#        -I
#        "C:\Users\que\Desktop\AAA_xinbiao\smartcar\project\28-(SDHC)LPLD_SdCard\iar\..\..\..\lib\CPU\"
#        -I
#        "C:\Users\que\Desktop\AAA_xinbiao\smartcar\project\28-(SDHC)LPLD_SdCard\iar\..\..\..\lib\Jay\"
#        -Ol -I "D:\@@\605110 IAR for ARM 8.30\arm\CMSIS\Core\Include\" -I
#        "D:\@@\605110 IAR for ARM 8.30\arm\CMSIS\DSP\Include\" -D
#        ARM_MATH_CM4)
#    Locale       =  C
#    List file    =  
#        C:\Users\que\Desktop\AAA_xinbiao\smartcar\project\28-(SDHC)LPLD_SdCard\iar\RAM\List\system_MK60DZ10.lst
#    Object file  =  
#        C:\Users\que\Desktop\AAA_xinbiao\smartcar\project\28-(SDHC)LPLD_SdCard\iar\RAM\Obj\system_MK60DZ10.o
#
###############################################################################

C:\Users\que\Desktop\AAA_xinbiao\smartcar\lib\CPU\system_MK60DZ10.c
      1          /**
      2           * @file system_MK60DZ10.c
      3           * @version 1.2.1[By LPLD]
      4           * @date 2013-06-18
      5           * @brief MK60DZ10系列单片机系统配置文件
      6           *
      7           * 更改建议:禁止修改
      8           *
      9           * 该代码提供系统配置函数以及一个储存系统主频的全局变量。
     10           * 配置函数主要负责建立系统各模块的时钟。
     11           * 代码还实现常见的系统中断函数。
     12           *
     13           * 版权所有:北京拉普兰德电子技术有限公司
     14           * http://www.lpld.cn
     15           * mail:support@lpld.cn
     16           *
     17           * @par
     18           * 本代码由拉普兰德[LPLD]开发并维护，并向所有使用者开放源代码。
     19           * 开发者可以随意修使用或改源代码。但本段及以上注释应予以保留。
     20           * 不得更改或删除原版权所有者姓名，二次开发者可以加注二次版权所有者。
     21           * 但应在遵守此协议的基础上，开放源代码、不得出售代码本身。
     22           * 拉普兰德不负责由于使用本代码所带来的任何事故、法律责任或相关不良影响。
     23           * 拉普兰德无义务解释、说明本代码的具体原理、功能、实现方法。
     24           * 除非拉普兰德[LPLD]授权，开发者不得将本代码用于商业产品。
     25           */
     26          
     27          #include <stdint.h>
     28          #include "common.h"
     29          
     30          #define DISABLE_WDOG    1
     31          
     32          /*----------------------------------------------------------------------------
     33            定义时钟相关值
     34           *----------------------------------------------------------------------------*/
     35          #define CPU_XTAL_CLK_HZ                 50000000u       //外部有源晶振频率，单位Hz
     36          #define CPU_XTAL32k_CLK_HZ              32768u          //外部32k时钟晶振频率，单位Hz    
     37          #define CPU_INT_SLOW_CLK_HZ             32768u          //慢速内部振荡器的值，单位Hz
     38          #define CPU_INT_FAST_CLK_HZ             4000000u        //快速内部振荡器的值，单位Hz
     39          #define DEFAULT_SYSTEM_CLOCK            100000000u      //默认系统主频，单位Hz
     40          
     41          /**
     42           * @brief 系统主频（单位Hz）
     43           */

   \                                 In section .data, align 4
     44          uint32_t SystemCoreClock = DEFAULT_SYSTEM_CLOCK;
   \                     SystemCoreClock:
   \        0x0   0x05F5'E100        DC32 100000000
     45          
     46          /**
     47           * 初始化系统
     48           *
     49           * @param  none
     50           * @return none
     51           *
     52           * @brief  初始化MCU硬件系统，包括开放IO时钟、初始化主频、初始化调试串口，
     53           *         打印调试信息。SystemInit由MCU启动文件调用。
     54           *         
     55           */

   \                                 In section .text, align 2, keep-with-next
     56          void SystemInit (void) {
   \                     SystemInit: (+1)
   \        0x0   0xB5F8             PUSH     {R3-R7,LR}
   \        0x2   0xB086             SUB      SP,SP,#+24
     57            UART_InitTypeDef term_port_structure;
     58            //使能全部IO时钟
     59            SIM->SCGC5 |= (SIM_SCGC5_PORTA_MASK
     60                        | SIM_SCGC5_PORTB_MASK
     61                        | SIM_SCGC5_PORTC_MASK
     62                        | SIM_SCGC5_PORTD_MASK
     63                        | SIM_SCGC5_PORTE_MASK );
   \        0x4   0x....             LDR.N    R0,??DataTable3_1  ;; 0x40048038
   \        0x6   0x6801             LDR      R1,[R0, #+0]
   \        0x8   0xF451 0x5178      ORRS     R1,R1,#0x3E00
   \        0xC   0x6001             STR      R1,[R0, #+0]
     64          #if (DISABLE_WDOG)
     65            //禁用看门狗模块
     66            /* WDOG_UNLOCK: WDOGUNLOCK=0xC520 */
     67            WDOG->UNLOCK = (uint16_t)0xC520u;     /* Key 1 */
   \        0xE   0x....             LDR.N    R0,??DataTable3_2  ;; 0x4005200e
   \       0x10   0xF24C 0x5120      MOVW     R1,#+50464
   \       0x14   0x8001             STRH     R1,[R0, #+0]
     68            /* WDOG_UNLOCK : WDOGUNLOCK=0xD928 */
     69            WDOG->UNLOCK  = (uint16_t)0xD928u;    /* Key 2 */
   \       0x16   0xF64D 0x1128      MOVW     R1,#+55592
   \       0x1A   0x8001             STRH     R1,[R0, #+0]
     70            /* WDOG_STCTRLH: ??=0,DISTESTWDOG=0,BYTESEL=0,TESTSEL=0,TESTWDOG=0,??=0,STNDBYEN=1,WAITEN=1,STOPEN=1,DBGEN=0,ALLOWUPDATE=1,WINEN=0,IRQRSTEN=0,CLKSRC=1,WDOGEN=0 */
     71            WDOG->STCTRLH = (uint16_t)0x01D2u;
   \       0x1C   0xF44F 0x70E9      MOV      R0,#+466
   \       0x20   0x....             LDR.N    R1,??DataTable3_3  ;; 0x40052000
   \       0x22   0x8008             STRH     R0,[R1, #+0]
     72          #endif /* (DISABLE_WDOG) */
     73            
     74            //将中断向量表、需在RAM中运行的函数等数据拷贝到RAM中
     75            common_relocate();
   \       0x24   0x....'....        BL       common_relocate
     76            
     77            //初始化各部分时钟：系统内核主频、总线时钟、FlexBus时钟、Flash时钟
     78            LPLD_PLL_Setup(CORE_CLK_MHZ);
   \       0x28   0x2064             MOVS     R0,#+100
   \       0x2A   0x....'....        BL       LPLD_PLL_Setup
     79            
     80            //更新内核主频
     81            SystemCoreClockUpdate();
   \       0x2E   0x....'....        BL       SystemCoreClockUpdate
     82            
     83            //获取各部分时钟
     84            g_core_clock = SystemCoreClock;
   \       0x32   0x....             LDR.N    R4,??DataTable3_4
   \       0x34   0x....             LDR.N    R0,??DataTable3_5
   \       0x36   0x6800             LDR      R0,[R0, #+0]
   \       0x38   0x6020             STR      R0,[R4, #+0]
     85            g_bus_clock = g_core_clock / ((uint32_t)((SIM->CLKDIV1 & SIM_CLKDIV1_OUTDIV2_MASK) >> SIM_CLKDIV1_OUTDIV2_SHIFT)+ 1u);
   \       0x3A   0x....             LDR.N    R5,??DataTable3_6
   \       0x3C   0x....             LDR.N    R0,??DataTable3_7  ;; 0x40048044
   \       0x3E   0x6821             LDR      R1,[R4, #+0]
   \       0x40   0x6802             LDR      R2,[R0, #+0]
   \       0x42   0xF3C2 0x6203      UBFX     R2,R2,#+24,#+4
   \       0x46   0x1C52             ADDS     R2,R2,#+1
   \       0x48   0xFBB1 0xF1F2      UDIV     R1,R1,R2
   \       0x4C   0x6029             STR      R1,[R5, #+0]
     86            g_flexbus_clock =  g_core_clock / ((uint32_t)((SIM->CLKDIV1 & SIM_CLKDIV1_OUTDIV3_MASK) >> SIM_CLKDIV1_OUTDIV3_SHIFT)+ 1u);
   \       0x4E   0x....             LDR.N    R6,??DataTable3_8
   \       0x50   0x6821             LDR      R1,[R4, #+0]
   \       0x52   0x6802             LDR      R2,[R0, #+0]
   \       0x54   0xF3C2 0x5203      UBFX     R2,R2,#+20,#+4
   \       0x58   0x1C52             ADDS     R2,R2,#+1
   \       0x5A   0xFBB1 0xF1F2      UDIV     R1,R1,R2
   \       0x5E   0x6031             STR      R1,[R6, #+0]
     87            g_flash_clock =  g_core_clock / ((uint32_t)((SIM->CLKDIV1 & SIM_CLKDIV1_OUTDIV4_MASK) >> SIM_CLKDIV1_OUTDIV4_SHIFT)+ 1u);
   \       0x60   0x....             LDR.N    R7,??DataTable3_9
   \       0x62   0x6821             LDR      R1,[R4, #+0]
   \       0x64   0x6800             LDR      R0,[R0, #+0]
   \       0x66   0xF3C0 0x4003      UBFX     R0,R0,#+16,#+4
   \       0x6A   0x1C40             ADDS     R0,R0,#+1
   \       0x6C   0xFBB1 0xF0F0      UDIV     R0,R1,R0
   \       0x70   0x6038             STR      R0,[R7, #+0]
     88            
     89            //初始化用于打印调试信息的串口模块
     90            //TERM_PORT为UART通道，在k60_card.h中定义
     91            //TERMINAL_BAUD为UART波特率，在k60_card.h中定义
     92            term_port_structure.UART_Uartx = TERM_PORT;
   \       0x72   0x....             LDR.N    R0,??DataTable3_10  ;; 0x400eb000
   \       0x74   0x9001             STR      R0,[SP, #+4]
     93            term_port_structure.UART_BaudRate = TERMINAL_BAUD;
   \       0x76   0xF45F 0x30E1      MOVS     R0,#+115200
   \       0x7A   0x9002             STR      R0,[SP, #+8]
     94            LPLD_UART_Init(term_port_structure);
   \       0x7C   0xA901             ADD      R1,SP,#+4
   \       0x7E   0xB084             SUB      SP,SP,#+16
   \       0x80   0x4668             MOV      R0,SP
   \       0x82   0x2214             MOVS     R2,#+20
   \       0x84   0x....'....        BL       __aeabi_memcpy4
   \       0x88   0xBC0F             POP      {R0-R3}
   \       0x8A   0x....'....        BL       LPLD_UART_Init
     95            
     96            //打印系统调试信息
     97          #ifdef DEBUG_PRINT     
     98            printf("\r\n");   
   \       0x8E   0x....             ADR.N    R0,??DataTable3  ;; 0x0D, 0x0A, 0x00, 0x00
   \       0x90   0x....'....        BL       printf
     99            printf("*********** 基于拉普兰德K60底层库 http://www.lpld.cn ***********\r\n");
   \       0x94   0x....             LDR.N    R0,??DataTable3_11
   \       0x96   0x....'....        BL       printf
    100            printf("OSKinetis固件库版本:%s\tmail:support@lpld.cn\r\n", OSKinetis_Version);
   \       0x9A   0x....             LDR.N    R1,??DataTable3_12
   \       0x9C   0x....             LDR.N    R0,??DataTable3_13
   \       0x9E   0x....'....        BL       printf
    101            printf("系统内核时钟:%dMHz\t总线时钟:%dMHz\r\n", g_core_clock/1000000u, g_bus_clock/1000000u);
   \       0xA2   0x6828             LDR      R0,[R5, #+0]
   \       0xA4   0x....             LDR.N    R1,??DataTable3_14  ;; 0xf4240
   \       0xA6   0xFBB0 0xF2F1      UDIV     R2,R0,R1
   \       0xAA   0x6820             LDR      R0,[R4, #+0]
   \       0xAC   0x....             LDR.N    R1,??DataTable3_14  ;; 0xf4240
   \       0xAE   0xFBB0 0xF1F1      UDIV     R1,R0,R1
   \       0xB2   0x....             LDR.N    R0,??DataTable3_15
   \       0xB4   0x....'....        BL       printf
    102            printf("FlexBus时钟:%dMHz\tFlash时钟:%dMHz\r\n", g_flexbus_clock/1000000u, g_flash_clock/1000000u);
   \       0xB8   0x6838             LDR      R0,[R7, #+0]
   \       0xBA   0x....             LDR.N    R1,??DataTable3_14  ;; 0xf4240
   \       0xBC   0xFBB0 0xF2F1      UDIV     R2,R0,R1
   \       0xC0   0x6830             LDR      R0,[R6, #+0]
   \       0xC2   0x....             LDR.N    R1,??DataTable3_14  ;; 0xf4240
   \       0xC4   0xFBB0 0xF1F1      UDIV     R1,R0,R1
   \       0xC8   0x....             LDR.N    R0,??DataTable3_16
   \       0xCA   0x....'....        BL       printf
    103            printf("系统启动完毕，若要禁用调试输出请定义PRINT_ON_OFF为1(k60_card.h)\r\n");
   \       0xCE   0x....             LDR.N    R0,??DataTable3_17
   \       0xD0   0x....'....        BL       printf
    104            printf("********************************************************************\r\n");
   \       0xD4   0x....             LDR.N    R0,??DataTable3_18
   \       0xD6   0x....'....        BL       printf
    105          #endif
    106            
    107          }
   \       0xDA   0xB007             ADD      SP,SP,#+28
   \       0xDC   0xBDF0             POP      {R4-R7,PC}       ;; return
    108          
    109          /**
    110           * 更新SystemCoreClock
    111           *
    112           * @param  none
    113           * @return none
    114           *
    115           * @brief  更新全局变量SystemCoreClock的值，以便获取最新的系统内核频率。
    116           *         
    117           */

   \                                 In section .text, align 2, keep-with-next
    118          void SystemCoreClockUpdate (void) {
    119            uint32_t temp;
    120            temp =  CPU_XTAL_CLK_HZ *((uint32_t)(MCG->C6 & MCG_C6_VDIV_MASK) + 24u );
   \                     SystemCoreClockUpdate: (+1)
   \        0x0   0x....             LDR.N    R0,??DataTable3_19  ;; 0x40064005
   \        0x2   0x7801             LDRB     R1,[R0, #+0]
   \        0x4   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \        0x6   0xF011 0x011F      ANDS     R1,R1,#0x1F
   \        0xA   0x3118             ADDS     R1,R1,#+24
   \        0xC   0x....             LDR.N    R0,??DataTable3_20  ;; 0x2faf080
   \        0xE   0x4341             MULS     R1,R0,R1
    121            temp = (uint32_t)(temp/((uint32_t)(MCG->C5 & MCG_C5_PRDIV_MASK) +1u ));
   \       0x10   0x....             LDR.N    R0,??DataTable3_21  ;; 0x40064004
   \       0x12   0x7800             LDRB     R0,[R0, #+0]
   \       0x14   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \       0x16   0xF010 0x001F      ANDS     R0,R0,#0x1F
   \       0x1A   0x1C40             ADDS     R0,R0,#+1
   \       0x1C   0xFBB1 0xF0F0      UDIV     R0,R1,R0
    122            SystemCoreClock = temp;
   \       0x20   0x....             LDR.N    R1,??DataTable3_5
   \       0x22   0x6008             STR      R0,[R1, #+0]
    123          }
   \       0x24   0x4770             BX       LR               ;; return
    124          
    125          /**
    126           * 硬件错误中断函数
    127           *
    128           * @param  none
    129           * @return none
    130           *
    131           * @brief  触发此中断的原因一般为：模块使用未初始化、错误的寻址空间等。
    132           *         
    133           */

   \                                 In section .text, align 2, keep-with-next
    134          void HardFault_Handler(void)
    135          {
   \                     HardFault_Handler: (+1)
   \        0x0   0xB580             PUSH     {R7,LR}
    136          #ifdef DEBUG_PRINT 
    137             printf("\r\n****内核发生硬件错误*****\r\n");
   \        0x2   0x....             LDR.N    R0,??DataTable3_22
   \        0x4   0x....'....        BL       printf
    138          #endif
    139             return;
   \        0x8   0xBD01             POP      {R0,PC}          ;; return
    140          }
    141          
    142          /**
    143           * 默认中断函数
    144           *
    145           * @param  none
    146           * @return none
    147           *
    148           * @brief  未定义中断处理函数的中断源会进入此函数，并打印中断向量号。
    149           *         
    150           */

   \                                 In section .text, align 2, keep-with-next
    151          void DefaultISR(void)
    152          {
   \                     DefaultISR: (+1)
   \        0x0   0xB580             PUSH     {R7,LR}
    153             #define VECTORNUM                     (*(volatile uint8_t*)(0xE000ED04)) 
    154          #ifdef DEBUG_PRINT 
    155             printf("\r\n****进入未定义中断,Interrupt Number %d*****\r\n",VECTORNUM-16);
   \        0x2   0x....             LDR.N    R0,??DataTable3_23  ;; 0xe000ed04
   \        0x4   0x7801             LDRB     R1,[R0, #+0]
   \        0x6   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \        0x8   0x3910             SUBS     R1,R1,#+16
   \        0xA   0x....             LDR.N    R0,??DataTable3_24
   \        0xC   0x....'....        BL       printf
    156          #endif
    157             return;
   \       0x10   0xBD01             POP      {R0,PC}          ;; return
    158          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3:
   \        0x0   0x0D 0x0A          DC8      0x0D, 0x0A, 0x00, 0x00
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_1:
   \        0x0   0x4004'8038        DC32     0x40048038

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_2:
   \        0x0   0x4005'200E        DC32     0x4005200e

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_3:
   \        0x0   0x4005'2000        DC32     0x40052000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_4:
   \        0x0   0x....'....        DC32     g_core_clock

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_5:
   \        0x0   0x....'....        DC32     SystemCoreClock

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_6:
   \        0x0   0x....'....        DC32     g_bus_clock

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_7:
   \        0x0   0x4004'8044        DC32     0x40048044

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_8:
   \        0x0   0x....'....        DC32     g_flexbus_clock

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_9:
   \        0x0   0x....'....        DC32     g_flash_clock

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_10:
   \        0x0   0x400E'B000        DC32     0x400eb000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_11:
   \        0x0   0x....'....        DC32     ?_1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_12:
   \        0x0   0x....'....        DC32     ?_3

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_13:
   \        0x0   0x....'....        DC32     ?_2

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_14:
   \        0x0   0x000F'4240        DC32     0xf4240

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_15:
   \        0x0   0x....'....        DC32     ?_4

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_16:
   \        0x0   0x....'....        DC32     ?_5

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_17:
   \        0x0   0x....'....        DC32     ?_6

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_18:
   \        0x0   0x....'....        DC32     ?_7

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_19:
   \        0x0   0x4006'4005        DC32     0x40064005

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_20:
   \        0x0   0x02FA'F080        DC32     0x2faf080

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_21:
   \        0x0   0x4006'4004        DC32     0x40064004

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_22:
   \        0x0   0x....'....        DC32     ?_8

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_23:
   \        0x0   0xE000'ED04        DC32     0xe000ed04

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_24:
   \        0x0   0x....'....        DC32     ?_9

   \                                 In section .rodata, align 4
   \        0x0   0x0D 0x0A          DC8 "\015\012"
   \              0x00         
   \        0x3   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_1:
   \        0x0   0x2A 0x2A          DC8 2AH, 2AH, 2AH, 2AH, 2AH, 2AH, 2AH, 2AH
   \              0x2A 0x2A    
   \              0x2A 0x2A    
   \              0x2A 0x2A    
   \        0x8   0x2A 0x2A          DC8 2AH, 2AH, 2AH, 20H, 0BBH, 0F9H, 0D3H, 0DAH
   \              0x2A 0x20    
   \              0xBB 0xF9    
   \              0xD3 0xDA    
   \       0x10   0xC0 0xAD          DC8 0C0H, 0ADH, 0C6H, 0D5H, 0C0H, 0BCH, 0B5H, 0C2H
   \              0xC6 0xD5    
   \              0xC0 0xBC    
   \              0xB5 0xC2    
   \       0x18   0x4B 0x36          DC8 4BH, 36H, 30H, 0B5H, 0D7H, 0B2H, 0E3H, 0BFH
   \              0x30 0xB5    
   \              0xD7 0xB2    
   \              0xE3 0xBF    
   \       0x20   0xE2 0x20          DC8 0E2H, 20H, 68H, 74H, 74H, 70H, 3AH, 2FH
   \              0x68 0x74    
   \              0x74 0x70    
   \              0x3A 0x2F    
   \       0x28   0x2F 0x77          DC8 2FH, 77H, 77H, 77H, 2EH, 6CH, 70H, 6CH
   \              0x77 0x77    
   \              0x2E 0x6C    
   \              0x70 0x6C    
   \       0x30   0x64 0x2E          DC8 64H, 2EH, 63H, 6EH, 20H, 2AH, 2AH, 2AH
   \              0x63 0x6E    
   \              0x20 0x2A    
   \              0x2A 0x2A    
   \       0x38   0x2A 0x2A          DC8 2AH, 2AH, 2AH, 2AH, 2AH, 2AH, 2AH, 2AH
   \              0x2A 0x2A    
   \              0x2A 0x2A    
   \              0x2A 0x2A    
   \       0x40   0x0D 0x0A          DC8 0DH, 0AH, 0
   \              0x00         
   \       0x43   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_2:
   \        0x0   0x4F 0x53          DC8 "OSKinetis\271\314\274\376\277\342\260\346\261\276:%s\tmail:support@lpld.cn\015\012"
   \              0x4B 0x69    
   \              0x6E 0x65    
   \              0x74 0x69    
   \              0x73 0xB9    
   \              0xCC 0xBC    
   \              0xFE 0xBF    
   \              0xE2 0xB0    
   \              0xE6 0xB1    
   \              0xBE 0x3A    
   \              0x25 0x73    
   \              0x09 0x6D    
   \              0x61 0x69    
   \              0x6C 0x3A    
   \              0x73 0x75    
   \              0x70 0x70    
   \              0x6F 0x72    
   \              0x74 0x40    
   \              0x6C 0x70    
   \              0x6C 0x64    
   \              0x2E 0x63    
   \              0x6E 0x0D    
   \              0x0A 0x00    
   \       0x2E   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_3:
   \        0x0   0x33 0x2E          DC8 "3.03"
   \              0x30 0x33    
   \              0x00         
   \        0x5   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_4:
   \        0x0   0xCF 0xB5          DC8 "\317\265\315\263\304\332\272\313\312\261\326\323:%dMHz\t\327\334\317\337\312\261\326\323:%dMHz\015\012"
   \              0xCD 0xB3    
   \              0xC4 0xDA    
   \              0xBA 0xCB    
   \              0xCA 0xB1    
   \              0xD6 0xD3    
   \              0x3A 0x25    
   \              0x64 0x4D    
   \              0x48 0x7A    
   \              0x09 0xD7    
   \              0xDC 0xCF    
   \              0xDF 0xCA    
   \              0xB1 0xD6    
   \              0xD3 0x3A    
   \              0x25 0x64    
   \              0x4D 0x48    
   \              0x7A 0x0D    
   \              0x0A 0x00    

   \                                 In section .rodata, align 4
   \                     ?_5:
   \        0x0   0x46 0x6C          DC8 "FlexBus\312\261\326\323:%dMHz\tFlash\312\261\326\323:%dMHz\015\012"
   \              0x65 0x78    
   \              0x42 0x75    
   \              0x73 0xCA    
   \              0xB1 0xD6    
   \              0xD3 0x3A    
   \              0x25 0x64    
   \              0x4D 0x48    
   \              0x7A 0x09    
   \              0x46 0x6C    
   \              0x61 0x73    
   \              0x68 0xCA    
   \              0xB1 0xD6    
   \              0xD3 0x3A    
   \              0x25 0x64    
   \              0x4D 0x48    
   \              0x7A 0x0D    
   \              0x0A 0x00    

   \                                 In section .rodata, align 4
   \                     ?_6:
   \        0x0   0xCF 0xB5          DC8 0CFH, 0B5H, 0CDH, 0B3H, 0C6H, 0F4H, 0B6H, 0AFH
   \              0xCD 0xB3    
   \              0xC6 0xF4    
   \              0xB6 0xAF    
   \        0x8   0xCD 0xEA          DC8 0CDH, 0EAH, 0B1H, 0CFH, 0A3H, 0ACH, 0C8H, 0F4H
   \              0xB1 0xCF    
   \              0xA3 0xAC    
   \              0xC8 0xF4    
   \       0x10   0xD2 0xAA          DC8 0D2H, 0AAH, 0BDH, 0FBH, 0D3H, 0C3H, 0B5H, 0F7H
   \              0xBD 0xFB    
   \              0xD3 0xC3    
   \              0xB5 0xF7    
   \       0x18   0xCA 0xD4          DC8 0CAH, 0D4H, 0CAH, 0E4H, 0B3H, 0F6H, 0C7H, 0EBH
   \              0xCA 0xE4    
   \              0xB3 0xF6    
   \              0xC7 0xEB    
   \       0x20   0xB6 0xA8          DC8 0B6H, 0A8H, 0D2H, 0E5H, 50H, 52H, 49H, 4EH
   \              0xD2 0xE5    
   \              0x50 0x52    
   \              0x49 0x4E    
   \       0x28   0x54 0x5F          DC8 54H, 5FH, 4FH, 4EH, 5FH, 4FH, 46H, 46H
   \              0x4F 0x4E    
   \              0x5F 0x4F    
   \              0x46 0x46    
   \       0x30   0xCE 0xAA          DC8 0CEH, 0AAH, 31H, 28H, 6BH, 36H, 30H, 5FH
   \              0x31 0x28    
   \              0x6B 0x36    
   \              0x30 0x5F    
   \       0x38   0x63 0x61          DC8 63H, 61H, 72H, 64H, 2EH, 68H, 29H, 0DH
   \              0x72 0x64    
   \              0x2E 0x68    
   \              0x29 0x0D    
   \       0x40   0x0A 0x00          DC8 0AH, 0
   \       0x42   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_7:
   \        0x0   0x2A 0x2A          DC8 2AH, 2AH, 2AH, 2AH, 2AH, 2AH, 2AH, 2AH
   \              0x2A 0x2A    
   \              0x2A 0x2A    
   \              0x2A 0x2A    
   \        0x8   0x2A 0x2A          DC8 2AH, 2AH, 2AH, 2AH, 2AH, 2AH, 2AH, 2AH
   \              0x2A 0x2A    
   \              0x2A 0x2A    
   \              0x2A 0x2A    
   \       0x10   0x2A 0x2A          DC8 2AH, 2AH, 2AH, 2AH, 2AH, 2AH, 2AH, 2AH
   \              0x2A 0x2A    
   \              0x2A 0x2A    
   \              0x2A 0x2A    
   \       0x18   0x2A 0x2A          DC8 2AH, 2AH, 2AH, 2AH, 2AH, 2AH, 2AH, 2AH
   \              0x2A 0x2A    
   \              0x2A 0x2A    
   \              0x2A 0x2A    
   \       0x20   0x2A 0x2A          DC8 2AH, 2AH, 2AH, 2AH, 2AH, 2AH, 2AH, 2AH
   \              0x2A 0x2A    
   \              0x2A 0x2A    
   \              0x2A 0x2A    
   \       0x28   0x2A 0x2A          DC8 2AH, 2AH, 2AH, 2AH, 2AH, 2AH, 2AH, 2AH
   \              0x2A 0x2A    
   \              0x2A 0x2A    
   \              0x2A 0x2A    
   \       0x30   0x2A 0x2A          DC8 2AH, 2AH, 2AH, 2AH, 2AH, 2AH, 2AH, 2AH
   \              0x2A 0x2A    
   \              0x2A 0x2A    
   \              0x2A 0x2A    
   \       0x38   0x2A 0x2A          DC8 2AH, 2AH, 2AH, 2AH, 2AH, 2AH, 2AH, 2AH
   \              0x2A 0x2A    
   \              0x2A 0x2A    
   \              0x2A 0x2A    
   \       0x40   0x2A 0x2A          DC8 2AH, 2AH, 2AH, 2AH, 0DH, 0AH, 0
   \              0x2A 0x2A    
   \              0x0D 0x0A    
   \              0x00         
   \       0x47   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_8:
   \        0x0   0x0D 0x0A          DC8 "\015\012****\304\332\272\313\267\242\311\372\323\262\274\376\264\355\316\363*****\015\012"
   \              0x2A 0x2A    
   \              0x2A 0x2A    
   \              0xC4 0xDA    
   \              0xBA 0xCB    
   \              0xB7 0xA2    
   \              0xC9 0xFA    
   \              0xD3 0xB2    
   \              0xBC 0xFE    
   \              0xB4 0xED    
   \              0xCE 0xF3    
   \              0x2A 0x2A    
   \              0x2A 0x2A    
   \              0x2A 0x0D    
   \              0x0A 0x00    
   \       0x1E   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_9:
   \        0x0   0x0D 0x0A          DC8 "\015\012****\275\370\310\353\316\264\266\250\322\345\326\320\266\317,Interrupt Number %d*****\015\012"
   \              0x2A 0x2A    
   \              0x2A 0x2A    
   \              0xBD 0xF8    
   \              0xC8 0xEB    
   \              0xCE 0xB4    
   \              0xB6 0xA8    
   \              0xD2 0xE5    
   \              0xD6 0xD0    
   \              0xB6 0xCF    
   \              0x2C 0x49    
   \              0x6E 0x74    
   \              0x65 0x72    
   \              0x72 0x75    
   \              0x70 0x74    
   \              0x20 0x4E    
   \              0x75 0x6D    
   \              0x62 0x65    
   \              0x72 0x20    
   \              0x25 0x64    
   \              0x2A 0x2A    
   \              0x2A 0x2A    
   \              0x2A 0x0D    
   \              0x0A 0x00    
    159          
    160          /**
    161           * 初始化操作系统的滴答定时器(OS Tick)
    162           *
    163           * @param  none
    164           * @return none
    165           *
    166           * @brief  该函数仅在uC/OS等系统中调用，切必须在OSStart()和处理器初始化后调用
    167           *         
    168           */
    169          #if UCOS_II > 0u
    170          void SystemTickInit (void)
    171          {
    172            uint32  cpu_clk_freq;
    173            uint32  cnts;
    174          
    175            cpu_clk_freq = g_core_clock;  //获取SysTick时钟
    176          
    177          #if (OS_VERSION >= 30000u)
    178            cnts  = cpu_clk_freq / (uint32)OSCfg_TickRate_Hz;    
    179          #else
    180            cnts  = cpu_clk_freq / (uint32)OS_TICKS_PER_SEC;        
    181          #endif
    182          
    183            OS_CPU_SysTickInit(cnts);     //初始化uCOS滴答定时器SysTick
    184          }
    185          #endif
    186          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   DefaultISR
         8   -> printf
       8   HardFault_Handler
         8   -> printf
       0   SystemCoreClockUpdate
      64   SystemInit
        48   -> LPLD_PLL_Setup
        48   -> LPLD_UART_Init
        48   -> SystemCoreClockUpdate
        64   -> __aeabi_memcpy4
        48   -> common_relocate
        48   -> printf


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable3
       4  ??DataTable3_1
       4  ??DataTable3_10
       4  ??DataTable3_11
       4  ??DataTable3_12
       4  ??DataTable3_13
       4  ??DataTable3_14
       4  ??DataTable3_15
       4  ??DataTable3_16
       4  ??DataTable3_17
       4  ??DataTable3_18
       4  ??DataTable3_19
       4  ??DataTable3_2
       4  ??DataTable3_20
       4  ??DataTable3_21
       4  ??DataTable3_22
       4  ??DataTable3_23
       4  ??DataTable3_24
       4  ??DataTable3_3
       4  ??DataTable3_4
       4  ??DataTable3_5
       4  ??DataTable3_6
       4  ??DataTable3_7
       4  ??DataTable3_8
       4  ??DataTable3_9
       4  ?_0
      68  ?_1
      48  ?_2
       8  ?_3
      36  ?_4
      36  ?_5
      68  ?_6
      72  ?_7
      32  ?_8
      48  ?_9
      18  DefaultISR
      10  HardFault_Handler
       4  SystemCoreClock
      38  SystemCoreClockUpdate
     222  SystemInit

 
   4 bytes in section .data
 420 bytes in section .rodata
 388 bytes in section .text
 
 388 bytes of CODE  memory
 420 bytes of CONST memory
   4 bytes of DATA  memory

Errors: none
Warnings: 1
