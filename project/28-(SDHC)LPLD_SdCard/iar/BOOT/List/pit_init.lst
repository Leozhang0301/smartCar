###############################################################################
#
# IAR ANSI C/C++ Compiler V7.20.2.7424/W32 for ARM        08/Jul/2017  01:22:39
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        D:\smartcar\backups\双车备份\7-3\测试工程\测试专用\7.13 -
#        比赛\lib\Jay\pit_init.c
#    Command line =  
#        "D:\smartcar\backups\双车备份\7-3\测试工程\测试专用\7.13 -
#        比赛\lib\Jay\pit_init.c" -D LPLD_K60 -lCN
#        "D:\smartcar\backups\双车备份\7-3\测试工程\测试专用\7.13 -
#        比赛\project\28-(SDHC)LPLD_SdCard\iar\BOOT\List\" -lB
#        "D:\smartcar\backups\双车备份\7-3\测试工程\测试专用\7.13 -
#        比赛\project\28-(SDHC)LPLD_SdCard\iar\BOOT\List\" -o
#        "D:\smartcar\backups\双车备份\7-3\测试工程\测试专用\7.13 -
#        比赛\project\28-(SDHC)LPLD_SdCard\iar\BOOT\Obj\" --no_cse --no_unroll
#        --no_inline --no_code_motion --no_tbaa --no_clustering --no_scheduling
#        --debug --endian=little --cpu=Cortex-M4 -e --fpu=None --dlib_config
#        D:\IAR\arm\INC\c\DLib_Config_Normal.h -I
#        "D:\smartcar\backups\双车备份\7-3\测试工程\测试专用\7.13 -
#        比赛\project\28-(SDHC)LPLD_SdCard\iar\..\app\" -I
#        "D:\smartcar\backups\双车备份\7-3\测试工程\测试专用\7.13 -
#        比赛\project\28-(SDHC)LPLD_SdCard\iar\..\..\..\lib\CPU\" -I
#        "D:\smartcar\backups\双车备份\7-3\测试工程\测试专用\7.13 -
#        比赛\project\28-(SDHC)LPLD_SdCard\iar\..\..\..\lib\common\" -I
#        "D:\smartcar\backups\双车备份\7-3\测试工程\测试专用\7.13 -
#        比赛\project\28-(SDHC)LPLD_SdCard\iar\..\..\..\lib\LPLD\" -I
#        "D:\smartcar\backups\双车备份\7-3\测试工程\测试专用\7.13 -
#        比赛\project\28-(SDHC)LPLD_SdCard\iar\..\..\..\lib\LPLD\HW\" -I
#        "D:\smartcar\backups\双车备份\7-3\测试工程\测试专用\7.13 -
#        比赛\project\28-(SDHC)LPLD_SdCard\iar\..\..\..\lib\LPLD\DEV\" -I
#        "D:\smartcar\backups\双车备份\7-3\测试工程\测试专用\7.13 -
#        比赛\project\28-(SDHC)LPLD_SdCard\iar\..\..\..\lib\uCOS-II\Ports\" -I
#        "D:\smartcar\backups\双车备份\7-3\测试工程\测试专用\7.13 -
#        比赛\project\28-(SDHC)LPLD_SdCard\iar\..\..\..\lib\uCOS-II\Source\" -I
#        "D:\smartcar\backups\双车备份\7-3\测试工程\测试专用\7.13 -
#        比赛\project\28-(SDHC)LPLD_SdCard\iar\..\..\..\lib\FatFs\" -I
#        "D:\smartcar\backups\双车备份\7-3\测试工程\测试专用\7.13 -
#        比赛\project\28-(SDHC)LPLD_SdCard\iar\..\..\..\lib\FatFs\option\" -I
#        "D:\smartcar\backups\双车备份\7-3\测试工程\测试专用\7.13 -
#        比赛\project\28-(SDHC)LPLD_SdCard\iar\..\..\..\lib\USB\common\" -I
#        "D:\smartcar\backups\双车备份\7-3\测试工程\测试专用\7.13 -
#        比赛\project\28-(SDHC)LPLD_SdCard\iar\..\..\..\lib\USB\driver\" -I
#        "D:\smartcar\backups\双车备份\7-3\测试工程\测试专用\7.13 -
#        比赛\project\28-(SDHC)LPLD_SdCard\iar\..\..\..\lib\USB\descriptor\" -I
#        "D:\smartcar\backups\双车备份\7-3\测试工程\测试专用\7.13 -
#        比赛\project\28-(SDHC)LPLD_SdCard\iar\..\..\..\lib\USB\class\" -I
#        "D:\smartcar\backups\双车备份\7-3\测试工程\测试专用\7.13 -
#        比赛\lib\Jay\" -Ol -I D:\IAR\arm\CMSIS\Include\ -D ARM_MATH_CM4
#    List file    =  
#        D:\smartcar\backups\双车备份\7-3\测试工程\测试专用\7.13 -
#        比赛\project\28-(SDHC)LPLD_SdCard\iar\BOOT\List\pit_init.lst
#    Object file  =  
#        D:\smartcar\backups\双车备份\7-3\测试工程\测试专用\7.13 -
#        比赛\project\28-(SDHC)LPLD_SdCard\iar\BOOT\Obj\pit_init.o
#
###############################################################################

D:\smartcar\backups\双车备份\7-3\测试工程\测试专用\7.13 - 比赛\lib\Jay\pit_init.c
      1          /*
      2           *  中断
      3           *  测试
      4           *  @JayLin林杰 @厦门大学嘉庚学院 @博学队
      5           */
      6          #include  "common.h"
      7          #include "include.h"
      8          
      9          
     10          void pit0_init(void);
     11          void Isr(void);
     12          void Timingsetting(void);
     13          
     14          

   \                                 In section .bss, align 4
     15          PIT_InitTypeDef pit0_init_struct;
   \                     pit0_init_struct:
   \   00000000                      DS8 20

   \                                 In section .text, align 2, keep-with-next
     16          void pit0_init()
     17          {
   \                     pit0_init: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
     18            pit0_init_struct.PIT_Pitx = PIT0;
   \   00000002   0x2000             MOVS     R0,#+0
   \   00000004   0x....             LDR.N    R1,??DataTable2
   \   00000006   0x7008             STRB     R0,[R1, #+0]
     19            pit0_init_struct.PIT_PeriodMs =2;     //定时周期2秒
   \   00000008   0x2002             MOVS     R0,#+2
   \   0000000A   0x....             LDR.N    R1,??DataTable2
   \   0000000C   0x6088             STR      R0,[R1, #+8]
     20            pit0_init_struct.PIT_Isr =Isr;  //设置中断函数
   \   0000000E   0x.... 0x....      ADR.W    R0,Isr
   \   00000012   0x....             LDR.N    R1,??DataTable2
   \   00000014   0x6108             STR      R0,[R1, #+16]
     21            LPLD_PIT_Init(pit0_init_struct);  
   \   00000016   0x....             LDR.N    R1,??DataTable2
   \   00000018   0xB084             SUB      SP,SP,#+16
   \   0000001A   0x4668             MOV      R0,SP
   \   0000001C   0x2214             MOVS     R2,#+20
   \   0000001E   0x.... 0x....      BL       __aeabi_memcpy4
   \   00000022   0xBC0F             POP      {R0-R3}
   \   00000024   0x.... 0x....      BL       LPLD_PIT_Init
     22            LPLD_PIT_EnableIrq(pit0_init_struct);
   \   00000028   0x....             LDR.N    R1,??DataTable2
   \   0000002A   0xB084             SUB      SP,SP,#+16
   \   0000002C   0x4668             MOV      R0,SP
   \   0000002E   0x2214             MOVS     R2,#+20
   \   00000030   0x.... 0x....      BL       __aeabi_memcpy4
   \   00000034   0xBC0F             POP      {R0-R3}
   \   00000036   0x.... 0x....      BL       LPLD_PIT_EnableIrq
     23          }
   \   0000003A   0xBD01             POP      {R0,PC}          ;; return
     24          
     25          

   \                                 In section .text, align 4, keep-with-next
     26          void Isr(void)
     27          { 
   \                     Isr: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
     28            static u16 FlgtimingCnt=0;
     29            FlgtimingCnt++; 
   \   00000002   0x....             LDR.N    R0,??DataTable2_1
   \   00000004   0x8800             LDRH     R0,[R0, #+0]
   \   00000006   0x1C40             ADDS     R0,R0,#+1
   \   00000008   0x....             LDR.N    R1,??DataTable2_1
   \   0000000A   0x8008             STRH     R0,[R1, #+0]
     30            if(FlgtimingCnt>250) 
   \   0000000C   0x....             LDR.N    R0,??DataTable2_1
   \   0000000E   0x8800             LDRH     R0,[R0, #+0]
   \   00000010   0x28FB             CMP      R0,#+251
   \   00000012   0xDB02             BLT.N    ??Isr_0
     31            {
     32              FlgtimingCnt=1;
   \   00000014   0x2001             MOVS     R0,#+1
   \   00000016   0x....             LDR.N    R1,??DataTable2_1
   \   00000018   0x8008             STRH     R0,[R1, #+0]
     33            }
     34            if(FlgtimingCnt%1 == 0)  //2ms
     35            {
     36              Pit0_2ms_Flag=1;
   \                     ??Isr_0: (+1)
   \   0000001A   0x2001             MOVS     R0,#+1
   \   0000001C   0x....             LDR.N    R1,??DataTable2_2
   \   0000001E   0x7008             STRB     R0,[R1, #+0]
     37            }
     38            if(FlgtimingCnt%5 == 0 )//10ms
   \   00000020   0x....             LDR.N    R0,??DataTable2_1
   \   00000022   0x8800             LDRH     R0,[R0, #+0]
   \   00000024   0x2105             MOVS     R1,#+5
   \   00000026   0xFB90 0xF2F1      SDIV     R2,R0,R1
   \   0000002A   0xFB01 0x0012      MLS      R0,R1,R2,R0
   \   0000002E   0x2800             CMP      R0,#+0
   \   00000030   0xD106             BNE.N    ??Isr_1
     39            {
     40              Pit0_10ms_Flag=1;
   \   00000032   0x2001             MOVS     R0,#+1
   \   00000034   0x....             LDR.N    R1,??DataTable2_3
   \   00000036   0x7008             STRB     R0,[R1, #+0]
     41              //////////////////
     42              Timingsetting();
   \   00000038   0x.... 0x....      BL       Timingsetting
     43              fusion_visualscope();
   \   0000003C   0x.... 0x....      BL       fusion_visualscope
     44            }
     45            if(FlgtimingCnt%10 == 0 )//20ms
   \                     ??Isr_1: (+1)
   \   00000040   0x....             LDR.N    R0,??DataTable2_1
   \   00000042   0x8800             LDRH     R0,[R0, #+0]
   \   00000044   0x210A             MOVS     R1,#+10
   \   00000046   0xFB90 0xF2F1      SDIV     R2,R0,R1
   \   0000004A   0xFB01 0x0012      MLS      R0,R1,R2,R0
   \   0000004E   0x2800             CMP      R0,#+0
   \   00000050   0xD102             BNE.N    ??Isr_2
     46            {
     47              Pit0_20ms_Flag=1;
   \   00000052   0x2001             MOVS     R0,#+1
   \   00000054   0x....             LDR.N    R1,??DataTable2_4
   \   00000056   0x7008             STRB     R0,[R1, #+0]
     48            }
     49          }
   \                     ??Isr_2: (+1)
   \   00000058   0xBD01             POP      {R0,PC}          ;; return

   \                                 In section .bss, align 2
   \                     ??FlgtimingCnt:
   \   00000000                      DS8 2
     50          
     51          

   \                                 In section .text, align 2, keep-with-next
     52          void Timingsetting(void)
     53          {
   \                     Timingsetting: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
     54            static unsigned int Cnt=0;
     55            static unsigned int Cnt2=0;
     56            char Flg=0;
   \   00000002   0x2400             MOVS     R4,#+0
     57            
     58            if(isRun == 1 && Flg == 0)
   \   00000004   0x....             LDR.N    R0,??DataTable2_5
   \   00000006   0x7800             LDRB     R0,[R0, #+0]
   \   00000008   0x2801             CMP      R0,#+1
   \   0000000A   0xD108             BNE.N    ??Timingsetting_0
   \   0000000C   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000000E   0x2C00             CMP      R4,#+0
   \   00000010   0xD105             BNE.N    ??Timingsetting_0
     59            {
     60              Flg=1;
   \   00000012   0x2401             MOVS     R4,#+1
     61              Cnt++;
   \   00000014   0x....             LDR.N    R0,??DataTable2_6
   \   00000016   0x6800             LDR      R0,[R0, #+0]
   \   00000018   0x1C40             ADDS     R0,R0,#+1
   \   0000001A   0x....             LDR.N    R1,??DataTable2_6
   \   0000001C   0x6008             STR      R0,[R1, #+0]
     62            }
     63            if(Cnt>=delay_cnt && Flg == 1)
   \                     ??Timingsetting_0: (+1)
   \   0000001E   0x....             LDR.N    R0,??DataTable2_6
   \   00000020   0x6800             LDR      R0,[R0, #+0]
   \   00000022   0x....             LDR.N    R1,??DataTable2_7
   \   00000024   0x6809             LDR      R1,[R1, #+0]
   \   00000026   0x4288             CMP      R0,R1
   \   00000028   0xD30D             BCC.N    ??Timingsetting_1
   \   0000002A   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000002C   0x2C01             CMP      R4,#+1
   \   0000002E   0xD10A             BNE.N    ??Timingsetting_1
     64            {
     65          //    LPLD_FTM_PWM_ChangeDuty(FTM0,FTM_Ch3,4500);//右轮
     66          //    LPLD_FTM_PWM_ChangeDuty(FTM0,FTM_Ch0,4500);
     67              differential_v();
   \   00000030   0x.... 0x....      BL       differential_v
     68              getLeftspd();
   \   00000034   0x.... 0x....      BL       getLeftspd
     69              getRightspd();
   \   00000038   0x.... 0x....      BL       getRightspd
     70              setLeftspd();
   \   0000003C   0x.... 0x....      BL       setLeftspd
     71              setRightspd();
   \   00000040   0x.... 0x....      BL       setRightspd
     72              Flg=2;
   \   00000044   0x2402             MOVS     R4,#+2
     73              
     74            }
     75            
     76            if(2 == Flg)
   \                     ??Timingsetting_1: (+1)
   \   00000046   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000048   0x2C02             CMP      R4,#+2
   \   0000004A   0xD104             BNE.N    ??Timingsetting_2
     77            {
     78              Cnt2++;
   \   0000004C   0x....             LDR.N    R0,??DataTable2_8
   \   0000004E   0x6800             LDR      R0,[R0, #+0]
   \   00000050   0x1C40             ADDS     R0,R0,#+1
   \   00000052   0x....             LDR.N    R1,??DataTable2_8
   \   00000054   0x6008             STR      R0,[R1, #+0]
     79            }
     80            
     81            if(Cnt2>=target_time)
   \                     ??Timingsetting_2: (+1)
   \   00000056   0x....             LDR.N    R0,??DataTable2_8
   \   00000058   0x6800             LDR      R0,[R0, #+0]
   \   0000005A   0x....             LDR.N    R1,??DataTable2_9
   \   0000005C   0x6809             LDR      R1,[R1, #+0]
   \   0000005E   0x4288             CMP      R0,R1
   \   00000060   0xD302             BCC.N    ??Timingsetting_3
     82            {
     83              
     84              isRun=0;
   \   00000062   0x2000             MOVS     R0,#+0
   \   00000064   0x....             LDR.N    R1,??DataTable2_5
   \   00000066   0x7008             STRB     R0,[R1, #+0]
     85            }
     86            if(0 == isRun)
   \                     ??Timingsetting_3: (+1)
   \   00000068   0x....             LDR.N    R0,??DataTable2_5
   \   0000006A   0x7800             LDRB     R0,[R0, #+0]
   \   0000006C   0x2800             CMP      R0,#+0
   \   0000006E   0xD11A             BNE.N    ??Timingsetting_4
     87            {
     88              Flg=0;
   \   00000070   0x2400             MOVS     R4,#+0
     89              Cnt2=0;
   \   00000072   0x2000             MOVS     R0,#+0
   \   00000074   0x....             LDR.N    R1,??DataTable2_8
   \   00000076   0x6008             STR      R0,[R1, #+0]
     90              Cnt=0;
   \   00000078   0x2000             MOVS     R0,#+0
   \   0000007A   0x....             LDR.N    R1,??DataTable2_6
   \   0000007C   0x6008             STR      R0,[R1, #+0]
     91              LPLD_FTM_PWM_ChangeDuty(FTM0,FTM_Ch0,0);//右轮
   \   0000007E   0x2200             MOVS     R2,#+0
   \   00000080   0x2100             MOVS     R1,#+0
   \   00000082   0x....             LDR.N    R0,??DataTable2_10  ;; 0x40038000
   \   00000084   0x.... 0x....      BL       LPLD_FTM_PWM_ChangeDuty
     92              LPLD_FTM_PWM_ChangeDuty(FTM0,FTM_Ch1,0);
   \   00000088   0x2200             MOVS     R2,#+0
   \   0000008A   0x2101             MOVS     R1,#+1
   \   0000008C   0x....             LDR.N    R0,??DataTable2_10  ;; 0x40038000
   \   0000008E   0x.... 0x....      BL       LPLD_FTM_PWM_ChangeDuty
     93              LPLD_FTM_PWM_ChangeDuty(FTM0,FTM_Ch2,0);//右轮
   \   00000092   0x2200             MOVS     R2,#+0
   \   00000094   0x2102             MOVS     R1,#+2
   \   00000096   0x....             LDR.N    R0,??DataTable2_10  ;; 0x40038000
   \   00000098   0x.... 0x....      BL       LPLD_FTM_PWM_ChangeDuty
     94              LPLD_FTM_PWM_ChangeDuty(FTM0,FTM_Ch3,0);
   \   0000009C   0x2200             MOVS     R2,#+0
   \   0000009E   0x2103             MOVS     R1,#+3
   \   000000A0   0x....             LDR.N    R0,??DataTable2_10  ;; 0x40038000
   \   000000A2   0x.... 0x....      BL       LPLD_FTM_PWM_ChangeDuty
     95            }
     96          }
   \                     ??Timingsetting_4: (+1)
   \   000000A6   0xBD10             POP      {R4,PC}          ;; return

   \                                 In section .bss, align 4
   \                     ??Cnt:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     ??Cnt2:
   \   00000000                      DS8 4

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2:
   \   00000000   0x........         DC32     pit0_init_struct

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_1:
   \   00000000   0x........         DC32     ??FlgtimingCnt

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_2:
   \   00000000   0x........         DC32     Pit0_2ms_Flag

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_3:
   \   00000000   0x........         DC32     Pit0_10ms_Flag

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_4:
   \   00000000   0x........         DC32     Pit0_20ms_Flag

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_5:
   \   00000000   0x........         DC32     isRun

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_6:
   \   00000000   0x........         DC32     ??Cnt

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_7:
   \   00000000   0x........         DC32     delay_cnt

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_8:
   \   00000000   0x........         DC32     ??Cnt2

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_9:
   \   00000000   0x........         DC32     target_time

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_10:
   \   00000000   0x40038000         DC32     0x40038000
     97          
     98          
     99          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   Isr
         8   -> Timingsetting
         8   -> fusion_visualscope
       8   Timingsetting
         8   -> LPLD_FTM_PWM_ChangeDuty
         8   -> differential_v
         8   -> getLeftspd
         8   -> getRightspd
         8   -> setLeftspd
         8   -> setRightspd
      24   pit0_init
         8   -> LPLD_PIT_EnableIrq
         8   -> LPLD_PIT_Init
        24   -> __aeabi_memcpy4


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable2
       4  ??DataTable2_1
       4  ??DataTable2_10
       4  ??DataTable2_2
       4  ??DataTable2_3
       4  ??DataTable2_4
       4  ??DataTable2_5
       4  ??DataTable2_6
       4  ??DataTable2_7
       4  ??DataTable2_8
       4  ??DataTable2_9
       4  Cnt
       4  Cnt2
       2  FlgtimingCnt
      90  Isr
     168  Timingsetting
      60  pit0_init
      20  pit0_init_struct

 
  30 bytes in section .bss
 362 bytes in section .text
 
 362 bytes of CODE memory
  30 bytes of DATA memory

Errors: none
Warnings: none
